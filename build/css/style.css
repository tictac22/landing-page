@font-face {
  font-family: lg;
  font-display: swap;
  src: url("../fonts/lg.woff") format("woff"), url("../fonts/lg.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: OpenSans;
  font-display: swap;
  src: url("../fonts/OpenSans-Bold.woff") format("woff"), url("../fonts/OpenSans-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: OpenSans;
  font-display: swap;
  src: url("../fonts/OpenSans-SemiBold.woff") format("woff"), url("../fonts/OpenSans-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: Quicksand;
  font-display: swap;
  src: url("../fonts/Quicksand-Bold.woff") format("woff"), url("../fonts/Quicksand-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: Quicksand;
  font-display: swap;
  src: url("../fonts/Quicksand-Light.woff") format("woff"), url("../fonts/Quicksand-Light.woff2") format("woff2");
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: Quicksand;
  font-display: swap;
  src: url("../fonts/Quicksand-Medium.woff") format("woff"), url("../fonts/Quicksand-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: Quicksand;
  font-display: swap;
  src: url("../fonts/Quicksand-Regular.woff") format("woff"), url("../fonts/Quicksand-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: Roboto;
  font-display: swap;
  src: url("../fonts/Roboto-Medium.woff") format("woff"), url("../fonts/Roboto-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: Roboto;
  font-display: swap;
  src: url("../fonts/Roboto-Regular.woff") format("woff"), url("../fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Quicksand";
  font-weight: 500;
}

html,
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  height: 100%;
  width: 100%;
  overflow-x: hidden;
  font-size: 18px;
}

body._lock {
  overflow: hidden;
}

h1,
h2,
h3,
h4,
h5,
h6,
ul {
  margin: 0;
  padding: 0;
}

a {
  text-decoration: none;
  color: inherit;
}

li {
  list-style: none;
}

input {
  border: none;
  outline: none;
}

input::-webkit-input-placeholder {
  opacity: 1;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input::-moz-placeholder {
  opacity: 1;
  -moz-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:-moz-placeholder {
  opacity: 1;
  -moz-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:-ms-input-placeholder {
  opacity: 1;
  -ms-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:focus::-webkit-input-placeholder {
  opacity: 0;
  -webkit-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:focus::-moz-placeholder {
  opacity: 0;
  -moz-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:focus:-moz-placeholder {
  opacity: 0;
  -moz-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

input:focus:-ms-input-placeholder {
  opacity: 0;
  -ms-transition: opacity 0.3s ease;
  transition: opacity 0.3s ease;
}

textarea:focus::-webkit-input-placeholder {
  opacity: 0;
}

button {
  border: none;
  outline: none;
  background-color: none;
}

textarea {
  outline: none;
  border: none;
}

address {
  font-style: normal;
}

.wrapper {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  position: relative;
}

.swiper-wrapper {
  min-width: 0;
}

.btn {
  font-family: "Quicksand";
  font-weight: bold;
  font-size: 13px;
  color: #3A79FF;
  padding: 13px 20px 13px 21px;
  background: #D2E1FF;
  border-radius: 2px;
  transition: all 0.3s linear;
  cursor: pointer;
}

.btn:hover {
  color: #2e5fc9;
  background: #a3b9e9;
}

.title {
  font-family: "Roboto";
  font-weight: 500;
  font-size: 10px;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  color: #3D4F9F;
}

.text {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 15px;
  letter-spacing: 0.03em;
  color: #8D96BD;
  line-height: 29px;
}

.container {
  max-width: 925px;
  margin: 0 auto;
  padding: 0 15px;
}

.header__container {
  display: flex;
  max-width: 1097px;
  padding: 30px 15px;
  align-items: center;
  margin: 0 auto;
}

.header__logo {
  width: 26px;
  height: 26px;
  background-color: #5E81FE;
  border-radius: 50%;
  cursor: pointer;
}

.header__menu {
  display: flex;
  flex: 1 1 auto;
  justify-content: flex-end;
  transition: left 0.3s linear;
  z-index: 1000;
}

.header__menu--active {
  left: 50% !important;
  overflow-y: auto;
}

.header__burger {
  display: block;
  margin-left: auto;
  z-index: 1001;
  height: 15px;
  width: 30px;
  position: relative;
  cursor: pointer;
}

.header__burger:before,
.header__burger:after,
.header__burger span {
  transition: all 0.3s linear;
  left: 0;
  position: absolute;
  width: 100%;
  height: 1px;
  background-color: #5E81FE;
}

.header__burger:before,
.header__burger:after {
  content: "";
}

.header__burger:before {
  bottom: 0;
}

.header__burger:after {
  top: 0;
}

.header__burger span {
  top: 50%;
  transform: translate(0px, -50%);
}

.header__burger--active::before {
  bottom: 50%;
  transform: rotate(45deg) translate(0px, 50%);
}

.header__burger--active::after {
  top: 50%;
  transform: rotate(-45deg) translate(0px, -50%);
}

.header__burger--active span {
  opacity: 0;
}

.list-header {
  display: flex;
}

.list-header__nav,
.list-header__socials {
  display: none;
}

.list-header__item {
  display: flex;
  align-items: center;
}

.list-header__item:not(:first-child) {
  margin-left: 42px;
}

.list-header__item img {
  cursor: pointer;
}

.list-header__item img:hover {
  filter: invert(62%) sepia(45%) saturate(7115%) hue-rotate(211deg) brightness(100%) contrast(106%);
}

.list-header__link {
  font-family: "Quicksand";
  font-weight: 500;
  font-size: 12px;
  letter-spacing: 0.05em;
  text-transform: capitalize;
  color: #697CA6;
  text-shadow: 0px 0px 5px #E6E6E6;
  transition: color 0.3s linear;
}

.list-header__link:hover {
  color: #5E81FE;
}

.list-header div {
  margin-top: 13px;
  display: none;
}

@font-face {
  font-family: swiper-icons;
  src: url("data:application/font-woff;charset=utf-8;base64, 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");
  font-weight: 400;
  font-style: normal;
}

:root {
  --swiper-theme-color: #007aff;
}

.swiper {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  z-index: 1;
}

.swiper-vertical > .swiper-wrapper {
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: flex;
  transition-property: transform;
  box-sizing: content-box;
}

.swiper-android .swiper-slide,
.swiper-wrapper {
  transform: translate3d(0px, 0, 0);
}

.swiper-pointer-events {
  touch-action: pan-y;
}

.swiper-pointer-events.swiper-vertical {
  touch-action: pan-x;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  transition-property: transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

.swiper-autoheight,
.swiper-autoheight .swiper-slide {
  height: auto;
}

.swiper-autoheight .swiper-wrapper {
  align-items: flex-start;
  transition-property: transform,height;
}

.swiper-3d,
.swiper-3d.swiper-css-mode .swiper-wrapper {
  perspective: 1200px;
}

.swiper-3d .swiper-cube-shadow,
.swiper-3d .swiper-slide,
.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top,
.swiper-3d .swiper-wrapper {
  transform-style: preserve-3d;
}

.swiper-3d .swiper-slide-shadow,
.swiper-3d .swiper-slide-shadow-bottom,
.swiper-3d .swiper-slide-shadow-left,
.swiper-3d .swiper-slide-shadow-right,
.swiper-3d .swiper-slide-shadow-top {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.swiper-3d .swiper-slide-shadow {
  background: rgba(0, 0, 0, 0.15);
}

.swiper-3d .swiper-slide-shadow-left {
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-right {
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-top {
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-3d .swiper-slide-shadow-bottom {
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.swiper-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}

.swiper-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-horizontal.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
}

.swiper-vertical.swiper-css-mode > .swiper-wrapper {
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory;
}

.swiper-centered > .swiper-wrapper::before {
  content: '';
  flex-shrink: 0;
  order: 9999;
}

.swiper-centered.swiper-horizontal > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-start: var(--swiper-centered-offset-before);
  margin-inline-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-horizontal > .swiper-wrapper::before {
  height: 100%;
  min-height: 1px;
  width: var(--swiper-centered-offset-after);
}

.swiper-centered.swiper-vertical > .swiper-wrapper > .swiper-slide:first-child {
  -webkit-margin-before: var(--swiper-centered-offset-before);
  margin-block-start: var(--swiper-centered-offset-before);
}

.swiper-centered.swiper-vertical > .swiper-wrapper::before {
  width: 100%;
  min-width: 1px;
  height: var(--swiper-centered-offset-after);
}

.swiper-centered > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: center center;
}

.swiper-pagination {
  position: absolute;
  text-align: center;
  transition: .3s opacity;
  transform: translate3d(0, 0, 0);
  z-index: 10;
}

.swiper-pagination.swiper-pagination-hidden {
  opacity: 0;
}

.swiper-horizontal > .swiper-pagination-bullets,
.swiper-pagination-bullets.swiper-pagination-horizontal,
.swiper-pagination-custom,
.swiper-pagination-fraction {
  bottom: 10px;
  left: 0;
  width: 100%;
}

.swiper-pagination-bullets-dynamic {
  overflow: hidden;
  font-size: 0;
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transform: scale(0.33);
  position: relative;
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active {
  transform: scale(1);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main {
  transform: scale(1);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev {
  transform: scale(0.66);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev {
  transform: scale(0.33);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next {
  transform: scale(0.66);
}

.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next {
  transform: scale(0.33);
}

.swiper-pagination-bullet {
  width: var(--swiper-pagination-bullet-width, var(--swiper-pagination-bullet-size, 8px));
  height: var(--swiper-pagination-bullet-height, var(--swiper-pagination-bullet-size, 8px));
  display: inline-block;
  border-radius: 50%;
  background: var(--swiper-pagination-bullet-inactive-color, #000);
  opacity: var(--swiper-pagination-bullet-inactive-opacity, 0.2);
}

button.swiper-pagination-bullet {
  border: none;
  margin: 0;
  padding: 0;
  box-shadow: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.swiper-pagination-clickable .swiper-pagination-bullet {
  cursor: pointer;
}

.swiper-pagination-bullet:only-child {
  display: none !important;
}

.swiper-pagination-bullet-active {
  opacity: var(--swiper-pagination-bullet-opacity, 1);
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
}

.swiper-pagination-vertical.swiper-pagination-bullets,
.swiper-vertical > .swiper-pagination-bullets {
  right: 10px;
  top: 50%;
  transform: translate3d(0px, -50%, 0);
}

.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-vertical > .swiper-pagination-bullets .swiper-pagination-bullet {
  margin: var(--swiper-pagination-bullet-vertical-gap, 6px) 0;
  display: block;
}

.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  top: 50%;
  transform: translateY(-50%);
  width: 8px;
}

.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  display: inline-block;
  transition: .2s transform,.2s top;
}

.swiper-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet {
  margin: 0 var(--swiper-pagination-bullet-horizontal-gap, 4px);
}

.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
}

.swiper-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,
.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transition: .2s transform,.2s left;
}

.swiper-horizontal.swiper-rtl > .swiper-pagination-bullets-dynamic .swiper-pagination-bullet {
  transition: .2s transform,.2s right;
}

.swiper-pagination-progressbar {
  background: rgba(0, 0, 0, 0.25);
  position: absolute;
}

.swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  background: var(--swiper-pagination-color, var(--swiper-theme-color));
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  transform: scale(0);
  transform-origin: left top;
}

.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill {
  transform-origin: right top;
}

.swiper-horizontal > .swiper-pagination-progressbar,
.swiper-pagination-progressbar.swiper-pagination-horizontal,
.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite,
.swiper-vertical > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite {
  width: 100%;
  height: 4px;
  left: 0;
  top: 0;
}

.swiper-horizontal > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,
.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite,
.swiper-pagination-progressbar.swiper-pagination-vertical,
.swiper-vertical > .swiper-pagination-progressbar {
  width: 4px;
  height: 100%;
  left: 0;
  top: 0;
}

.swiper-pagination-lock {
  display: none;
}

:root {
  --swiper-navigation-size: 44px;
}

.swiper-button-next,
.swiper-button-prev {
  position: absolute;
  top: 50%;
  width: calc(var(--swiper-navigation-size)/ 44 * 27);
  height: var(--swiper-navigation-size);
  margin-top: calc(0px - (var(--swiper-navigation-size)/ 2));
  z-index: 10;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--swiper-navigation-color, var(--swiper-theme-color));
}

.swiper-button-next.swiper-button-disabled,
.swiper-button-prev.swiper-button-disabled {
  opacity: .35;
  cursor: auto;
  pointer-events: none;
}

.swiper-button-next:after,
.swiper-button-prev:after {
  font-family: swiper-icons;
  font-size: var(--swiper-navigation-size);
  text-transform: none !important;
  letter-spacing: 0;
  text-transform: none;
  font-variant: initial;
  line-height: 1;
}

.swiper-button-prev,
.swiper-rtl .swiper-button-next {
  left: 10px;
  right: auto;
}

.swiper-button-prev:after,
.swiper-rtl .swiper-button-next:after {
  content: 'prev';
}

.swiper-button-next,
.swiper-rtl .swiper-button-prev {
  right: 10px;
  left: auto;
}

.swiper-button-next:after,
.swiper-rtl .swiper-button-prev:after {
  content: 'next';
}

.swiper-button-lock {
  display: none;
}

.productivity {
  position: relative;
}

.slide-swiper {
  height: 548px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.slide-swiper {
  position: relative;
  background-image: url("../img/slider.png");
  background-repeat: no-repeat;
  background-position: center;
}

.swiper-text {
  position: relative;
  z-index: 2;
  margin-top: -133px;
  padding: 0px 15px;
  text-align: center;
}

.swiper-text__title {
  margin-top: 16px;
  font-family: "Quicksand";
  font-weight: 300;
  font-size: 32px;
  color: #3D4F9F;
}

.swiper-text__text {
  margin: 0 auto;
  margin-top: 28px;
  max-width: 502px;
  text-align: center;
}

.swiper-text__icon {
  margin: auto;
  margin-top: 20px;
  cursor: pointer;
  transition: background-color 0.3s linear;
  width: 52px;
  height: 52px;
  border-radius: 50%;
  background-color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
}

.swiper-text__icon:hover {
  background-color: #faf9f9;
}

.swiper-text__icon:hover div {
  border-color: transparent transparent transparent #3D4F9F;
}

.swiper-text__icon div {
  transition: border-color 0.3s linear;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 5.5px 0 5.5px 10px;
  border-color: transparent transparent transparent #5E81FE;
}

.swiper__img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}

.swiper__img img {
  -o-object-fit: cover;
  object-fit: cover;
  width: 100%;
}

.sponsors {
  margin: 35px 0px;
}

.sponsors__container {
  max-width: 918px;
  margin: 0 auto;
  padding: 0px 15px;
}

.sponsors__items {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
}

.sponsors__item {
  margin-top: 15px;
  flex: 1 1 50%;
  display: flex;
  align-self: baseline;
  justify-content: center;
}

.plan {
  padding: 170px 0px 216px 0px;
  background: #F5F8FF;
}

.plan__container {
  max-width: 925px;
  padding: 0 15px;
  margin: 0 auto;
  position: relative;
}

.plan__container img {
  position: absolute;
  top: 0;
  display: none;
}

.plan__content {
  margin-top: 36px;
  max-width: 413px;
}

.plan__title {
  margin-top: 27px;
  font-family: "Quicksand";
  font-weight: 500;
  font-size: 36px;
  color: #3D4F9F;
}

.plan__text {
  margin-top: 27px;
}

.plan__btns {
  margin-top: 47px;
  display: flex;
  flex-direction: column;
}

.plan__btns-blue {
  width: 130px;
  background-color: #4C85FF;
  box-shadow: 0px 5px 15px rgba(188, 199, 255, 0.75);
  border-radius: 2px;
  padding: 13px 25px;
  padding-right: 31px;
  margin-right: 3px;
  font-weight: bold;
  font-family: "Quicksand";
  font-size: 13px;
  color: #FFFFFF;
  transition: all 0.3s linear;
  display: flex;
  align-items: center;
  position: relative;
}

.plan__btns-blue:hover {
  color: #f0ebeb;
  background: #3f6fd8;
}

.plan__btns-blue:hover:before {
  border-color: transparent transparent transparent #f0ebeb;
}

.plan__btns-blue span {
  position: relative;
}

.plan__btns-blue span:before {
  content: "";
  position: absolute;
  right: -12px;
  bottom: 3px;
  transition: border-color 0.3s linear;
  margin-left: 6px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 3.6px 0 3.6px 6.5px;
  border-color: transparent transparent transparent #fff;
}

.plan__btns-grey {
  margin-top: 5px;
  width: 130px;
  color: #8D96BD;
  font-weight: 500;
  font-family: "Quicksand";
  font-size: 13px;
  border: 1px solid #D1D1E4;
  border-radius: 2px;
  padding: 13px 21px;
  transition: border 0.3s linear;
}

.plan__btns-grey:hover {
  border: 1px solid #b5b5c7;
}

.about {
  padding: 50px 0px;
  position: relative;
  background-image: url("../img/clouds.png");
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

.about__container {
  text-align: center;
}

.about__text {
  margin-top: 20px;
  color: #3D4F9F;
  font-family: "Quicksand";
  font-weight: 500;
  font-size: 24px;
}

.about__row {
  display: flex;
  flex-wrap: wrap;
  margin-top: 30px;
}

.about__column {
  margin-top: 15px;
  flex: 0 1 100%;
  position: relative;
}

.item-about__title {
  font-family: "Roboto";
  font-weight: bold;
  font-size: 14px;
  color: #4074F8;
  margin-top: 20px;
}

.item-about__text {
  margin: 0 auto;
  margin-top: 15px;
  font-family: "Roboto";
  font-weight: 100;
  font-size: 13px;
  line-height: 19px;
  color: #ADB3CB;
  max-width: 140px;
}

.about_btns {
  margin-top: 28px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.about_or {
  font-family: "Roboto";
  font-weight: 400;
  font-size: 12px;
  color: #ADB3CB;
  text-transform: uppercase;
  position: relative;
  margin: 0 12px;
}

.about__btns-red {
  background: #FFD7D7;
  color: #D43F3F;
  transition: all 0.3s linear;
}

.about__btns-red:hover {
  background: #ecb5b5;
  color: #af3131;
}

.productivity__row {
  display: flex;
  flex-wrap: wrap;
}

.productivity__column {
  flex: 0 1 100%;
  text-align: center;
}

.productivity__column-left {
  background: linear-gradient(229.32deg, #6888FF 12.77%, #5E80FF 73.11%);
}

.productivity__column-right {
  background: linear-gradient(101.48deg, #E9EFFF 41.56%, #E0E9FF 81.53%);
}

.productivity__item {
  margin: 32px 0px;
}

.productivity__percents {
  margin-top: 12px;
  font-size: 48px;
  font-family: "Quicksand";
  letter-spacing: 0.03em;
}

.productivity__percents-left {
  color: #FFFFFF;
}

.productivity__percents-right {
  color: #5E80FF;
}

.productivity__price {
  margin-top: 12px;
  font-weight: 500;
  font-family: "Quicksand";
  font-size: 18px;
  letter-spacing: 0.03em;
  color: #FFFFFF;
  margin: 0 auto;
  max-width: 260px;
}

.productivity__price-left {
  color: #fff;
}

.productivity__price-right {
  color: #5E80FF;
}

.blog {
  background: #F5F8FF;
}

.blog__inner {
  margin: 25px 0;
}

.blog__container {
  max-width: 950px !important;
}

.blog__title {
  text-align: center;
}

.blog__subtitle {
  text-align: center;
  margin-top: 20px;
  font-family: "Quicksand";
  font-weight: 500;
  font-size: 24px;
  color: #3D4F9F;
}

.blog__swiper {
  margin-top: 35px;
}

.blog__swipe {
  display: flex;
}

.blog__navigation {
  position: relative;
}

.body__mobile .swipe__gallery-big:before {
  opacity: 1;
}

img[src="../img/gallery3.jpg"] {
  border-radius: 6px;
}

.swipe__container {
  background: #FFFFFF;
  display: flex;
  flex-wrap: wrap;
  padding: 40px 10px;
}

.swipe__gallery {
  flex: 0 1 100%;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 12px;
}

.swipe__gallery-big {
  position: relative;
  display: flex;
}

.swipe__gallery-big img {
  border-radius: 6px;
  width: 100%;
}

.swipe__gallery-big:hover:before {
  opacity: 1;
  visibility: visible;
  pointer-events: all;
}

.swipe__gallery-big:before {
  opacity: 0;
  transition: opacity 0.1s linear;
  visibility: visible;
  pointer-events: none;
  content: "";
  cursor: pointer;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-image: url("../img/svg/look.svg");
  width: 65px;
  height: 65px;
  border-radius: 50%;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
}

.swipe__gallery-small img {
  height: 100%;
  width: 100%;
}

.swipe__info {
  flex: 0 1 100%;
  margin: 20px 0px 0px 0px;
  display: flex;
  flex-direction: column;
}

.swipe__title {
  font-family: "Quicksand";
  font-weight: normal;
  font-size: 36px;
  color: #3D4F9F;
}

.swipe__text {
  margin-top: 8px;
  flex: 1 1 auto;
}

.swipe__extra {
  display: flex;
  align-items: center;
}

.swipe__add {
  font-family: "Quicksand";
  font-weight: bold;
  font-size: 13px;
  color: #A6B6DA;
  margin-left: 12px;
  transition: color 0.3s linear;
}

.swipe__add:hover {
  color: #7486b1;
}

.swiper-button-prev,
.swiper-button-next {
  display: none;
  position: absolute;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  box-shadow: inset 0 0 0 2px;
  width: 24px;
  height: 6px;
  margin-top: 0px;
  transform: translateX(-50%);
  top: 50%;
}

.swiper-button-prev:after,
.swiper-button-next:after {
  content: "";
  display: block;
  box-sizing: border-box;
  position: absolute;
  width: 6px;
  height: 6px;
  transform: rotate(45deg);
}

.swiper-button-prev {
  left: -75px;
}

.swiper-button-prev:after {
  border-bottom: 2px solid;
  border-left: 2px solid;
  left: 0;
  bottom: -2px;
}

.swiper-button-next {
  right: -75px;
}

.swiper-button-next::after {
  border-top: 2px solid;
  border-right: 2px solid;
  right: 0;
  bottom: -2px;
}

@font-face {
  font-family: 'lg';
  src: url("../fonts/lg.woff2?io9a6k") format("woff2"), url("../fonts/lg.ttf?io9a6k") format("truetype"), url("../fonts/lg.woff?io9a6k") format("woff"), url("../fonts/lg.svg?io9a6k#lg") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

.lg-icon {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'lg' !important;
  speak: never;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.lg-container {
  font-family: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
}

.lg-next,
.lg-prev {
  background-color: rgba(0, 0, 0, 0.45);
  border-radius: 2px;
  color: #999;
  cursor: pointer;
  display: block;
  font-size: 22px;
  margin-top: -10px;
  padding: 8px 10px 9px;
  position: absolute;
  top: 50%;
  z-index: 1080;
  outline: none;
  border: none;
}

.lg-next.disabled,
.lg-prev.disabled {
  opacity: 0 !important;
  cursor: default;
}

.lg-next:hover:not(.disabled),
.lg-prev:hover:not(.disabled) {
  color: #fff;
}

.lg-single-item .lg-next,
.lg-single-item
.lg-prev {
  display: none;
}

.lg-next {
  right: 20px;
}

.lg-next:before {
  content: '\e095';
}

.lg-prev {
  left: 20px;
}

.lg-prev:after {
  content: '\e094';
}

@-webkit-keyframes lg-right-end {
  0% {
    left: 0;
  }

  50% {
    left: -30px;
  }

  100% {
    left: 0;
  }
}

@keyframes lg-right-end {
  0% {
    left: 0;
  }

  50% {
    left: -30px;
  }

  100% {
    left: 0;
  }
}

@-webkit-keyframes lg-left-end {
  0% {
    left: 0;
  }

  50% {
    left: 30px;
  }

  100% {
    left: 0;
  }
}

@keyframes lg-left-end {
  0% {
    left: 0;
  }

  50% {
    left: 30px;
  }

  100% {
    left: 0;
  }
}

.lg-outer.lg-right-end .lg-object {
  -webkit-animation: lg-right-end 0.3s;
  animation: lg-right-end 0.3s;
  position: relative;
}

.lg-outer.lg-left-end .lg-object {
  -webkit-animation: lg-left-end 0.3s;
  animation: lg-left-end 0.3s;
  position: relative;
}

.lg-toolbar {
  z-index: 1082;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.lg-media-overlap .lg-toolbar {
  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));
}

.lg-toolbar .lg-icon {
  color: #999;
  cursor: pointer;
  float: right;
  font-size: 24px;
  height: 47px;
  line-height: 27px;
  padding: 10px 0;
  text-align: center;
  width: 50px;
  text-decoration: none !important;
  outline: medium none;
  will-change: color;
  transition: color 0.2s linear;
  background: none;
  border: none;
  box-shadow: none;
}

.lg-toolbar .lg-icon.lg-icon-18 {
  font-size: 18px;
}

.lg-toolbar .lg-icon:hover {
  color: #fff;
}

.lg-toolbar .lg-close:after {
  content: '\e070';
}

.lg-toolbar .lg-maximize {
  font-size: 22px;
}

.lg-toolbar .lg-maximize:after {
  content: '\e90a';
}

.lg-toolbar .lg-download:after {
  content: '\e0f2';
}

.lg-sub-html {
  color: #eee;
  font-size: 16px;
  padding: 10px 40px;
  text-align: center;
  z-index: 1080;
  opacity: 0;
  transition: opacity 0.2s ease-out 0s;
}

.lg-sub-html h4 {
  margin: 0;
  font-size: 13px;
  font-weight: bold;
}

.lg-sub-html p {
  font-size: 12px;
  margin: 5px 0 0;
}

.lg-sub-html a {
  color: inherit;
}

.lg-sub-html a:hover {
  text-decoration: underline;
}

.lg-media-overlap .lg-sub-html {
  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));
}

.lg-item .lg-sub-html {
  position: absolute;
  bottom: 0;
  right: 0;
  left: 0;
}

.lg-error-msg {
  font-size: 14px;
  color: #999;
}

.lg-counter {
  color: #999;
  display: inline-block;
  font-size: 16px;
  padding-left: 20px;
  padding-top: 12px;
  height: 47px;
  vertical-align: middle;
}

.lg-closing .lg-toolbar,
.lg-closing .lg-prev,
.lg-closing .lg-next,
.lg-closing .lg-sub-html {
  opacity: 0;
  transition: transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, color 0.08 linear;
}

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable) .lg-img-wrap,
body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable) .lg-video-cont {
  opacity: 0;
  transform: scale3d(0.5, 0.5, 0.5);
  will-change: transform, opacity;
  transition: transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;
}

body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable).lg-complete .lg-img-wrap,
body:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable).lg-complete .lg-video-cont {
  opacity: 1;
  transform: scale3d(1, 1, 1);
}

.lg-group:after {
  content: '';
  display: table;
  clear: both;
}

.lg-container {
  display: none;
  outline: none;
}

.lg-container.lg-show {
  display: block;
}

.lg-on {
  scroll-behavior: unset;
}

.lg-toolbar,
.lg-prev,
.lg-next,
.lg-pager-outer,
.lg-hide-sub-html .lg-sub-html {
  opacity: 0;
  will-change: transform, opacity;
  transition: transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;
}

.lg-show-in .lg-toolbar,
.lg-show-in .lg-prev,
.lg-show-in .lg-next,
.lg-show-in .lg-pager-outer {
  opacity: 1;
}

.lg-show-in.lg-hide-sub-html .lg-sub-html {
  opacity: 1;
}

.lg-show-in .lg-hide-items .lg-prev {
  opacity: 0;
  transform: translate3d(-10px, 0, 0);
}

.lg-show-in .lg-hide-items .lg-next {
  opacity: 0;
  transform: translate3d(10px, 0, 0);
}

.lg-show-in .lg-hide-items .lg-toolbar {
  opacity: 0;
  transform: translate3d(0, -10px, 0);
}

.lg-show-in .lg-hide-items.lg-hide-sub-html .lg-sub-html {
  opacity: 0;
  transform: translate3d(0, 20px, 0);
}

.lg-outer {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 1050;
  text-align: left;
  opacity: 0.001;
  outline: none;
  will-change: auto;
  overflow: hidden;
  transition: opacity 0.15s ease 0s;
}

.lg-outer * {
  box-sizing: border-box;
}

.lg-outer.lg-zoom-from-image {
  opacity: 1;
}

.lg-outer.lg-visible {
  opacity: 1;
}

.lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-prev-slide,
.lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-next-slide,
.lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-current {
  transition-duration: inherit !important;
  transition-timing-function: inherit !important;
}

.lg-outer.lg-css3.lg-dragging .lg-item.lg-prev-slide,
.lg-outer.lg-css3.lg-dragging .lg-item.lg-next-slide,
.lg-outer.lg-css3.lg-dragging .lg-item.lg-current {
  transition-duration: 0s !important;
  opacity: 1;
}

.lg-outer.lg-grab img.lg-object {
  cursor: -webkit-grab;
  cursor: -o-grab;
  cursor: -ms-grab;
  cursor: grab;
}

.lg-outer.lg-grabbing img.lg-object {
  cursor: move;
  cursor: -webkit-grabbing;
  cursor: -o-grabbing;
  cursor: -ms-grabbing;
  cursor: grabbing;
}

.lg-outer .lg-content {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.lg-outer .lg-inner {
  width: 100%;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  transition: opacity 0s;
  white-space: nowrap;
}

.lg-outer .lg-item {
  display: none !important;
}

.lg-outer .lg-item:not(.lg-start-end-progress) {
  background: url("../images/loading.gif") no-repeat scroll center center transparent;
}

.lg-outer.lg-css3 .lg-prev-slide,
.lg-outer.lg-css3 .lg-current,
.lg-outer.lg-css3 .lg-next-slide {
  display: inline-block !important;
}

.lg-outer.lg-css .lg-current {
  display: inline-block !important;
}

.lg-outer .lg-item,
.lg-outer .lg-img-wrap {
  display: inline-block;
  text-align: center;
  position: absolute;
  width: 100%;
  height: 100%;
}

.lg-outer .lg-item:before,
.lg-outer .lg-img-wrap:before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
}

.lg-outer .lg-img-wrap {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  white-space: nowrap;
  font-size: 0;
}

.lg-outer .lg-item.lg-complete {
  background-image: none;
}

.lg-outer .lg-item.lg-current {
  z-index: 1060;
}

.lg-outer .lg-object {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  position: relative;
}

.lg-outer .lg-empty-html.lg-sub-html,
.lg-outer .lg-empty-html .lg-sub-html {
  display: none;
}

.lg-outer.lg-hide-download .lg-download {
  opacity: 0.75;
  pointer-events: none;
}

.lg-outer .lg-first-slide .lg-dummy-img {
  position: absolute;
  top: 50%;
  left: 50%;
}

.lg-outer.lg-components-open:not(.lg-zoomed) .lg-components {
  transform: translate3d(0, 0%, 0);
  opacity: 1;
}

.lg-outer.lg-components-open:not(.lg-zoomed) .lg-sub-html {
  opacity: 1;
  transition: opacity 0.2s ease-out 0.15s;
}

.lg-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1040;
  background-color: #000;
  opacity: 0;
  will-change: auto;
  transition: opacity 333ms ease-in 0s;
}

.lg-backdrop.in {
  opacity: 1;
}

.lg-css3.lg-no-trans .lg-prev-slide,
.lg-css3.lg-no-trans .lg-next-slide,
.lg-css3.lg-no-trans .lg-current {
  transition: none 0s ease 0s !important;
}

.lg-css3.lg-use-css3 .lg-item {
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.lg-css3.lg-fade .lg-item {
  opacity: 0;
}

.lg-css3.lg-fade .lg-item.lg-current {
  opacity: 1;
}

.lg-css3.lg-fade .lg-item.lg-prev-slide,
.lg-css3.lg-fade .lg-item.lg-next-slide,
.lg-css3.lg-fade .lg-item.lg-current {
  transition: opacity 0.1s ease 0s;
}

.lg-css3.lg-use-css3 .lg-item.lg-start-progress {
  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;
}

.lg-css3.lg-use-css3 .lg-item.lg-start-end-progress {
  transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item {
  opacity: 0;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide {
  transform: translate3d(-100%, 0, 0);
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide {
  transform: translate3d(100%, 0, 0);
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
  transform: translate3d(0, 0, 0);
  opacity: 1;
}

.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide,
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide,
.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {
  transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;
}

.lg-container {
  display: none;
}

.lg-container.lg-show {
  display: block;
}

.lg-container.lg-dragging-vertical .lg-backdrop {
  transition-duration: 0s !important;
}

.lg-container.lg-dragging-vertical .lg-css3 .lg-item.lg-current {
  transition-duration: 0s !important;
  opacity: 1;
}

.lg-inline .lg-backdrop,
.lg-inline .lg-outer {
  position: absolute;
}

.lg-inline .lg-backdrop {
  z-index: 1;
}

.lg-inline .lg-outer {
  z-index: 2;
}

.lg-inline .lg-maximize:after {
  content: '\e909';
}

.reviews {
  background: linear-gradient(180deg, #EAF0FF 0%, #F6F9FF 100%);
}

.reviews__inner {
  padding: 100px 0px;
  display: flex;
}

.reviews__info {
  flex: 0 0 100%;
}

.reviews__content {
  width: 50%;
}

.reviews__subtitle {
  color: #3D4F9F;
  margin-top: 41px;
}

.reviews__title {
  margin-top: 14px;
  font-family: "Quicksand";
  font-style: normal;
  font-weight: 500;
  font-size: 36px;
  color: #3D4F9F;
}

.reviews__text {
  max-width: 323px;
  margin-top: 14px;
}

.reviews__slider {
  flex: 0 0 50%;
  transform: translateX(-100%);
}

@media (min-width: 400px) {
  .about_or {
    margin: 0 30px;
  }

  .about_or:before,
  .about_or:after {
    content: "";
    position: absolute;
    width: 15px;
    height: 1px;
    background-color: #DAE4FE;
    top: 50%;
    transform: translateX(-50%);
  }

  .about_or:before {
    left: 32px;
  }

  .about_or:after {
    right: 16px;
  }
}

@media (min-width: 576px) {
  .header__burger {
    display: none;
  }

  .list-header__nav {
    display: flex;
  }

  .plan__btns {
    flex-direction: row;
  }

  .plan__btns-blue {
    width: initial;
  }

  .plan__btns-grey {
    width: initial;
    margin-top: 0px;
  }

  .about__column {
    flex: 0 1 50%;
  }

  .about_or {
    margin: 0 48px;
  }

  .productivity__column {
    flex: 0 1 50%;
  }

  .productivity__column-left {
    padding-right: 40px;
    text-align: right;
  }

  .productivity__column-right {
    padding-left: 40px;
    text-align: left;
  }

  .productivity__price {
    margin: initial;
  }

  .productivity__price-left {
    margin-left: auto;
  }

  .swipe__container {
    padding: 63px 41px;
  }

  .swipe__add {
    margin-left: 24px;
  }
}

@media (min-width: 692px) {
  .plan__container img {
    display: block;
    right: -82%;
  }
}

@media (min-width: 768px) {
  .header__menu {
    margin-left: 73px;
    justify-content: space-between;
  }

  .list-header__socials {
    display: flex;
  }

  .swiper-text {
    margin-top: -95px;
  }

  .swiper-text__title {
    font-size: 48px;
  }

  .sponsors__items {
    flex-wrap: nowrap;
  }

  .sponsors__item {
    flex: 1 1 20%;
  }

  .about {
    padding: 100px 0px;
  }

  .about__row {
    margin-top: 77px;
  }

  .about__column {
    flex: 0 1 25%;
  }

  .about__column:not(:first-child):after {
    content: "";
    position: absolute;
    top: 60%;
    left: -17px;
    width: 28px;
    background-color: #DAE4FE;
    height: 1px;
  }

  .item-about__title {
    margin-top: 33px;
  }

  .item-about__text {
    margin-top: 25px;
  }

  .about_btns {
    margin-top: 92px;
  }

  .productivity__column-left {
    padding-right: 90px;
  }

  .productivity__column-right {
    padding-right: 90px;
  }

  .productivity__item {
    margin: 67px 0px;
  }

  .blog__inner {
    margin: 104px 0px;
  }

  .blog__swiper {
    margin-top: 75px;
  }
}

@media (min-width: 828px) {
  .plan__container img {
    right: -41%;
  }
}

@media (min-width: 992px) {
  .list-header div {
    margin-top: 0px;
    margin-left: 44px;
    display: block;
  }

  .slide-swiper {
    background-size: cover;
  }

  .plan__container img {
    right: -32%;
  }

  .productivity__percents {
    margin-top: 24px;
  }

  .productivity__price {
    margin-top: 26px;
  }

  .swipe__container {
    flex-wrap: nowrap;
  }

  .swipe__gallery {
    flex: 0 1 50%;
  }

  .swipe__gallery {
    grid-template-rows: 1fr 1fr;
  }

  .swipe__gallery-big {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
  }

  .swipe__gallery-big img {
    width: initial;
  }

  .swipe__gallery-small img {
    width: initial;
  }

  .swipe__gallery-small-2 {
    grid-column: -3;
  }

  .swipe__info {
    flex: 0 1 50%;
    margin: 0px 0px 0px 67px;
  }
}

@media (min-width: 1200px) {
  .swiper-button-prev,
  .swiper-button-next {
    display: block;
  }
}

@media (max-width: 992px) {
  .swipe__extra {
    margin-top: 10px;
  }
}

@media (max-width: 950px) {
  .swipe__gallery-big:before {
    width: calc(35px + (65 - 35) * ((100vw - 320px) / (950 - 320)));
    height: calc(35px + (65 - 35) * ((100vw - 320px) / (950 - 320)));
  }
}

@media (max-width: 576px) {
  .header__menu {
    padding-top: 40px;
    padding-left: 30px;
    flex-direction: column;
    justify-content: flex-start;
    position: fixed;
    top: 0;
    left: 100%;
    background-color: #F5F8FF;
    width: 100%;
    height: 100%;
  }

  .header__menu .list-header {
    display: flex;
    flex-direction: column;
    margin-top: 13px;
  }

  .header__menu .list-header div {
    display: block;
  }

  .header__menu .list-header__item {
    margin-left: 0px !important;
    margin-top: 10px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCJzdHlsZS5jc3MiLCJ2YXJpYWJsZXMuc2NzcyIsImhlYWRlci5zY3NzIiwic3dpcGVyLWJ1bmRsZS5taW4uc2NzcyIsInNsaWRlci5zY3NzIiwic3BvbnNvcnMuc2NzcyIsInBsYW4uc2NzcyIsImFib3V0LnNjc3MiLCJwcm9kdWN0aXZpdHkuc2NzcyIsImJsb2cuc2NzcyIsImxpZ2h0Z2FsbGVyeS1idW5kbGUubWluLnNjc3MiLCJ0ZXN0aW1vbmlhbHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQztFQUNDLGVBQWE7RUFDYixrQkFBa0I7RUFDbEIscUZBQTJHO0VBQzNHLGdCQUFhO0VBQ2Isa0JBQVk7QUNEZDs7QUFFQTtFREpFLHFCQUFrQjtFQUNsQixrQkFBSztFQUNMLDJHQUFhO0VBQ2IsZ0JBQVc7RUNNWCxrQkFBa0I7QURYbkI7O0FDY0Q7RURYRSxxQkFBSztFQUNMLGtCQUFhO0VBQ2IsbUhBQVk7RUNhWixnQkFBZ0I7RURsQmpCLGtCQUFVO0FDb0JYOztBQUVBO0VEbEJFLHNCQUFhO0VBQ2Isa0JBQVk7RUNvQlosNkdBQTZHO0VEekI5RyxnQkFBVTtFQUNULGtCQUFZO0FDMkJkOztBQUVBO0VEekJFLHNCQUFZO0VDMkJaLGtCQUFrQjtFRGhDbkIsK0dBQVU7RUFDVCxnQkFBWTtFQUNaLGtCQUFrQjtBQ2tDcEI7O0FBRUE7RUFDRSxzQkFBc0I7RUR2Q3ZCLGtCQUFVO0VBQ1QsaUhBQWE7RUFDYixnQkFBYztFQUNkLGtCQUFLO0FDeUNQOztBQUVBO0VEOUNDLHNCQUFVO0VBQ1Qsa0JBQVk7RUFDWixtSEFBa0I7RUFDbEIsZ0JBQUs7RUFDTCxrQkFBYTtBQ2dEZjs7QURwREM7RUFDQyxtQkFBYTtFQUNiLGtCQUFrQjtFQUNsQiwyR0FBNEY7RUFDNUYsZ0JBQWE7RUFDYixrQkFBWTtBQ3VEZDs7QUFFQTtFRG5EQyxtQkFBUztFQUNULGtCQUFTO0VBQ1QsNkdBQXVCO0VBQ3ZCLGdCQUFnQjtFQ3FEZixrQkFBa0I7QURuRHBCOztBQ3NEQTtFRG5EQyxzQkFBc0I7RUFDdEIsU0FBUTtFQUNSLFVBQU87RUFDUCx3QkFBa0I7RUFDbEIsZ0JBQWU7QUNxRGhCOztBQUVBOztFRGpERSxTQUFNO0VBQ1AsVUFBUztFQUNULHNCQUNBO0VDbURDLFlBQVk7RURqRGIsV0FBQTtFQUNBLGtCQUFpQjtFQUNqQixlQUFjO0FDbURmOztBQUVBO0VBQ0UsZ0JBQWdCO0FEakRsQjs7QUNvREE7Ozs7Ozs7RUQvQ3dDLFNBQVM7RUFBRyxVQUFVO0FDd0Q5RDs7QUFFQTtFRHpEb0QscUJBQVk7RUMyRDlELGNBQWM7QUQxRGhCOztBQzZEQTtFQUNFLGdCQUFnQjtBRDdEbEI7O0FDZ0VBO0VBQ0UsWUFBWTtFRGhFZCxhQUFXO0FDa0VYOztBQUVBO0VEbkVBLFVBQVc7RUFBNkIscUNBQVU7RUFBViw2QkFBVTtBQ3NFbEQ7O0FEckVBO0VBQXdDLFVBQVU7RUFBRSxrQ0FBNkI7RUFBN0IsNkJBQTZCO0FDMEVqRjs7QUFFQTtFQUNFLFVBQVU7RUR6RVosa0NBQU07RUFBTiw2QkFBTTtBQzJFTjs7QUFFQTtFQUNFLFVBQVU7RUR6RVosaUNBQVE7RUFBUiw2QkFBUTtBQzJFUjs7QUFFQTtFRHhFQSxVQUFPO0VBQ04scUNBQ0E7RUFEQSw2QkFDQTtBQ3lFRDs7QUFFQTtFRHhFQyxVQUFTO0VBQ1Qsa0NBQXNCO0VBQXRCLDZCQUFzQjtBQzBFdkI7O0FEdkVBO0VBQ0MsVUFBUztFQzBFUixrQ0FBNkI7RUFBN0IsNkJBQTZCO0FEdkUvQjs7QUMwRUE7RUR2RUMsVUFBUztFQUNULGlDQUFjO0VBQWQsNkJBQWM7QUN5RWY7O0FBRUE7RUR2RUMsVUFBVTtBQ3lFWDs7QUFFQTtFQUNFLFlEeEVVO0VDeUVWLGFBQWE7RURyRWYsc0JBQU87QUN1RVA7O0FBRUE7RURyRUMsYUFBQTtFQUNBLFlBQUE7QUN1RUQ7O0FEcEVBO0VBQ0Msa0JBQWE7QUN1RWQ7O0FBRUE7RURyRUMsaUJFNUdrQjtFRjZHbEIsYUFBYTtFQ3VFWixzQkFBc0I7RURyRXhCLGtCQUFXO0FDdUVYOztBQUVBO0VBQ0UsWUFBWTtBRXpMVjs7QUY0TEo7RUV6TFEsd0JBQWtCO0VBQ2xCLGlCQUFhO0VBQ2IsZUFBYztFRjJMcEIsY0FBYztFRXhMWiw0QkFBUTtFQUNKLG1CQUFXO0VBQ1gsa0JBQVk7RUFDWiwyQkRiSztFQ2NMLGVBQWU7QUYwTHZCOztBRXRMSTtFQUNJLGNBQWE7RUFDYixtQkFBYztBRnlMdEI7O0FBRUE7RUV2TFEscUJBQWtCO0VGeUx4QixnQkUvTFU7RUZnTVYsZUV6THFCO0VGMExyQixxQkV6TDJCO0VBRXJCLHlCQUFVO0VGeUxoQixjRXhMZ0I7QUZ5TGxCOztBQUVBO0VBQ0UscUJFeEwyQjtFRnlMM0IsZ0JFeExzQjtFRnlMdEIsZUV4TFU7RUZ5TFYsc0JFeEwyQjtFRnlMM0IsY0V4TG9CO0VGeUxwQixpQkV4TGdCO0FGeUxsQjs7QUFFQTtFQUNFLGdCRXhMc0I7RUZ5THRCLGNFak5HO0VGa05ILGVFeEx1QjtBRnlMekI7O0FBRUE7RUFDRSxhRXhMa0I7RUZ5TGxCLGlCRXZOUztFRndOVCxrQkV0THlCO0VGdUx6QixtQkV0TDBCO0VGdUwxQixjQUFjO0FFakxaOztBRm9MSjtFRWpMUSxXQUFTO0VBSVQsWUFBWTtFQUNaLHlCQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGVBQWU7QUZnTHZCOztBQUVBO0VFNUxLLGFBQUE7RUFBQSxjQUFBO0VGK0xILHlCRWpMc0I7RUZrTHRCLDRCRWpMaUI7RUZrTGpCLGFFakxvQjtBRmtMdEI7O0FBRUE7RUVwTUssb0JBQVE7RUZzTVgsZ0JFOUtPO0FGK0tUOztBQUVBO0VBQ0UsY0U1S087RUE5QkosaUJBK0JLO0VGNktSLGFFNUtrQjtFRjZLbEIsWUU1S21CO0VBRWIsV0FBQTtFRjRLTixrQkUzS3FCO0VGNEtyQixlRTNLcUI7QUY0S3ZCOztBQUVBOzs7RUFHRSwyQkFBMkI7RUVuSzdCLE9BQUE7RUFDSSxrQkFpREg7RUFoREcsV0FBQTtFRnFLRixXRXBLZTtFQUdULHlCQUF1QjtBRm1LL0I7O0FBRUE7O0VBRUUsV0VqS2lCO0FGa0tuQjs7QUFFQTtF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O0FKMm1CZDs7QUFFQTs7RUFFRSwyREFBMkQ7RUl6bUI3RCxjQUFjO0FKMm1CZDs7QUFFQTs7RUl4bUJJLFFBQVE7RUoybUJWLDJCSWhuQlk7RUppbkJaLFVJM21CTTtBSjRtQlI7O0FBRUE7O0VJdG1CUSxxQkFBa0I7RUFDbEIsaUNBQWtCO0FKeW1CMUI7O0FBRUE7O0VJbm1CUSw2REFBUztBSnNtQmpCOztBQUVBOztFQUVFLFNDem9CVTtFRDBvQlYsMkJJcm1Ca0M7RUpzbUJsQyxtQkk1bUJNO0FKNm1CUjs7QUFFQTs7RUFFRSxrQ0lwbUIwQjtBSnFtQjVCOztBQUVBO0VBQ0UsbUNJbm1CMEI7QUpvbUI1Qjs7QUFFQTtFQUNFLCtCSW5tQnNCO0VKb21CdEIsa0JJbm1CeUI7QUpvbUIzQjs7QUFFQTtFQUNFLHFFSXBsQk87RUpxbEJQLGtCSS9tQk87RUpnbkJQLE9Jbm1CYztFSm9tQmQsTUlqbkJPO0VKa25CUCxXSWxtQmM7RUptbUJkLFlJbm5CTztFSm9uQlAsbUJJam1CMEI7RUprbUIxQiwwQklqbUJzQjtBSmttQnhCOztBQUVBO0VBQ0UsMkJJam1CNEI7QUprbUI5Qjs7QUFFQTs7OztFSTNsQlEsV0FBUztFQUNULFdBQVc7RUFDWCxPQUFNO0VBUFQsTUFBQTtBSndtQkw7O0FBRUE7Ozs7RUFJRSxVS3ZyQk07RUx3ckJOLFlLdnJCYztFTHdyQmQsT0t2ckJNO0VBR0osTUFBQTtBTHNyQko7O0FBRUE7RUFDRSxhS3JyQmE7QUxzckJmOztBQUVBO0VBQ0UsOEJLbnJCc0I7QUxvckJ4Qjs7QUFFQTs7RUFFRSxrQktuckJhO0VMb3JCYixRSzFyQkU7RUwyckJGLG1ES2xyQkc7RUxtckJILHFDQUFxQztFTTdzQnZDLDBEQUFNO0VBQ0YsV0FBUTtFQUNSLGVBQVk7RUFDWixhQUFBO0VOK3NCRixtQk05c0JzQjtFTitzQnRCLHVCTTlzQnFCO0VOK3NCckIsZ0VNOXNCbUI7QU4rc0JyQjs7QUFFQTs7RUFFRSxZTTlzQmlCO0VOK3NCakIsWU05c0JrQjtFTitzQmxCLG9CTXh0Qkc7QU55dEJMOztBQUVBOztFQUVFLHlCTTFzQk87RU4yc0JQLHdDTTlzQmtDO0VOK3NCbEMsK0JNMXRCWTtFTjJ0QlosaUJNL3NCcUI7RUFNbkIsb0JBQVc7RU4yc0JiLHFCTTFzQnNCO0VOMnNCdEIsY00xc0JpQjtBTjJzQm5COztBQUVBOztFQUVFLFVNdHNCTTtFTnVzQk4sV0MzdUJVO0FENHVCWjs7QUFFQTs7RUFFRSxlTWxzQm1CO0FObXNCckI7O0FBRUE7O0VBRUUsV01sc0JNO0VObXNCTixVTWxzQmU7QU5tc0JqQjs7QUFFQTs7RUFFRSxlTS9yQlU7QU5nc0JaOztBQUVBO0VBQ0UsYU0vckJtQjtBTmdzQnJCOztBQUVBO0VBQ0Usa0JNL3JCdUI7QU5nc0J6Qjs7QUFFQTtFQUNFLGFNanRCbUI7RU5rdEJuQixhTXJ0Qk87RU5zdEJQLHVCTWxzQjRCO0VObXNCNUIsbUJNbHNCeUI7QU5tc0IzQjs7QUFFQTtFQUNFLGtCTWhzQndCO0VOaXNCeEIsMENNaHNCdUI7RU5pc0J2Qiw0Qk1oc0I2QjtFTmlzQjdCLDJCTWhzQm9DO0FOaXNCdEM7O0FBRUE7RUFDRSxrQk1oc0JrQjtFTmlzQmxCLFVNaHNCa0I7RU5pc0JsQixrQk1oc0IyQjtFTmlzQjNCLGlCTWhzQmtCO0VOaXNCbEIsa0JNaHNCa0I7QU5pc0JwQjs7QUFFQTtFQUNFLGdCTXpyQnNCO0VOMHJCdEIsd0JDN3hCaUI7RUQ4eEJqQixnQk16ckJxQjtFTjByQnJCLGVNenJCcUI7RU4wckJyQixjTXpyQm1CO0FOMHJCckI7O0FBRUE7RUFDRSxjTXpyQm9CO0VOMHJCcEIsZ0JNdHNCa0I7RU51c0JsQixnQk16c0JNO0VOMHNCTixrQk12c0JxQjtBTndzQnZCOztBQUVBO0VBQ0UsWUFBWTtFTzd5QmQsZ0JBQU87RUFDSCxlQUFTO0VBQ1Qsd0NBQWtCO0VBQ2xCLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQWlCO0VBQ2pCLHNCQUFtQjtFQUNuQixhQUFRO0VQK3lCVixtQk90ekJLO0VQdXpCTCx1Qk8veUJ3QjtBUGd6QjFCOztBQUVBO0VBQ0UseUJPMXlCc0I7QVAyeUJ4Qjs7QUFFQTtFQUNFLHlET3p5Qkc7QVAweUJMOztBQUVBO0VBQ0Usb0NPcHlCRztFUHF5QkgsUU94eUJZO0VQeXlCWixTTzd5QkU7RVA4eUJGLG1CT3p5QnNCO0VBSXBCLGdDQUFVO0VQdXlCWix5RE90eUJzQjtBUHV5QnhCOztBQUVBO0VBQ0Usa0JPM3lCVztFUDR5QlgsTU94eUJVO0VQeXlCVixPT3Z5Qk07RVB3eUJOLFFPOXlCRTtFUCt5QkYsU094eUJVO0VQeXlCVixXT3J5QmtCO0VQc3lCbEIsWU9qekJHO0FQa3pCTDs7QUFFQTtFQUNFLG9CT3R5QnlCO0VQc3lCekIsaUJPdHlCeUI7RVB1eUJ6QixXT3R5Qm1CO0FQdXlCckI7O0FBRUE7RU8xeEJJLGdCQUFRO0FQNHhCWjs7QUFFQTtFTzF4QlEsZ0JBQWM7RUFDZCxjQUFZO0VBQ1osaUJBQWlCO0FQNHhCekI7O0FBRUE7RU96eEJJLGFBQUE7RUFDSSxtQkFBYztFQUNkLGVBQVk7QVAyeEJwQjs7QUFFQTtFT3p4QlEsZ0JBQWE7RUFDYixhQUFPO0VBQ1AsYUFBVztFQUNYLG9CQUFtQjtFUDJ4QnpCLHVCT3B5QlU7QVBxeUJaOztBT3J4Qkk7RUFDSSw0QkFBZ0I7RUFDaEIsbUJBQWE7QVB3eEJyQjs7QUFFQTtFQUNFLGdCTzd4QlM7RVA4eEJULGVPeHhCb0I7RVB5eEJwQixjQUFjO0VPcnhCWixrQkFBSztBUHV4QlQ7O0FBRUE7RU9yeEJRLGtCQUFjO0VBQ2QsTUFBQTtFQUNBLGFBQVU7QVB1eEJsQjs7QUFFQTtFQUNFLGdCT3Z4QmtCO0VBRVosZ0JBQVE7QVB1eEJoQjs7QUFFQTtFQUNFLGdCT3J5Qk07RVBzeUJOLHdCT3J4QnlCO0VQc3hCekIsZ0JPcnhCd0I7RVBzeEJ4QixlT3J4QnlCO0VQc3hCekIsY09yeEJzQjtBUHN4QnhCOztBQUVBO0VBQ0UsZ0JPN3lCTTtBUDh5QlI7O0FBRUE7RUFDRSxnQkFBZ0I7RU8vd0JkLGFBQUE7RUFDSSxzQkFBbUI7QVBpeEIzQjs7QUFFQTtFQUNFLFlPaHhCb0I7RVBpeEJwQix5Qk8vd0JPO0VQZ3hCUCxrREFBa0Q7RVE1NUJoRCxrQkFBTztFQUNILGtCQUFhO0VBQ2IsbUJBQ0g7RVI2NUJILGlCQUFpQjtFUTM1QmYsaUJBQUE7RUFDSSx3QkFBYztFQUNkLGVBQVk7RUFDWixjQUFRO0VSNjVCZCwyQlFoNkJZO0VSaTZCWixhUTc1Qlk7RUFFTixtQkFBQTtFUjY1Qk4sa0JRNTVCc0I7QVI2NUJ4Qjs7QUFFQTtFQUNFLGNRNTVCYztFUjY1QmQsbUJRMzVCMkI7QVI0NUI3Qjs7QUFFQTtFQUNFLHlEUW41QnNCO0FSbzVCeEI7O0FBRUE7RUFDRSxrQlE1NUIwQjtBUjY1QjVCOztBQUVBO0VBQ0UsV0FBVztFUXY1QlQsa0JBQVE7RUFDSixZQUFRO0VBQ1IsV0FBUTtFUnk1QmQsb0NRMzVCVTtFUjQ1QlYsZ0JRejVCYztFUjA1QmQsUUFBUTtFUWw1Qk4sU0FBQTtFQUNJLG1CQUFnQjtFQUNoQixpQ0FBZTtFQUNmLHNEQUF3QjtBUm81QmhDOztBQUVBO0VBQ0UsZVFwNUJnQjtFQUVWLFlBQUE7RVJvNUJOLGNRbjVCaUI7RUFFWCxnQkFBQTtFUm01Qk4sd0JRajVCTztFUms1QlAsZUFBZTtFUS80QmIseUJBQVM7RUFDTCxrQkFBZ0I7RUFDaEIsa0JBQWdCO0VBQ2hCLDhCQUF3QjtBUmk1QmhDOztBQUVBO0VRLzRCUSx5QkFBYztBUmk1QnRCOztBQUVBO0VBQ0UsaUJRajVCa0I7RUFFWixrQkFBaUI7RVJpNUJ2QiwwQ1E3NUJXO0VSODVCWCwyQlF0NEJHO0VBVEcsc0JBQUE7RVJpNUJOLDRCUTU0Qk87QVI2NEJUOztBQUVBO0VROTRCUSxrQkFBQTtBUmc1QlI7O0FTcCtCQTtFQUNJLGdCQUFZO0VBQ1osY0FBUztFVHUrQlgsd0JTbCtCRztFVG0rQkgsZ0JTdCtCYztFVHUrQmQsZVN6K0JFO0FUMCtCSjs7QUFFQTtFU24rQkksYUFBUztFVHErQlgsZVNwK0JrQjtFQUdoQixnQkFBWTtBVG0rQmhCOztBQUVBO0VBQ0UsZ0JTbCtCbUI7RVRtK0JuQixjU2wrQmlCO0VUbStCakIsa0JTbCtCb0I7QVRtK0J0Qjs7QUFFQTtFQUNFLHFCU24rQlk7RVRvK0JaLGlCU2orQm9CO0VBSWxCLGVBQVM7RVQrOUJYLGNTOTlCZTtFQUViLGdCQUFBO0FUODlCSjs7QVNsOUJBO0VBQ0ksY0FDSDtFVG85QkMsZ0JBQWdCO0VTbjlCbEIscUJBQVE7RUFDSixnQkFBZTtFVHE5QmpCLGVBQWU7RVNsOUJiLGlCQUFhO0VBQ1QsY0FBWTtFQUNaLGdCQUFhO0FUbzlCckI7O0FBRUE7RUFDRSxnQlN6OUJFO0VUMDlCRixhU3A5Qm1CO0VBRWIsbUJBQW1CO0VUbzlCekIsdUJTNTlCZTtBVDY5QmpCOztBU2o5Qkk7RUFDSSxxQkFBYztFQUlkLGdCQUFhO0VBQ2IsZUFBQTtFQUNBLGNBQWM7RUFMZCx5QkFBd0I7RVR1OUI5QixrQlN6OUJhO0VUMDlCYixjU3Y5QmdCO0FUdzlCbEI7O0FBRUE7RVNsOUJRLG1CQUFLO0VUbzlCWCxjU245Qm9CO0VUbzlCcEIsMkJTMTZCTztBVDI2QlQ7O0FBRUE7RUFDRSxtQlNsOUIyQjtFVG05QjNCLGNTMTlCTTtBVDI5QlI7O0FBRUE7RUFDRSxhU245QnVCO0VUbzlCdkIsZVMvOUJPO0FUZytCVDs7QUFFQTtFQUNFLGNTbitCTztFVG8rQlAsa0JTLzhCd0I7QVRnOUIxQjs7QUFFQTtFQUNFLHNFUy84QnlCO0FUZzlCM0I7O0FBRUE7RUFDRSxzRVMvOEJ1QjtBVGc5QnpCOztBQUVBO0VBQ0UsZ0JTLzhCMEI7QVRnOUI1Qjs7QUFFQTtFQUNFLGdCUzM4QmM7RVQ0OEJkLGVTbjlCcUI7RVRvOUJyQix3QlN0L0JPO0VUdS9CUCxzQlNwOUJ3QjtBVHE5QjFCOztBQUVBO0VBQ0UsY1M1OEJ5QjtBVDY4QjNCOztBQUVBO0VTejhCZ0IsY0FBUTtBVDI4QnhCOztBQUVBO0VTdDhCSSxnQkFBUTtFQUNKLGdCQUFjO0VBQ2Qsd0JBQXdCO0VBS3hCLGVBQWE7RUFDYixzQkFBc0I7RUFMdEIsY0FBUTtFVDA4QmQsY1M3OEJTO0VUODhCVCxnQlMxOEJnQjtBVDI4QmxCOztBU244Qkk7RUFDSSxXQUFXO0FUczhCbkI7O0FBRUE7RUFDRSxjQUFjO0FTbDhCWjs7QVRxOEJKO0VBQ0UsbUJBQW1CO0FTajhCakI7O0FUbzhCSjtFU2o4QlEsY0FBUTtBVG04QmhCOztBQUVBO0VTNzdCSSwyQkFBTztBVCs3Qlg7O0FBRUE7RVM3N0JRLGtCQUFjO0FUKzdCdEI7O0FBRUE7RUFDRSxrQlN0OEJTO0VUdThCVCxnQlNoOEJxQjtFQVBsQix3QkFVVztFVCs3QmQsZ0JTOTdCd0I7RVQrN0J4QixlQUFlO0VTMTdCakIsY0FBQTtBVDQ3QkE7O0FBRUE7RVN2N0JJLGdCQUFlO0FUeTdCbkI7O0FBRUE7RVN2N0JJLGFBQVk7QVR5N0JoQjs7QUFFQTtFQUNFLGtCU3Y4QkY7QVR3OEJBOztBQUVBO0VBQ0UsVVMzN0JhO0FUNDdCZjs7QUFFQTtFQUNFLGtCUzM3QmlCO0FUNDdCbkI7O0FTeDdCQTtFQUNRLG1CQU9QO0VBUkQsYUFBQTtFVDY3QkUsZVMxN0J1QjtFVDI3QnZCLGtCUzE3QnVCO0FUMjdCekI7O0FBRUE7RVN4N0JBLGNBQUE7RUFDSSxhQUFZO0VBRGhCLGtDQUVhO0VUMDdCWCxjU3o3QmtCO0FUMDdCcEI7O0FBRUE7RUFDRSxrQkFBa0I7RVU3cENwQixhQUFVO0FWK3BDVjs7QUFFQTtFVTdwQ0ksa0JBQWtCO0VBQ2xCLFdBQUE7QVYrcENKOztBQUVBO0VVNXBDSSxVQUFBO0VBQ0EsbUJBQVk7RUFDWixtQkFBa0I7QVY4cEN0Qjs7QUFFQTtFVTVwQ0ksVUFBQTtFQUNBLCtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxvQkFBQTtFVjhwQ0YsV0FBVztFVTNwQ1gsZUFBYztFQUNaLGtCQUFhO0VWNnBDZixRQUFRO0VVMXBDUixTQUFRO0VBQ1IsZ0NBQVM7RUFDUCw0Q0FBcUM7RUFDckMsV0FBQTtFQUNBLFlBQVc7RUFDWCxrQkFBZTtFQUNmLHNCQUFjO0VBQ2QsNEJBQWU7RUFDZiwyQkFBaUI7QVY0cENyQjs7QUFFQTtFVTFwQ0ksWUFBUztFQUNULFdBQVM7QVY0cENiOztBVXhwQ0U7RUFDQSxjQUFRO0VBQ04sd0JBQXFCO0VBQ3JCLGFBQVE7RVYycENWLHNCQUFzQjtBVXhwQ3RCOztBVjJwQ0Y7RUFDRSx3QkFBd0I7RVV2cEN4QixtQkFBZ0I7RUFDaEIsZUFBUztFQUNQLGNBQWE7QVZ5cENqQjs7QUFFQTtFQUNFLGVBQWU7RVVycENmLGNBQWdCO0FWdXBDbEI7O0FVbnBDRTtFQUNFLGFBQ0Q7RVZxcENELG1CQUFtQjtBVW5wQ25COztBVnNwQ0Y7RVVscENFLHdCQUFBO0VBQ0UsaUJBQUU7RVZvcENKLGVVbnBDVztFQUVULGNBQUc7RVZtcENMLGlCVWxwQ2U7RUFFYiw2QkFBSTtBVmtwQ1I7O0FVN29DRTtFQUNFLGNBQUU7QVZncENOOztBQUVBOztFQUVFLGFVN29DVztFVjhvQ1gsa0JBQWtCO0VVMW9DbEIsaUNBQWM7RUFDWixvQ0FBRztFVjRvQ0wsMkJVMW9DRztFQUNELFdBQUk7RVYyb0NOLFdVMW9DVTtFQUVSLGVBQUs7RVYwb0NQLDJCVXhvQ0c7RVZ5b0NILFFBQVE7QVV0b0NSOztBVnlvQ0Y7O0VBRUUsV1V0b0NVO0VBRVIsY0FBSTtFVnNvQ04sc0JVcm9DVztFVnNvQ1gsa0JBQWtCO0VVbG9DbEIsVUFBQTtFQUNFLFdBQUU7RVZvb0NKLHdCVW5vQ1c7QVZvb0NiOztBQUVBO0VBQ0UsV1Vqb0NXO0FWa29DYjs7QUFFQTtFQUNFLHdCVS9uQ1c7RUFFVCxzQkFBRztFVituQ0wsT1U5bkNRO0VBRU4sWUFBSTtBVjhuQ1I7O0FVem5DRTtFQUNFLFlBQUc7QVY0bkNQOztBQUVBO0VVeG5DSSxxQkFBSztFVjBuQ1AsdUJVeG5DRztFVnluQ0gsUUFBUTtFVXRuQ1IsWUFBQTtBVnduQ0Y7O0FBRUE7RUFDRSxpQlV0bkNjO0VBRVoscU1BQUk7RVZzbkNOLG1CVXJuQ1c7RVZzbkNYLGtCQUFrQjtFVWxuQ2xCLG1CQUFTO0FWb25DWDs7QUFFQTtFVWxuQ0ksK0VBQ0Q7RVZtbkNELDRCQUE0QjtFVWpuQzVCLFlBQVM7RUFDUCxrQkFBaUI7RUFDakIsbUJBQWM7RUFDZCxvQkFBVztFQUNYLG9CQUFrQjtFVm1uQ3BCLGNBQWM7RVVobkNkLHNDQUFZO0VBQ1YsbUNBQWE7RUFDYixrQ0FBTztBVmtuQ1g7O0FBRUE7RUFDRSw0TUFBNE07QVUvbUM1TTs7QVZrbkNGOztFVTdtQ0kscUNBQVc7RUFDWCxrQkFBZTtFQUNmLFdBQU87RUFDUCxlQUFlO0VBQ2YsY0FBWTtFQUNaLGVBQWE7RUFDYixpQkFBZTtFQUNmLHFCQUFrQjtFQUNsQixrQkFBVztFQUNYLFFBQUE7RUFDQSxhQUFTO0VBQ1QsYUFBYTtFQUNiLFlBQUE7QVZnbkNKOztBQUVBOztFVTdtQ0kscUJBQ0Q7RVYrbUNELGVBQWU7QVU3bUNmOztBVmduQ0Y7O0VVM21DSSxXQUFXO0FWOG1DZjs7QUFFQTs7O0VVeG1DSSxhQUFXO0FWNG1DZjs7QUFFQTtFQUNFLFdBQVc7QVV4bUNYOztBVjJtQ0Y7RVV2bUNFLGdCQUFhO0FWeW1DZjs7QUFFQTtFVXZtQ0ksVUFBVTtBVnltQ2Q7O0FBRUE7RVV2bUNJLGdCQUFlO0FWeW1DbkI7O0FVcm1DRTtFQUNFO0lBQ0EsT0FBUztFQUNUOztFQUdGO0lBQ0UsV0FBVztFQUNYOztFQUdGO0lBQ0UsT0FBTztFVnNtQ1Q7QVVubUNBOztBVmtvQ0Y7RVU5bENJO0lBQ0EsT0FBQTtFQUNBOztFQUdGO0lBQ0ksV0FBSztFQUNQOztFQUVBO0lBQ0EsT0FBQTtFQUNBO0FWK2xDSjs7QUFFQTtFVTdsQ0k7SUFDQSxPQUFBO0VBQ0E7O0VBR0Y7SUFDSSxVQUFLO0VBQ1A7O0VBRUE7SUFDQSxPQUFBO0VBQ0E7QVY4bENKOztBVXpqQ0U7RUFDQTtJQUNBLE9BQVc7RUFDVDs7RUFHRjtJQUNFLFVBQVU7RVZ1bENaOztFVW5sQ0U7SUFDQSxPQUFBO0VBQ0E7QVZzbENKOztBQUVBO0VVbmxDSSxvQ0FBbUI7RVZzbENyQiw0QkFBNEI7RVVsbEM1QixrQkFBWTtBVm9sQ2Q7O0FBRUE7RUFDRSxtQ0FBbUM7RVVobENqQywyQkFBVTtFQUNWLGtCQUFpQjtBVm1sQ3JCOztBVS9rQ0U7RUFDRSxhQUFXO0VBQ1gsT0FBTTtFQUNOLGtCQUFlO0VBQ2YsTUFBTTtFQUNOLFdBQU87QVZrbENYOztBQUVBO0VVaGxDSSw2RUFBYTtBVmtsQ2pCOztBQUVBO0VVaGxDSSxXQUFBO0VBQ0EsZUFBWTtFVmtsQ2QsWUFBWTtFVS9rQ1osZUFBWTtFQUNWLFlBQUE7RUFDQSxpQkFBaUI7RUFDakIsZUFBWTtFVmlsQ2Qsa0JBQWtCO0VVOWtDbEIsV0FBUztFQUNQLGdDQUNEO0VWK2tDRCxvQkFBb0I7RVU3a0NwQixrQkFBb0I7RUFJcEIsNkJBQStCO0VBQzdCLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0FWOGtDSjs7QVUxa0NFO0VBQ0UsZUFBQTtBVjZrQ0o7O0FBRUE7RVUxa0NFLFdBQVM7QVY0a0NYOztBQUVBO0VVMWtDSSxnQkFBZ0I7QVY0a0NwQjs7QVV4a0NFO0VBQ0UsZUFBWTtBVjJrQ2hCOztBQUVBO0VVemtDSSxnQkFBUTtBVjJrQ1o7O0FVdmtDRTtFQUNFLGdCQUFVO0FWMGtDZDs7QUFFQTtFVXhrQ0ksV0FBUztFVjBrQ1gsZUFBZTtFVXZrQ2Ysa0JBQW9CO0VBQ2xCLGtCQUFXO0VBQ1gsYUFBVTtFQUNWLFVBQU87RUFHUCxvQ0FBOEI7QVZ5a0NsQzs7QUFFQTtFQUNFLFNBQVM7RVV0a0NULGVBQVU7RUFDUixpQkFBUztBVndrQ2I7O0FBRUE7RUFDRSxlQUFlO0VVcGtDZixlQUFpQjtBQUNqQjs7QVZ1a0NGO0VBQ0UsY0FBYztBVW5rQ2Q7O0FWc2tDRjtFVWxrQ0UsMEJBQWtCO0FBQ2xCOztBVnFrQ0Y7RVVsa0NJLCtFQUFrQjtBVm9rQ3RCOztBQUVBO0VVamtDRSxrQkFBa0I7RUFDbEIsU0FBVTtFQUNSLFFBQU87RUFDUCxPQUFPO0FWbWtDWDs7QUFFQTtFVWhrQ0UsZUFBVTtFQUNSLFdBQVU7QVZra0NkOztBQUVBO0VVaGtDSSxXQUFTO0VBQ1QscUJBQW1CO0VBQ25CLGVBQ0Q7RVZpa0NELGtCQUFrQjtFVS9qQ2xCLGlCQUFrQjtFQUNoQixZQUFBO0VWaWtDRixzQkFBc0I7QVU5akN0Qjs7QVZpa0NGOzs7O0VVMWpDSSxVQUFTO0VBSVQseUhBQ0Q7QVY4akNIOztBVTNqQ0U7O0VWK2pDQSxVQUFVO0VVdGpDVixpQ0FBMEI7RUFDeEIsK0JBQWtCO0VBS3BCLGdIQUE0RDtBVjJqQzlEOztBQUVBOztFVXZqQ0UsVUFBUztFQU1QLDJCQUFlO0FWeWpDbkI7O0FBRUE7RVV2akNJLFdBQVM7RUFDVCxjQUFhO0VBQ2IsV0FBQTtBVnlqQ0o7O0FBRUE7RVV2akNJLGFBQWE7RUFDYixhQUFZO0FWeWpDaEI7O0FBRUE7RUFDRSxjQUFjO0FVcmpDZDs7QUFFQTtFQUNFLHNCQUFvQjtBVnVqQ3hCOztBQUVBOzs7OztFVWhqQ0ksVUFBQTtFVnNqQ0YsK0JBQStCO0VVL2lDL0Isd0dBQXFDO0FWb2pDdkM7O0FVaGpDRTs7OztFQUlFLFVBQVU7QVZtakNkOztBQUVBO0VVaGpDSSxVQUFBO0FWa2pDSjs7QUFFQTtFVS9pQ0UsVUFBUTtFQUVOLG1DQUFtQztBVmlqQ3ZDOztBQUVBO0VVOWlDRSxVQUFRO0VWaWpDUixrQ0FBa0M7QVU3aUNsQzs7QVZnakNGO0VBQ0UsVUFBVTtFVTNpQ1IsbUNBQW1CO0FWOGlDdkI7O0FVMWlDRTtFQUNFLFVBQUE7RUFFQSxrQ0FDRDtBVjRpQ0g7O0FBRUE7RVUxaUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZUFBWTtFVjRpQ2QsTUFBTTtFVXppQ04sT0FBQTtFQUNFLGFBQWE7RVYyaUNmLGdCQUFnQjtFVXhpQ2hCLGNBQWE7RUFDWCxhQUFTO0VWMGlDWCxpQkFBaUI7RVV2aUNqQixnQkFBYTtFVjJpQ2IsaUNBQWlDO0FVdGlDakM7O0FWeWlDRjtFVW5pQ0Usc0JBQXVCO0FBQ3ZCOztBVndpQ0Y7RVVwaUNFLFVBQVc7QVZzaUNiOztBVWxpQ0U7RUFDRSxVQUFVO0FWcWlDZDs7QUFFQTs7O0VXenRESSx1Q0FBUztFWCt0RFgsOENXNXRERztBWDZ0REw7O0FBRUE7OztFQUlFLGtDV3R0REc7RUFFRCxVQUFBO0FYc3RESjs7QUFFQTtFQUNFLG9CV3J0RHNCO0VYdXREdEIsZVdydERhO0VBRVgsZ0JBQVE7RVhxdERWLFlXcHREZTtBWHF0RGpCOztBQUVBO0VBQ0UsWVdudERlO0VYb3REZix3QkFBd0I7RUFFeEIsbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixPQUFPO0VBQ1AsTUFBTTtFQUNOLFNBQVM7RUFHVCxzQkFBc0I7RUFDdEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsbUZBQW1GO0FBQ3JGOztBQUVBOzs7RUFHRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7RUFDRSxnQ0FBZ0M7QUFDbEM7O0FBRUE7O0VBRUUscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gscUJBQXFCO0VBQ3JCLFlBQVk7RUFDWixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsT0FBTztFQUNQLFFBQVE7RUFDUixNQUFNO0VBQ04sU0FBUztFQUNULG1CQUFtQjtFQUNuQixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsYUFBYTtBQUNmOztBQUVBO0VBQ0UsYUFBYTtFQUNiLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztBQUNYOztBQUVBO0VBRUUsZ0NBQWdDO0VBQ2hDLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFVBQVU7RUFDVix1Q0FBdUM7QUFDekM7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLE9BQU87RUFDUCxRQUFRO0VBQ1IsU0FBUztFQUNULGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsVUFBVTtFQUNWLGlCQUFpQjtFQUdqQixvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7OztFQU1FLHNDQUFzQztBQUN4Qzs7QUFFQTtFQUNFLG1DQUFtQztFQUVuQywyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7OztFQU1FLGdDQUFnQztBQUNsQzs7QUFFQTtFQUlFLG1FQUFtRTtBQUNyRTs7QUFFQTtFQUlFLHVEQUF1RDtBQUN6RDs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUVFLG1DQUFtQztBQUNyQzs7QUFFQTtFQUVFLGtDQUFrQztBQUNwQzs7QUFFQTtFQUVFLCtCQUErQjtFQUMvQixVQUFVO0FBQ1o7O0FBRUE7OztFQU1FLDZFQUE2RTtBQUMvRTs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFFRSxrQ0FBa0M7QUFDcEM7O0FBRUE7RUFFRSxrQ0FBa0M7RUFDbEMsVUFBVTtBQUNaOztBQUVBOztFQUVFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLDZEQUE2RDtBQUMvRDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQix3QkFBd0I7RUFDeEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0U7SUFDRSxjQUFjO0VBQ2hCOztFQUVBOztJQUVFLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsV0FBVztJQUNYLFdBQVc7SUFDWCx5QkFBeUI7SUFDekIsUUFBUTtJQUNSLDJCQUEyQjtFQUM3Qjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLFdBQVc7RUFDYjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsY0FBYztJQUNkLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UsbUJBQW1CO0lBQ25CLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25CO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGNBQWM7SUFDZCxXQUFXO0VBQ2I7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsaUJBQWlCO0lBQ2pCLDhCQUE4QjtFQUNoQzs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLFFBQVE7SUFDUixXQUFXO0lBQ1gsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsV0FBVztFQUNiO0FBQ0Y7O0FBRUE7RUFDRTtJQUNFLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsY0FBYztFQUNoQjs7RUFFQTtJQUNFLHNCQUFzQjtFQUN4Qjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLDJCQUEyQjtFQUM3Qjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLHdCQUF3QjtFQUMxQjtBQUNGOztBQUVBO0VBQ0U7O0lBRUUsY0FBYztFQUNoQjtBQUNGOztBQUVBO0VBQ0U7SUFDRSxnQkFBZ0I7RUFDbEI7QUFDRjs7QUFFQTtFQUNFO0lBQ0UsK0RBQStEO0lBQy9ELGdFQUFnRTtFQUNsRTtBQUNGOztBQUVBO0VBQ0U7SUFDRSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QiwyQkFBMkI7SUFDM0IsZUFBZTtJQUNmLE1BQU07SUFDTixVQUFVO0lBQ1YseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0VBQ2Q7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLGNBQWM7RUFDaEI7O0VBRUE7SUFDRSwyQkFBMkI7SUFDM0IsZ0JBQWdCO0VBQ2xCO0FBQ0YiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbkBtaXhpbiBmb250KCRmb250X25hbWUsICRmaWxlX25hbWUsICR3ZWlnaHQsICRzdHlsZSkge1xyXG5cdEBmb250LWZhY2Uge1xyXG5cdFx0Zm9udC1mYW1pbHk6ICN7JGZvbnRfbmFtZX07XHJcblx0XHRmb250LWRpc3BsYXk6IHN3YXA7XHJcblx0XHRzcmM6IHVybChcIi4uL2ZvbnRzLyN7JGZpbGVfbmFtZX0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy8jeyRmaWxlX25hbWV9LndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xyXG5cdFx0Zm9udC13ZWlnaHQ6ICN7JHdlaWdodH07XHJcblx0XHRmb250LXN0eWxlOiAjeyRzdHlsZX07XHJcblx0fVxyXG59XHJcbkBpbXBvcnQgXCJmb250cy5zY3NzXCI7XHJcbip7XHJcblx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcclxuXHRtYXJnaW46IDA7XHJcblx0cGFkZGluZzowO1xyXG5cdGZvbnQtZmFtaWx5OlwiUXVpY2tzYW5kXCI7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5odG1sLGJvZHl7XHJcblx0bWFyZ2luOiAwO1xyXG5cdHBhZGRpbmc6MDtcclxuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG5cdGhlaWdodDogMTAwJTtcclxuXHR3aWR0aDogMTAwJTtcclxuXHRvdmVyZmxvdy14OiBoaWRkZW47XHJcblx0Zm9udC1zaXplOiAxOHB4O1xyXG5cdFxyXG59XHJcbmJvZHkuX2xvY2t7XHJcblx0b3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5oMSxoMixoMyxoNCxoNSxoNix1bHtcclxuXHRtYXJnaW46IDA7XHJcblx0cGFkZGluZzowO1xyXG59XHJcblxyXG5he1xyXG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRjb2xvcjogaW5oZXJpdDtcclxufVxyXG5saXtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbmlucHV0e1xyXG5cdGJvcmRlcjpub25lO1xyXG5cdG91dGxpbmU6IG5vbmU7XHJcbn1cclxuaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgICAgICAge29wYWNpdHk6IDE7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgICAgICAge29wYWNpdHk6IDE7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAgICAgICAge29wYWNpdHk6IDE7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAgICAgICAge29wYWNpdHk6IDE7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge29wYWNpdHk6IDA7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6Zm9jdXM6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAge29wYWNpdHk6IDA7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6Zm9jdXM6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAge29wYWNpdHk6IDA7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxuaW5wdXQ6Zm9jdXM6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAge29wYWNpdHk6IDA7IHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO31cclxudGV4dGFyZWE6Zm9jdXM6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMDtcclxufVxyXG5idXR0b257XHJcblx0Ym9yZGVyOm5vbmU7XHJcblx0b3V0bGluZTogbm9uZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBub25lO1xyXG59XHJcbnRleHRhcmVhe1xyXG5cdG91dGxpbmU6IG5vbmU7XHJcblx0Ym9yZGVyOiBub25lO1xyXG5cdFxyXG59XHJcbmFkZHJlc3N7XHJcblx0Zm9udC1zdHlsZTogbm9ybWFsIDtcclxufVxyXG4ud3JhcHBlcntcclxuXHRtaW4taGVpZ2h0OiAxMDB2aDtcclxuXHRkaXNwbGF5OiBmbGV4O1xyXG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcblx0cG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcbi5zd2lwZXItd3JhcHBlciB7XHJcblx0bWluLXdpZHRoOiAwO1xyXG59XHJcbkBpbXBvcnQgXCJ2YXJpYWJsZXMuc2Nzc1wiO1xyXG4uYnRuIHtcclxuXHRmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcclxuXHRmb250LXdlaWdodDogYm9sZDtcclxuXHRmb250LXNpemU6IDEzcHg7XHJcblx0Y29sb3I6ICMzQTc5RkY7XHJcblx0cGFkZGluZzoxM3B4IDIwcHggMTNweCAyMXB4O1xyXG5cdGJhY2tncm91bmQ6ICNEMkUxRkY7XHJcblx0Ym9yZGVyLXJhZGl1czogMnB4O1xyXG5cdHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcclxuXHRjdXJzb3I6IHBvaW50ZXI7XHJcblx0Jjpob3ZlciB7XHJcblx0XHRjb2xvcjogIzJlNWZjOTtcclxuXHRcdGJhY2tncm91bmQ6ICNhM2I5ZTk7XHJcblx0fVxyXG59XHJcblxyXG4udGl0bGUge1xyXG5cdGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xyXG5cdGZvbnQtd2VpZ2h0OiA1MDA7XHJcblx0Zm9udC1zaXplOiAxMHB4O1xyXG5cdGxldHRlci1zcGFjaW5nOiAwLjFlbTtcclxuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG5cdGNvbG9yOiRibHVlU2Vjb25kO1xyXG59XHJcbi50ZXh0IHtcclxuXHRmb250LWZhbWlseTogXCJSb2JvdG9cIjtcclxuXHRmb250LXdlaWdodDogNDAwO1xyXG5cdGZvbnQtc2l6ZTogMTVweDtcclxuXHRsZXR0ZXItc3BhY2luZzogMC4wM2VtO1xyXG5cdGNvbG9yOiRibHVlVGhpcmQ7XHJcblx0bGluZS1oZWlnaHQ6IDI5cHg7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcblx0bWF4LXdpZHRoOiA5MjVweDtcclxuXHRtYXJnaW46IDAgYXV0bztcclxuXHRwYWRkaW5nOiAwIDE1cHg7XHJcbn1cclxuQGltcG9ydCBcImhlYWRlci5zY3NzXCI7XHJcbkBpbXBvcnQgXCJzd2lwZXItYnVuZGxlLm1pbi5zY3NzXCI7XHJcbkBpbXBvcnQgXCJzbGlkZXIuc2Nzc1wiO1xyXG5AaW1wb3J0IFwic3BvbnNvcnMuc2Nzc1wiO1xyXG5AaW1wb3J0IFwicGxhbi5zY3NzXCI7XHJcbkBpbXBvcnQgXCJhYm91dC5zY3NzXCI7XHJcbkBpbXBvcnQgXCJwcm9kdWN0aXZpdHkuc2Nzc1wiO1xyXG5AaW1wb3J0IFwiYmxvZy5zY3NzXCI7XHJcbkBpbXBvcnQgXCJsaWdodGdhbGxlcnktYnVuZGxlLm1pbi5zY3NzXCI7XHJcbkBpbXBvcnQgXCJ0ZXN0aW1vbmlhbHMuc2Nzc1wiO1xyXG5cclxuIiwiQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBsZztcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2xnLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvbGcud29mZjJcIikgZm9ybWF0KFwid29mZjJcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBPcGVuU2FucztcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL09wZW5TYW5zLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9PcGVuU2Fucy1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogT3BlblNhbnM7XG4gIGZvbnQtZGlzcGxheTogc3dhcDtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9PcGVuU2Fucy1TZW1pQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL09wZW5TYW5zLVNlbWlCb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogUXVpY2tzYW5kO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUXVpY2tzYW5kLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9RdWlja3NhbmQtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFF1aWNrc2FuZDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1F1aWNrc2FuZC1MaWdodC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL1F1aWNrc2FuZC1MaWdodC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFF1aWNrc2FuZDtcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1F1aWNrc2FuZC1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9RdWlja3NhbmQtTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogUXVpY2tzYW5kO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUXVpY2tzYW5kLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9RdWlja3NhbmQtUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFJvYm90bztcbiAgZm9udC1kaXNwbGF5OiBzd2FwO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL1JvYm90by1NZWRpdW0ud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tTWVkaXVtLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogUm9ib3RvO1xuICBmb250LWRpc3BsYXk6IHN3YXA7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvUm9ib3RvLVJlZ3VsYXIud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Sb2JvdG8tUmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xufVxuXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuaHRtbCxcbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG5ib2R5Ll9sb2NrIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxudWwge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiBpbmhlcml0O1xufVxuXG5saSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmlucHV0IHtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lO1xufVxuXG5pbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG5pbnB1dDo6LW1vei1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG5pbnB1dDotbW96LXBsYWNlaG9sZGVyIHtcbiAgb3BhY2l0eTogMTtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG59XG5cbmlucHV0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG5pbnB1dDpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG5pbnB1dDpmb2N1czo6LW1vei1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG5pbnB1dDpmb2N1czotbW96LXBsYWNlaG9sZGVyIHtcbiAgb3BhY2l0eTogMDtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzIGVhc2U7XG59XG5cbmlucHV0OmZvY3VzOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcyBlYXNlO1xufVxuXG50ZXh0YXJlYTpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbmJ1dHRvbiB7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogbm9uZTtcbn1cblxudGV4dGFyZWEge1xuICBvdXRsaW5lOiBub25lO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbmFkZHJlc3Mge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbi53cmFwcGVyIHtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnN3aXBlci13cmFwcGVyIHtcbiAgbWluLXdpZHRoOiAwO1xufVxuXG4uYnRuIHtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDEzcHg7XG4gIGNvbG9yOiAjM0E3OUZGO1xuICBwYWRkaW5nOiAxM3B4IDIwcHggMTNweCAyMXB4O1xuICBiYWNrZ3JvdW5kOiAjRDJFMUZGO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uYnRuOmhvdmVyIHtcbiAgY29sb3I6ICMyZTVmYzk7XG4gIGJhY2tncm91bmQ6ICNhM2I5ZTk7XG59XG5cbi50aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNTAwO1xuICBmb250LXNpemU6IDEwcHg7XG4gIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6ICMzRDRGOUY7XG59XG5cbi50ZXh0IHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTVweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDNlbTtcbiAgY29sb3I6ICM4RDk2QkQ7XG4gIGxpbmUtaGVpZ2h0OiAyOXB4O1xufVxuXG4uY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5MjVweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDAgMTVweDtcbn1cblxuLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgbWF4LXdpZHRoOiAxMDk3cHg7XG4gIHBhZGRpbmc6IDMwcHggMTVweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5oZWFkZXJfX2xvZ28ge1xuICB3aWR0aDogMjZweDtcbiAgaGVpZ2h0OiAyNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNUU4MUZFO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhlYWRlcl9fbWVudSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDEgMSBhdXRvO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgbGluZWFyO1xuICB6LWluZGV4OiAxMDAwO1xufVxuXG4uaGVhZGVyX19tZW51LS1hY3RpdmUge1xuICBsZWZ0OiA1MCUgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICB6LWluZGV4OiAxMDAxO1xuICBoZWlnaHQ6IDE1cHg7XG4gIHdpZHRoOiAzMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyOmJlZm9yZSxcbi5oZWFkZXJfX2J1cmdlcjphZnRlcixcbi5oZWFkZXJfX2J1cmdlciBzcGFuIHtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyO1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVFODFGRTtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyOmJlZm9yZSxcbi5oZWFkZXJfX2J1cmdlcjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG59XG5cbi5oZWFkZXJfX2J1cmdlcjpiZWZvcmUge1xuICBib3R0b206IDA7XG59XG5cbi5oZWFkZXJfX2J1cmdlcjphZnRlciB7XG4gIHRvcDogMDtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyIHNwYW4ge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAtNTAlKTtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyLS1hY3RpdmU6OmJlZm9yZSB7XG4gIGJvdHRvbTogNTAlO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDBweCwgNTAlKTtcbn1cblxuLmhlYWRlcl9fYnVyZ2VyLS1hY3RpdmU6OmFmdGVyIHtcbiAgdG9wOiA1MCU7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZykgdHJhbnNsYXRlKDBweCwgLTUwJSk7XG59XG5cbi5oZWFkZXJfX2J1cmdlci0tYWN0aXZlIHNwYW4ge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ubGlzdC1oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4ubGlzdC1oZWFkZXJfX25hdixcbi5saXN0LWhlYWRlcl9fc29jaWFscyB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5saXN0LWhlYWRlcl9faXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5saXN0LWhlYWRlcl9faXRlbTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gIG1hcmdpbi1sZWZ0OiA0MnB4O1xufVxuXG4ubGlzdC1oZWFkZXJfX2l0ZW0gaW1nIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4ubGlzdC1oZWFkZXJfX2l0ZW0gaW1nOmhvdmVyIHtcbiAgZmlsdGVyOiBpbnZlcnQoNjIlKSBzZXBpYSg0NSUpIHNhdHVyYXRlKDcxMTUlKSBodWUtcm90YXRlKDIxMWRlZykgYnJpZ2h0bmVzcygxMDAlKSBjb250cmFzdCgxMDYlKTtcbn1cblxuLmxpc3QtaGVhZGVyX19saW5rIHtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIGNvbG9yOiAjNjk3Q0E2O1xuICB0ZXh0LXNoYWRvdzogMHB4IDBweCA1cHggI0U2RTZFNjtcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XG59XG5cbi5saXN0LWhlYWRlcl9fbGluazpob3ZlciB7XG4gIGNvbG9yOiAjNUU4MUZFO1xufVxuXG4ubGlzdC1oZWFkZXIgZGl2IHtcbiAgbWFyZ2luLXRvcDogMTNweDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBzd2lwZXItaWNvbnM7XG4gIHNyYzogdXJsKFwiZGF0YTphcHBsaWNhdGlvbi9mb250LXdvZmY7Y2hhcnNldD11dGYtODtiYXNlNjQsIGQwOUdSZ0FCQUFBQUFBWmdBQkFBQUFBQURBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCR1JsUk5BQUFHUkFBQUFCb0FBQUFjaTZxSGtVZEVSVVlBQUFXZ0FBQUFJd0FBQUNRQVlBQlhSMUJQVXdBQUJoUUFBQUF1QUFBQU51QVk3K3hIVTFWQ0FBQUZ4QUFBQUZBQUFBQm0yZlBjelU5VEx6SUFBQUhjQUFBQVNnQUFBR0JQOVY1UlkyMWhjQUFBQWtRQUFBQ0lBQUFCWXQ2RjBjQmpkblFnQUFBQ3pBQUFBQVFBQUFBRUFCRUJSR2RoYzNBQUFBV1lBQUFBQ0FBQUFBai8vd0FEWjJ4NVpnQUFBeXdBQUFETUFBQUQyTUh0cnlWb1pXRmtBQUFCYkFBQUFEQUFBQUEyRTIrZW9XaG9aV0VBQUFHY0FBQUFId0FBQUNRQzlnRHphRzEwZUFBQUFpZ0FBQUFaQUFBQXJnSmtBQkZzYjJOaEFBQUMwQUFBQUZvQUFBQmFGUUFVR0cxaGVIQUFBQUc4QUFBQUh3QUFBQ0FBY0FCQWJtRnRaUUFBQS9nQUFBRTVBQUFDWHZGZEJ3bHdiM04wQUFBRk5BQUFBR0lBQUFDRTVzNzRoWGphWTJCa1lHQUFZcGY1SHUvaitXMitNbkF6TVlEQXphWDZRakQ2LzQvL0J4ajVHQThBdVJ3TVlHa0FQeXdMMTNqYVkyQmtZR0E4OFA4QWd4NGorLzhmUURZZkExQUVCV2dEQUlCMkJPb0FlTnBqWUdSZ1lOQmg0R2RnWWdBQkVNbklBQkp6WU5BRENRQUFDV2dBc1FCNDJtTmdZZnpDT0lHQmxZR0IwWWN4allHQndSMUtmMldRWkdoaFlHQmlZR1ZtZ0FGR0JpUVFrT2Fhd3REQW9NQlF4WGpnL3dFR1BjWUREQTR3TlVBMkNDZ3dzQUFBTzRFTDZnQUFlTnBqMk0wZ3lBQUNxeGdHTldCa1oyRDQvd01BK3hrRGRnQUFBSGphWTJCZ1lHYUFZQmtHUmdZUWlBSHlHTUY4RmdZSElNM0R3TUhBQkdRck1PZ3lXRExFTTFUOS93OFVCZkVNZ0x6RS8vLy9QLzUvL2YvVi94dityNGVhQUFlTWJBeHdJVVltSU1IRWdLWUFZalVjc0RBd3NMS3hjM0J5Y2ZQdzhqRVFBL2daQkFTRmhFVkV4Y1FsSktXa1pXVGw1QlVVbFpSVlZOWFVOVFFaQmdNQUFNUitFK2dBRVFGRUFBQUFLZ0FxQUNvQU5BQStBRWdBVWdCY0FHWUFjQUI2QUlRQWpnQ1lBS0lBckFDMkFNQUF5Z0RVQU40QTZBRHlBUHdCQmdFUUFSb0JKQUV1QVRnQlFnRk1BVllCWUFGcUFYUUJmZ0dJQVpJQm5BR21BYklCemdIc0FBQjQydTJOTVE2Q1VBeUdXNTY4eDlBbmVZWWdtNE1KYmhLRmFFeElPQVZYOEFwZXdTdDRCaWM0QWZlQWlkM1ZPQml4RHhmUFlFemE1TytYZmkwNFlBRGdnaVVJVUxDdUVKSzhWaE80YlN2cGRua3RISTVRQ1l0ZGkyc2w4Wm5YYUhscVVyTkt6ZEtjVDhjamxxK3J3WlN2SVZjek5pZXpzZm5QL3V6bm1mUEZCTk9ETTJLN01UUTQ1WUVBWnFHUDgxQW1HR2NGM2lQcU9vcDByMVNQVGFUYlZrZlVlNEhYajk3d1lFK3lOd1dZeHdXdTR2MXVnV0hnbzNTMVhkWkVWcVdNN0VUMGNmbkxHeFdma2dSNDJvMlB2V3JETUJTRmovSUhMYUYwektqUmdkaVZNd1NjTlJBb1dVb0g3OFkyaWNCL3lJWTA5QW42QUgyQmR1L1VCK3l4b3BZc2hRaUV2bnZ1MGRVUmdEdDhRZUM4UER3N0ZwamkzZkVBNHovUEVKNllPQjVoS2g0ZGozRXZYaHhQcUgvU0tVWTNySjdzclo0RlpuaDFQTUF0UGh3UDZmbDJQTUpNUERnZVE0clk4WVQ2R3phbzBlQUVBNDA5RHVnZ21UbkZuT2NTQ2lFaUxNZ3hDaVRJNkNxNURaVWQzUW1wMTB2TzBMYUxUZDJjak40Zk91bWxjN2xVWWJTUWNaRmt1dFJHN2c2SktaS3kwUm1kTFk2ODBDRG5FSitVTWtwRkZlMVJON254ZFZwWHJDNGFUdG5hdXJPblllcmNaZzJZVm1MTi9kL2djemZFaW1yRS9mcy9iT3VxMjlabW44dGxvT1JhWGdaZ0dhNzh5TzkvY25YbTJCcGFHdnEyNUR2OVM0RTkrNVNJYzlQcXVwSktoWUZTU2w0NytRY3IxbVlOQUFBQWVOcHR3MGNLd2tBQUFNRFpKQThRN09VSnZrTHNQZlo2ekZWRVJQeThxSGgyWUVSKzNpL0JQODN2SUJMTHlTc29LaW1ycUtxcGEyaHA2K2pxNlJzWUdobWJtSnFaU3kwc3JheHRiTzNzSFJ5ZG5FTVU0dVI2eXg3SkpYdmVQN1dyRHljQUFBQUFBQUgvL3dBQ2VOcGpZR1JnWU9BQlloa2daZ0pDWmdaTkJrWUdMUVp0SUpzRkxNWUFBQXczQUxnQWVOb2xpekVLZ0RBUUJDY2hSYkMyc0ZFUjBZRDZxVlFpQkN2L0g5ZXpHSTZaNVhCQXc4Q0JLL201aVFRVmF1VmJYTG5Pck1adjJvTGRLRmE4UGp1cnUyaEp6R2FibU9TTHpOTXp2dXRwQjNONDJtTmdaR0JnNEdLUVl6QmhZTXhKTE1sajRHQmdBWW93L1AvUEFKSmhMTTZzU29XS2ZXQ0FBd0RBamdiUkFBQjQybU5nWUdCa0FJSWJDWm81SVBybVVuMGhHQTBBTzhFRlRRQUFcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuOnJvb3Qge1xuICAtLXN3aXBlci10aGVtZS1jb2xvcjogIzAwN2FmZjtcbn1cblxuLnN3aXBlciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItd3JhcHBlciB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5zd2lwZXItd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTtcbiAgZGlzcGxheTogZmxleDtcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogdHJhbnNmb3JtO1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbn1cblxuLnN3aXBlci1hbmRyb2lkIC5zd2lwZXItc2xpZGUsXG4uc3dpcGVyLXdyYXBwZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMCwgMCk7XG59XG5cbi5zd2lwZXItcG9pbnRlci1ldmVudHMge1xuICB0b3VjaC1hY3Rpb246IHBhbi15O1xufVxuXG4uc3dpcGVyLXBvaW50ZXItZXZlbnRzLnN3aXBlci12ZXJ0aWNhbCB7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXg7XG59XG5cbi5zd2lwZXItc2xpZGUge1xuICBmbGV4LXNocmluazogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm07XG59XG5cbi5zd2lwZXItc2xpZGUtaW52aXNpYmxlLWJsYW5rIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4uc3dpcGVyLWF1dG9oZWlnaHQsXG4uc3dpcGVyLWF1dG9oZWlnaHQgLnN3aXBlci1zbGlkZSB7XG4gIGhlaWdodDogYXV0bztcbn1cblxuLnN3aXBlci1hdXRvaGVpZ2h0IC5zd2lwZXItd3JhcHBlciB7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB0cmFuc2l0aW9uLXByb3BlcnR5OiB0cmFuc2Zvcm0saGVpZ2h0O1xufVxuXG4uc3dpcGVyLTNkLFxuLnN3aXBlci0zZC5zd2lwZXItY3NzLW1vZGUgLnN3aXBlci13cmFwcGVyIHtcbiAgcGVyc3BlY3RpdmU6IDEyMDBweDtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLWN1YmUtc2hhZG93LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdyxcbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1yaWdodCxcbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLFxuLnN3aXBlci0zZCAuc3dpcGVyLXdyYXBwZXIge1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xufVxuXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20sXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LWxlZnQsXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LFxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3Age1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHotaW5kZXg6IDEwO1xufVxuXG4uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93IHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1sZWZ0IHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGxlZnQsIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7XG59XG5cbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHQge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwKSk7XG59XG5cbi5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDApKTtcbn1cblxuLnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy1ib3R0b20ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMCkpO1xufVxuXG4uc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIHNjcm9sbGJhci13aWR0aDogbm9uZTtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBub25lO1xufVxuXG4uc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5zd2lwZXItY3NzLW1vZGUgPiAuc3dpcGVyLXdyYXBwZXIgPiAuc3dpcGVyLXNsaWRlIHtcbiAgc2Nyb2xsLXNuYXAtYWxpZ246IHN0YXJ0IHN0YXJ0O1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwuc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnk7XG59XG5cbi5zd2lwZXItdmVydGljYWwuc3dpcGVyLWNzcy1tb2RlID4gLnN3aXBlci13cmFwcGVyIHtcbiAgc2Nyb2xsLXNuYXAtdHlwZTogeSBtYW5kYXRvcnk7XG59XG5cbi5zd2lwZXItY2VudGVyZWQgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICcnO1xuICBmbGV4LXNocmluazogMDtcbiAgb3JkZXI6IDk5OTk7XG59XG5cbi5zd2lwZXItY2VudGVyZWQuc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXdyYXBwZXIgPiAuc3dpcGVyLXNsaWRlOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWlubGluZS1zdGFydDogdmFyKC0tc3dpcGVyLWNlbnRlcmVkLW9mZnNldC1iZWZvcmUpO1xufVxuXG4uc3dpcGVyLWNlbnRlcmVkLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci13cmFwcGVyOjpiZWZvcmUge1xuICBoZWlnaHQ6IDEwMCU7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgd2lkdGg6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYWZ0ZXIpO1xufVxuXG4uc3dpcGVyLWNlbnRlcmVkLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGU6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tYmxvY2stc3RhcnQ6IHZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYmVmb3JlKTtcbn1cblxuLnN3aXBlci1jZW50ZXJlZC5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXdyYXBwZXI6OmJlZm9yZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDFweDtcbiAgaGVpZ2h0OiB2YXIoLS1zd2lwZXItY2VudGVyZWQtb2Zmc2V0LWFmdGVyKTtcbn1cblxuLnN3aXBlci1jZW50ZXJlZCA+IC5zd2lwZXItd3JhcHBlciA+IC5zd2lwZXItc2xpZGUge1xuICBzY3JvbGwtc25hcC1hbGlnbjogY2VudGVyIGNlbnRlcjtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246IC4zcyBvcGFjaXR5O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB6LWluZGV4OiAxMDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLnN3aXBlci1wYWdpbmF0aW9uLWhpZGRlbiB7XG4gIG9wYWNpdHk6IDA7XG59XG5cbi5zd2lwZXItaG9yaXpvbnRhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLFxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbCxcbi5zd2lwZXItcGFnaW5hdGlvbi1jdXN0b20sXG4uc3dpcGVyLXBhZ2luYXRpb24tZnJhY3Rpb24ge1xuICBib3R0b206IDEwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZm9udC1zaXplOiAwO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLW1haW4ge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEpO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLXByZXYge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuNjYpO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLXByZXYtcHJldiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC4zMyk7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtbmV4dCB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC42Nik7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtbmV4dC1uZXh0IHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjMzKTtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIHdpZHRoOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtd2lkdGgsIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1zaXplLCA4cHgpKTtcbiAgaGVpZ2h0OiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaGVpZ2h0LCB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtc2l6ZSwgOHB4KSk7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtY29sb3IsICMwMDApO1xuICBvcGFjaXR5OiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtb3BhY2l0eSwgMC4yKTtcbn1cblxuYnV0dG9uLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIGJvcmRlcjogbm9uZTtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3gtc2hhZG93OiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1jbGlja2FibGUgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldDpvbmx5LWNoaWxkIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIG9wYWNpdHk6IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1vcGFjaXR5LCAxKTtcbiAgYmFja2dyb3VuZDogdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tY29sb3IsIHZhcigtLXN3aXBlci10aGVtZS1jb2xvcikpO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyxcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyB7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwcHgsIC01MCUsIDApO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LFxuLnN3aXBlci12ZXJ0aWNhbCA+IC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICBtYXJnaW46IHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC12ZXJ0aWNhbC1nYXAsIDZweCkgMDtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyxcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMge1xuICB0b3A6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xuICB3aWR0aDogOHB4O1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCxcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdHJhbnNpdGlvbjogLjJzIHRyYW5zZm9ybSwuMnMgdG9wO1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LFxuLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgbWFyZ2luOiAwIHZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1ob3Jpem9udGFsLWdhcCwgNHB4KTtcbn1cblxuLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljLFxuLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMge1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQsXG4uc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcbiAgdHJhbnNpdGlvbjogLjJzIHRyYW5zZm9ybSwuMnMgbGVmdDtcbn1cblxuLnN3aXBlci1ob3Jpem9udGFsLnN3aXBlci1ydGwgPiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICB0cmFuc2l0aW9uOiAuMnMgdHJhbnNmb3JtLC4ycyByaWdodDtcbn1cblxuLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjI1KTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIgLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLWZpbGwge1xuICBiYWNrZ3JvdW5kOiB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1jb2xvciwgdmFyKC0tc3dpcGVyLXRoZW1lLWNvbG9yKSk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBsZWZ0IHRvcDtcbn1cblxuLnN3aXBlci1ydGwgLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1maWxsIHtcbiAgdHJhbnNmb3JtLW9yaWdpbjogcmlnaHQgdG9wO1xufVxuXG4uc3dpcGVyLWhvcml6b250YWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIsXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24taG9yaXpvbnRhbCxcbi5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZSxcbi5zd2lwZXItdmVydGljYWwgPiAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA0cHg7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbn1cblxuLnN3aXBlci1ob3Jpem9udGFsID4gLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLW9wcG9zaXRlLFxuLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUsXG4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwsXG4uc3dpcGVyLXZlcnRpY2FsID4gLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyIHtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG59XG5cbi5zd2lwZXItcGFnaW5hdGlvbi1sb2NrIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuOnJvb3Qge1xuICAtLXN3aXBlci1uYXZpZ2F0aW9uLXNpemU6IDQ0cHg7XG59XG5cbi5zd2lwZXItYnV0dG9uLW5leHQsXG4uc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IGNhbGModmFyKC0tc3dpcGVyLW5hdmlnYXRpb24tc2l6ZSkvIDQ0ICogMjcpO1xuICBoZWlnaHQ6IHZhcigtLXN3aXBlci1uYXZpZ2F0aW9uLXNpemUpO1xuICBtYXJnaW4tdG9wOiBjYWxjKDBweCAtICh2YXIoLS1zd2lwZXItbmF2aWdhdGlvbi1zaXplKS8gMikpO1xuICB6LWluZGV4OiAxMDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgY29sb3I6IHZhcigtLXN3aXBlci1uYXZpZ2F0aW9uLWNvbG9yLCB2YXIoLS1zd2lwZXItdGhlbWUtY29sb3IpKTtcbn1cblxuLnN3aXBlci1idXR0b24tbmV4dC5zd2lwZXItYnV0dG9uLWRpc2FibGVkLFxuLnN3aXBlci1idXR0b24tcHJldi5zd2lwZXItYnV0dG9uLWRpc2FibGVkIHtcbiAgb3BhY2l0eTogLjM1O1xuICBjdXJzb3I6IGF1dG87XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4uc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyLFxuLnN3aXBlci1idXR0b24tcHJldjphZnRlciB7XG4gIGZvbnQtZmFtaWx5OiBzd2lwZXItaWNvbnM7XG4gIGZvbnQtc2l6ZTogdmFyKC0tc3dpcGVyLW5hdmlnYXRpb24tc2l6ZSk7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gIGxldHRlci1zcGFjaW5nOiAwO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgZm9udC12YXJpYW50OiBpbml0aWFsO1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxuLnN3aXBlci1idXR0b24tcHJldixcbi5zd2lwZXItcnRsIC5zd2lwZXItYnV0dG9uLW5leHQge1xuICBsZWZ0OiAxMHB4O1xuICByaWdodDogYXV0bztcbn1cblxuLnN3aXBlci1idXR0b24tcHJldjphZnRlcixcbi5zd2lwZXItcnRsIC5zd2lwZXItYnV0dG9uLW5leHQ6YWZ0ZXIge1xuICBjb250ZW50OiAncHJldic7XG59XG5cbi5zd2lwZXItYnV0dG9uLW5leHQsXG4uc3dpcGVyLXJ0bCAuc3dpcGVyLWJ1dHRvbi1wcmV2IHtcbiAgcmlnaHQ6IDEwcHg7XG4gIGxlZnQ6IGF1dG87XG59XG5cbi5zd2lwZXItYnV0dG9uLW5leHQ6YWZ0ZXIsXG4uc3dpcGVyLXJ0bCAuc3dpcGVyLWJ1dHRvbi1wcmV2OmFmdGVyIHtcbiAgY29udGVudDogJ25leHQnO1xufVxuXG4uc3dpcGVyLWJ1dHRvbi1sb2NrIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnByb2R1Y3Rpdml0eSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNsaWRlLXN3aXBlciB7XG4gIGhlaWdodDogNTQ4cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uc2xpZGUtc3dpcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc2xpZGVyLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uc3dpcGVyLXRleHQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHotaW5kZXg6IDI7XG4gIG1hcmdpbi10b3A6IC0xMzNweDtcbiAgcGFkZGluZzogMHB4IDE1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnN3aXBlci10ZXh0X190aXRsZSB7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG4gIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDMycHg7XG4gIGNvbG9yOiAjM0Q0RjlGO1xufVxuXG4uc3dpcGVyLXRleHRfX3RleHQge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWFyZ2luLXRvcDogMjhweDtcbiAgbWF4LXdpZHRoOiA1MDJweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uc3dpcGVyLXRleHRfX2ljb24ge1xuICBtYXJnaW46IGF1dG87XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGxpbmVhcjtcbiAgd2lkdGg6IDUycHg7XG4gIGhlaWdodDogNTJweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnN3aXBlci10ZXh0X19pY29uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZjlmOTtcbn1cblxuLnN3aXBlci10ZXh0X19pY29uOmhvdmVyIGRpdiB7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzNENEY5Rjtcbn1cblxuLnN3aXBlci10ZXh0X19pY29uIGRpdiB7XG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGxpbmVhcjtcbiAgd2lkdGg6IDA7XG4gIGhlaWdodDogMDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiA1LjVweCAwIDUuNXB4IDEwcHg7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgIzVFODFGRTtcbn1cblxuLnN3aXBlcl9faW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5zd2lwZXJfX2ltZyBpbWcge1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5zcG9uc29ycyB7XG4gIG1hcmdpbjogMzVweCAwcHg7XG59XG5cbi5zcG9uc29yc19fY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5MThweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDBweCAxNXB4O1xufVxuXG4uc3BvbnNvcnNfX2l0ZW1zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uc3BvbnNvcnNfX2l0ZW0ge1xuICBtYXJnaW4tdG9wOiAxNXB4O1xuICBmbGV4OiAxIDEgNTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1zZWxmOiBiYXNlbGluZTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5wbGFuIHtcbiAgcGFkZGluZzogMTcwcHggMHB4IDIxNnB4IDBweDtcbiAgYmFja2dyb3VuZDogI0Y1RjhGRjtcbn1cblxuLnBsYW5fX2NvbnRhaW5lciB7XG4gIG1heC13aWR0aDogOTI1cHg7XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnBsYW5fX2NvbnRhaW5lciBpbWcge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBsYW5fX2NvbnRlbnQge1xuICBtYXJnaW4tdG9wOiAzNnB4O1xuICBtYXgtd2lkdGg6IDQxM3B4O1xufVxuXG4ucGxhbl9fdGl0bGUge1xuICBtYXJnaW4tdG9wOiAyN3B4O1xuICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBjb2xvcjogIzNENEY5Rjtcbn1cblxuLnBsYW5fX3RleHQge1xuICBtYXJnaW4tdG9wOiAyN3B4O1xufVxuXG4ucGxhbl9fYnRucyB7XG4gIG1hcmdpbi10b3A6IDQ3cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5wbGFuX19idG5zLWJsdWUge1xuICB3aWR0aDogMTMwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0Qzg1RkY7XG4gIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCByZ2JhKDE4OCwgMTk5LCAyNTUsIDAuNzUpO1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIHBhZGRpbmc6IDEzcHggMjVweDtcbiAgcGFkZGluZy1yaWdodDogMzFweDtcbiAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogI0ZGRkZGRjtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wbGFuX19idG5zLWJsdWU6aG92ZXIge1xuICBjb2xvcjogI2YwZWJlYjtcbiAgYmFja2dyb3VuZDogIzNmNmZkODtcbn1cblxuLnBsYW5fX2J0bnMtYmx1ZTpob3ZlcjpiZWZvcmUge1xuICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmMGViZWI7XG59XG5cbi5wbGFuX19idG5zLWJsdWUgc3BhbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnBsYW5fX2J0bnMtYmx1ZSBzcGFuOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IC0xMnB4O1xuICBib3R0b206IDNweDtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgbGluZWFyO1xuICBtYXJnaW4tbGVmdDogNnB4O1xuICB3aWR0aDogMDtcbiAgaGVpZ2h0OiAwO1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDMuNnB4IDAgMy42cHggNi41cHg7XG4gIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZjtcbn1cblxuLnBsYW5fX2J0bnMtZ3JleSB7XG4gIG1hcmdpbi10b3A6IDVweDtcbiAgd2lkdGg6IDEzMHB4O1xuICBjb2xvcjogIzhEOTZCRDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI0QxRDFFNDtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBwYWRkaW5nOiAxM3B4IDIxcHg7XG4gIHRyYW5zaXRpb246IGJvcmRlciAwLjNzIGxpbmVhcjtcbn1cblxuLnBsYW5fX2J0bnMtZ3JleTpob3ZlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNiNWI1Yzc7XG59XG5cbi5hYm91dCB7XG4gIHBhZGRpbmc6IDUwcHggMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9jbG91ZHMucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG59XG5cbi5hYm91dF9fY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uYWJvdXRfX3RleHQge1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBjb2xvcjogIzNENEY5RjtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbn1cblxuLmFib3V0X19yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG59XG5cbi5hYm91dF9fY29sdW1uIHtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgZmxleDogMCAxIDEwMCU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLml0ZW0tYWJvdXRfX3RpdGxlIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjNDA3NEY4O1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uaXRlbS1hYm91dF9fdGV4dCB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBtYXJnaW4tdG9wOiAxNXB4O1xuICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBsaW5lLWhlaWdodDogMTlweDtcbiAgY29sb3I6ICNBREIzQ0I7XG4gIG1heC13aWR0aDogMTQwcHg7XG59XG5cbi5hYm91dF9idG5zIHtcbiAgbWFyZ2luLXRvcDogMjhweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5hYm91dF9vciB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90b1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiAjQURCM0NCO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMCAxMnB4O1xufVxuXG4uYWJvdXRfX2J0bnMtcmVkIHtcbiAgYmFja2dyb3VuZDogI0ZGRDdENztcbiAgY29sb3I6ICNENDNGM0Y7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcbn1cblxuLmFib3V0X19idG5zLXJlZDpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNlY2I1YjU7XG4gIGNvbG9yOiAjYWYzMTMxO1xufVxuXG4ucHJvZHVjdGl2aXR5X19yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbi5wcm9kdWN0aXZpdHlfX2NvbHVtbiB7XG4gIGZsZXg6IDAgMSAxMDAlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5wcm9kdWN0aXZpdHlfX2NvbHVtbi1sZWZ0IHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDIyOS4zMmRlZywgIzY4ODhGRiAxMi43NyUsICM1RTgwRkYgNzMuMTElKTtcbn1cblxuLnByb2R1Y3Rpdml0eV9fY29sdW1uLXJpZ2h0IHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEwMS40OGRlZywgI0U5RUZGRiA0MS41NiUsICNFMEU5RkYgODEuNTMlKTtcbn1cblxuLnByb2R1Y3Rpdml0eV9faXRlbSB7XG4gIG1hcmdpbjogMzJweCAwcHg7XG59XG5cbi5wcm9kdWN0aXZpdHlfX3BlcmNlbnRzIHtcbiAgbWFyZ2luLXRvcDogMTJweDtcbiAgZm9udC1zaXplOiA0OHB4O1xuICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDNlbTtcbn1cblxuLnByb2R1Y3Rpdml0eV9fcGVyY2VudHMtbGVmdCB7XG4gIGNvbG9yOiAjRkZGRkZGO1xufVxuXG4ucHJvZHVjdGl2aXR5X19wZXJjZW50cy1yaWdodCB7XG4gIGNvbG9yOiAjNUU4MEZGO1xufVxuXG4ucHJvZHVjdGl2aXR5X19wcmljZSB7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAzZW07XG4gIGNvbG9yOiAjRkZGRkZGO1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiAyNjBweDtcbn1cblxuLnByb2R1Y3Rpdml0eV9fcHJpY2UtbGVmdCB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ucHJvZHVjdGl2aXR5X19wcmljZS1yaWdodCB7XG4gIGNvbG9yOiAjNUU4MEZGO1xufVxuXG4uYmxvZyB7XG4gIGJhY2tncm91bmQ6ICNGNUY4RkY7XG59XG5cbi5ibG9nX19pbm5lciB7XG4gIG1hcmdpbjogMjVweCAwO1xufVxuXG4uYmxvZ19fY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA5NTBweCAhaW1wb3J0YW50O1xufVxuXG4uYmxvZ19fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5ibG9nX19zdWJ0aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgY29sb3I6ICMzRDRGOUY7XG59XG5cbi5ibG9nX19zd2lwZXIge1xuICBtYXJnaW4tdG9wOiAzNXB4O1xufVxuXG4uYmxvZ19fc3dpcGUge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYmxvZ19fbmF2aWdhdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmJvZHlfX21vYmlsZSAuc3dpcGVfX2dhbGxlcnktYmlnOmJlZm9yZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbmltZ1tzcmM9XCIuLi9pbWcvZ2FsbGVyeTMuanBnXCJdIHtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xufVxuXG4uc3dpcGVfX2NvbnRhaW5lciB7XG4gIGJhY2tncm91bmQ6ICNGRkZGRkY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgcGFkZGluZzogNDBweCAxMHB4O1xufVxuXG4uc3dpcGVfX2dhbGxlcnkge1xuICBmbGV4OiAwIDEgMTAwJTtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjtcbiAgZ3JpZC1nYXA6IDEycHg7XG59XG5cbi5zd2lwZV9fZ2FsbGVyeS1iaWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5zd2lwZV9fZ2FsbGVyeS1iaWcgaW1nIHtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnN3aXBlX19nYWxsZXJ5LWJpZzpob3ZlcjpiZWZvcmUge1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICBwb2ludGVyLWV2ZW50czogYWxsO1xufVxuXG4uc3dpcGVfX2dhbGxlcnktYmlnOmJlZm9yZSB7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBsaW5lYXI7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb250ZW50OiBcIlwiO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltZy9zdmcvbG9vay5zdmdcIik7XG4gIHdpZHRoOiA2NXB4O1xuICBoZWlnaHQ6IDY1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuXG4uc3dpcGVfX2dhbGxlcnktc21hbGwgaW1nIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnN3aXBlX19pbmZvIHtcbiAgZmxleDogMCAxIDEwMCU7XG4gIG1hcmdpbjogMjBweCAwcHggMHB4IDBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnN3aXBlX190aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXNpemU6IDM2cHg7XG4gIGNvbG9yOiAjM0Q0RjlGO1xufVxuXG4uc3dpcGVfX3RleHQge1xuICBtYXJnaW4tdG9wOiA4cHg7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4uc3dpcGVfX2V4dHJhIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLnN3aXBlX19hZGQge1xuICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMTNweDtcbiAgY29sb3I6ICNBNkI2REE7XG4gIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcbn1cblxuLnN3aXBlX19hZGQ6aG92ZXIge1xuICBjb2xvcjogIzc0ODZiMTtcbn1cblxuLnN3aXBlci1idXR0b24tcHJldixcbi5zd2lwZXItYnV0dG9uLW5leHQge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHg7XG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDZweDtcbiAgbWFyZ2luLXRvcDogMHB4O1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRvcDogNTAlO1xufVxuXG4uc3dpcGVyLWJ1dHRvbi1wcmV2OmFmdGVyLFxuLnN3aXBlci1idXR0b24tbmV4dDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiA2cHg7XG4gIGhlaWdodDogNnB4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG59XG5cbi5zd2lwZXItYnV0dG9uLXByZXYge1xuICBsZWZ0OiAtNzVweDtcbn1cblxuLnN3aXBlci1idXR0b24tcHJldjphZnRlciB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZDtcbiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAtMnB4O1xufVxuXG4uc3dpcGVyLWJ1dHRvbi1uZXh0IHtcbiAgcmlnaHQ6IC03NXB4O1xufVxuXG4uc3dpcGVyLWJ1dHRvbi1uZXh0OjphZnRlciB7XG4gIGJvcmRlci10b3A6IDJweCBzb2xpZDtcbiAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQ7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IC0ycHg7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ2xnJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9sZy53b2ZmMj9pbzlhNmtcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL2xnLnR0Zj9pbzlhNmtcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2xnLndvZmY/aW85YTZrXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2xnLnN2Zz9pbzlhNmsjbGdcIikgZm9ybWF0KFwic3ZnXCIpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtZGlzcGxheTogYmxvY2s7XG59XG5cbi5sZy1pY29uIHtcbiAgLyogdXNlICFpbXBvcnRhbnQgdG8gcHJldmVudCBpc3N1ZXMgd2l0aCBicm93c2VyIGV4dGVuc2lvbnMgdGhhdCBjaGFuZ2UgZm9udHMgKi9cbiAgZm9udC1mYW1pbHk6ICdsZycgIWltcG9ydGFudDtcbiAgc3BlYWs6IG5ldmVyO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIC8qIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PSAqL1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuLmxnLWNvbnRhaW5lciB7XG4gIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sICdTZWdvZSBVSScsIFJvYm90bywgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsICdOb3RvIFNhbnMnLCAnTGliZXJhdGlvbiBTYW5zJywgc2Fucy1zZXJpZiwgJ0FwcGxlIENvbG9yIEVtb2ppJywgJ1NlZ29lIFVJIEVtb2ppJywgJ1NlZ29lIFVJIFN5bWJvbCcsICdOb3RvIENvbG9yIEVtb2ppJztcbn1cblxuLmxnLW5leHQsXG4ubGctcHJldiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40NSk7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgY29sb3I6ICM5OTk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMjJweDtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIHBhZGRpbmc6IDhweCAxMHB4IDlweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgei1pbmRleDogMTA4MDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xufVxuXG4ubGctbmV4dC5kaXNhYmxlZCxcbi5sZy1wcmV2LmRpc2FibGVkIHtcbiAgb3BhY2l0eTogMCAhaW1wb3J0YW50O1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi5sZy1uZXh0OmhvdmVyOm5vdCguZGlzYWJsZWQpLFxuLmxnLXByZXY6aG92ZXI6bm90KC5kaXNhYmxlZCkge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmxnLXNpbmdsZS1pdGVtIC5sZy1uZXh0LFxuLmxnLXNpbmdsZS1pdGVtXG4ubGctcHJldiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5sZy1uZXh0IHtcbiAgcmlnaHQ6IDIwcHg7XG59XG5cbi5sZy1uZXh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6ICdcXGUwOTUnO1xufVxuXG4ubGctcHJldiB7XG4gIGxlZnQ6IDIwcHg7XG59XG5cbi5sZy1wcmV2OmFmdGVyIHtcbiAgY29udGVudDogJ1xcZTA5NCc7XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xuICAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIDUwJSB7XG4gICAgbGVmdDogLTMwcHg7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG59XG5cbkAtbW96LWtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xuICAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIDUwJSB7XG4gICAgbGVmdDogLTMwcHg7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG59XG5cbkAtbXMta2V5ZnJhbWVzIGxnLXJpZ2h0LWVuZCB7XG4gIDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgNTAlIHtcbiAgICBsZWZ0OiAtMzBweDtcbiAgfVxuXG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xuICAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIDUwJSB7XG4gICAgbGVmdDogLTMwcHg7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG59XG5cbkAtd2Via2l0LWtleWZyYW1lcyBsZy1sZWZ0LWVuZCB7XG4gIDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgNTAlIHtcbiAgICBsZWZ0OiAzMHB4O1xuICB9XG5cbiAgMTAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxufVxuXG5ALW1vei1rZXlmcmFtZXMgbGctbGVmdC1lbmQge1xuICAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIDUwJSB7XG4gICAgbGVmdDogMzBweDtcbiAgfVxuXG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7XG4gIH1cbn1cblxuQC1tcy1rZXlmcmFtZXMgbGctbGVmdC1lbmQge1xuICAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxuXG4gIDUwJSB7XG4gICAgbGVmdDogMzBweDtcbiAgfVxuXG4gIDEwMCUge1xuICAgIGxlZnQ6IDA7XG4gIH1cbn1cblxuQGtleWZyYW1lcyBsZy1sZWZ0LWVuZCB7XG4gIDAlIHtcbiAgICBsZWZ0OiAwO1xuICB9XG5cbiAgNTAlIHtcbiAgICBsZWZ0OiAzMHB4O1xuICB9XG5cbiAgMTAwJSB7XG4gICAgbGVmdDogMDtcbiAgfVxufVxuXG4ubGctb3V0ZXIubGctcmlnaHQtZW5kIC5sZy1vYmplY3Qge1xuICAtd2Via2l0LWFuaW1hdGlvbjogbGctcmlnaHQtZW5kIDAuM3M7XG4gIC1vLWFuaW1hdGlvbjogbGctcmlnaHQtZW5kIDAuM3M7XG4gIGFuaW1hdGlvbjogbGctcmlnaHQtZW5kIDAuM3M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmxnLW91dGVyLmxnLWxlZnQtZW5kIC5sZy1vYmplY3Qge1xuICAtd2Via2l0LWFuaW1hdGlvbjogbGctbGVmdC1lbmQgMC4zcztcbiAgLW8tYW5pbWF0aW9uOiBsZy1sZWZ0LWVuZCAwLjNzO1xuICBhbmltYXRpb246IGxnLWxlZnQtZW5kIDAuM3M7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmxnLXRvb2xiYXIge1xuICB6LWluZGV4OiAxMDgyO1xuICBsZWZ0OiAwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5sZy1tZWRpYS1vdmVybGFwIC5sZy10b29sYmFyIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYmEoMCwgMCwgMCwgMCksIHJnYmEoMCwgMCwgMCwgMC40KSk7XG59XG5cbi5sZy10b29sYmFyIC5sZy1pY29uIHtcbiAgY29sb3I6ICM5OTk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBmb250LXNpemU6IDI0cHg7XG4gIGhlaWdodDogNDdweDtcbiAgbGluZS1oZWlnaHQ6IDI3cHg7XG4gIHBhZGRpbmc6IDEwcHggMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogNTBweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XG4gIG91dGxpbmU6IG1lZGl1bSBub25lO1xuICB3aWxsLWNoYW5nZTogY29sb3I7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4ycyBsaW5lYXI7XG4gIC1vLXRyYW5zaXRpb246IGNvbG9yIDAuMnMgbGluZWFyO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGxpbmVhcjtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3gtc2hhZG93OiBub25lO1xufVxuXG4ubGctdG9vbGJhciAubGctaWNvbi5sZy1pY29uLTE4IHtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuXG4ubGctdG9vbGJhciAubGctaWNvbjpob3ZlciB7XG4gIGNvbG9yOiAjZmZmO1xufVxuXG4ubGctdG9vbGJhciAubGctY2xvc2U6YWZ0ZXIge1xuICBjb250ZW50OiAnXFxlMDcwJztcbn1cblxuLmxnLXRvb2xiYXIgLmxnLW1heGltaXplIHtcbiAgZm9udC1zaXplOiAyMnB4O1xufVxuXG4ubGctdG9vbGJhciAubGctbWF4aW1pemU6YWZ0ZXIge1xuICBjb250ZW50OiAnXFxlOTBhJztcbn1cblxuLmxnLXRvb2xiYXIgLmxnLWRvd25sb2FkOmFmdGVyIHtcbiAgY29udGVudDogJ1xcZTBmMic7XG59XG5cbi5sZy1zdWItaHRtbCB7XG4gIGNvbG9yOiAjZWVlO1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmc6IDEwcHggNDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB6LWluZGV4OiAxMDgwO1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBlYXNlLW91dCAwcztcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2Utb3V0IDBzO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMHM7XG59XG5cbi5sZy1zdWItaHRtbCBoNCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmxnLXN1Yi1odG1sIHAge1xuICBmb250LXNpemU6IDEycHg7XG4gIG1hcmdpbjogNXB4IDAgMDtcbn1cblxuLmxnLXN1Yi1odG1sIGEge1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuLmxnLXN1Yi1odG1sIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLmxnLW1lZGlhLW92ZXJsYXAgLmxnLXN1Yi1odG1sIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDE4MGRlZywgcmdiYSgwLCAwLCAwLCAwKSwgcmdiYSgwLCAwLCAwLCAwLjYpKTtcbn1cblxuLmxnLWl0ZW0gLmxnLXN1Yi1odG1sIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IDA7XG4gIHJpZ2h0OiAwO1xuICBsZWZ0OiAwO1xufVxuXG4ubGctZXJyb3ItbXNnIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICBjb2xvcjogIzk5OTtcbn1cblxuLmxnLWNvdW50ZXIge1xuICBjb2xvcjogIzk5OTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE2cHg7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy10b3A6IDEycHg7XG4gIGhlaWdodDogNDdweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmxnLWNsb3NpbmcgLmxnLXRvb2xiYXIsXG4ubGctY2xvc2luZyAubGctcHJldixcbi5sZy1jbG9zaW5nIC5sZy1uZXh0LFxuLmxnLWNsb3NpbmcgLmxnLXN1Yi1odG1sIHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjA4IGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjA4IGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgY29sb3IgMC4wOCBsaW5lYXI7XG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIGNvbG9yIDAuMDggbGluZWFyO1xuICAtby10cmFuc2l0aW9uOiAtby10cmFuc2Zvcm0gMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIGNvbG9yIDAuMDggbGluZWFyO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIGNvbG9yIDAuMDggbGluZWFyO1xufVxuXG5ib2R5Om5vdCgubGctZnJvbS1oYXNoKSAubGctb3V0ZXIubGctc3RhcnQtem9vbSAubGctaXRlbTpub3QoLmxnLXpvb21hYmxlKSAubGctaW1nLXdyYXAsXG5ib2R5Om5vdCgubGctZnJvbS1oYXNoKSAubGctb3V0ZXIubGctc3RhcnQtem9vbSAubGctaXRlbTpub3QoLmxnLXpvb21hYmxlKSAubGctdmlkZW8tY29udCB7XG4gIG9wYWNpdHk6IDA7XG4gIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDAuNSwgMC41LCAwLjUpO1xuICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XG4gIC1tcy10cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNSwgMC41LCAwLjUpO1xuICB0cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAhaW1wb3J0YW50O1xuICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgIWltcG9ydGFudDtcbiAgLW8tdHJhbnNpdGlvbjogLW8tdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgIWltcG9ydGFudDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgIWltcG9ydGFudDtcbn1cblxuYm9keTpub3QoLmxnLWZyb20taGFzaCkgLmxnLW91dGVyLmxnLXN0YXJ0LXpvb20gLmxnLWl0ZW06bm90KC5sZy16b29tYWJsZSkubGctY29tcGxldGUgLmxnLWltZy13cmFwLFxuYm9keTpub3QoLmxnLWZyb20taGFzaCkgLmxnLW91dGVyLmxnLXN0YXJ0LXpvb20gLmxnLWl0ZW06bm90KC5sZy16b29tYWJsZSkubGctY29tcGxldGUgLmxnLXZpZGVvLWNvbnQge1xuICBvcGFjaXR5OiAxO1xuICAtbW96LXRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcbiAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xuICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcbiAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xufVxuXG4ubGctZ3JvdXA6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4ubGctY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgb3V0bGluZTogbm9uZTtcbn1cblxuLmxnLWNvbnRhaW5lci5sZy1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5sZy1vbiB7XG4gIHNjcm9sbC1iZWhhdmlvcjogdW5zZXQ7XG59XG5cbi5sZy10b29sYmFyLFxuLmxnLXByZXYsXG4ubGctbmV4dCxcbi5sZy1wYWdlci1vdXRlcixcbi5sZy1oaWRlLXN1Yi1odG1sIC5sZy1zdWItaHRtbCB7XG4gIG9wYWNpdHk6IDA7XG4gIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm0sIG9wYWNpdHk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMjVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcztcbiAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzO1xuICAtby10cmFuc2l0aW9uOiAtby10cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMjVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcztcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMjVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjI1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XG59XG5cbi5sZy1zaG93LWluIC5sZy10b29sYmFyLFxuLmxnLXNob3ctaW4gLmxnLXByZXYsXG4ubGctc2hvdy1pbiAubGctbmV4dCxcbi5sZy1zaG93LWluIC5sZy1wYWdlci1vdXRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5sZy1zaG93LWluLmxnLWhpZGUtc3ViLWh0bWwgLmxnLXN1Yi1odG1sIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmxnLXNob3ctaW4gLmxnLWhpZGUtaXRlbXMgLmxnLXByZXYge1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMHB4LCAwLCAwKTtcbn1cblxuLmxnLXNob3ctaW4gLmxnLWhpZGUtaXRlbXMgLmxnLW5leHQge1xuICBvcGFjaXR5OiAwO1xuICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XG59XG5cbi5sZy1zaG93LWluIC5sZy1oaWRlLWl0ZW1zIC5sZy10b29sYmFyIHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMHB4LCAwKTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTBweCwgMCk7XG59XG5cbi5sZy1zaG93LWluIC5sZy1oaWRlLWl0ZW1zLmxnLWhpZGUtc3ViLWh0bWwgLmxnLXN1Yi1odG1sIHtcbiAgb3BhY2l0eTogMDtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDIwcHgsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDIwcHgsIDApO1xufVxuXG4ubGctb3V0ZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgei1pbmRleDogMTA1MDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgb3BhY2l0eTogMC4wMDE7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHdpbGwtY2hhbmdlOiBhdXRvO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4xNXMgZWFzZSAwcztcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjE1cyBlYXNlIDBzO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTVzIGVhc2UgMHM7XG59XG5cbi5sZy1vdXRlciAqIHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5sZy1vdXRlci5sZy16b29tLWZyb20taW1hZ2Uge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctb3V0ZXIubGctdmlzaWJsZSB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5sZy1vdXRlci5sZy1jc3MzIC5sZy1pdGVtOm5vdCgubGctc3RhcnQtZW5kLXByb2dyZXNzKS5sZy1wcmV2LXNsaWRlLFxuLmxnLW91dGVyLmxnLWNzczMgLmxnLWl0ZW06bm90KC5sZy1zdGFydC1lbmQtcHJvZ3Jlc3MpLmxnLW5leHQtc2xpZGUsXG4ubGctb3V0ZXIubGctY3NzMyAubGctaXRlbTpub3QoLmxnLXN0YXJ0LWVuZC1wcm9ncmVzcykubGctY3VycmVudCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbi1kdXJhdGlvbjogaW5oZXJpdCAhaW1wb3J0YW50O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiBpbmhlcml0ICFpbXBvcnRhbnQ7XG4gIC13ZWJraXQtdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGluaGVyaXQgIWltcG9ydGFudDtcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGluaGVyaXQgIWltcG9ydGFudDtcbn1cblxuLmxnLW91dGVyLmxnLWNzczMubGctZHJhZ2dpbmcgLmxnLWl0ZW0ubGctcHJldi1zbGlkZSxcbi5sZy1vdXRlci5sZy1jc3MzLmxnLWRyYWdnaW5nIC5sZy1pdGVtLmxnLW5leHQtc2xpZGUsXG4ubGctb3V0ZXIubGctY3NzMy5sZy1kcmFnZ2luZyAubGctaXRlbS5sZy1jdXJyZW50IHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctb3V0ZXIubGctZ3JhYiBpbWcubGctb2JqZWN0IHtcbiAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XG4gIGN1cnNvcjogLW1vei1ncmFiO1xuICBjdXJzb3I6IC1vLWdyYWI7XG4gIGN1cnNvcjogLW1zLWdyYWI7XG4gIGN1cnNvcjogZ3JhYjtcbn1cblxuLmxnLW91dGVyLmxnLWdyYWJiaW5nIGltZy5sZy1vYmplY3Qge1xuICBjdXJzb3I6IG1vdmU7XG4gIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcbiAgY3Vyc29yOiAtbW96LWdyYWJiaW5nO1xuICBjdXJzb3I6IC1vLWdyYWJiaW5nO1xuICBjdXJzb3I6IC1tcy1ncmFiYmluZztcbiAgY3Vyc29yOiBncmFiYmluZztcbn1cblxuLmxnLW91dGVyIC5sZy1jb250ZW50IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG59XG5cbi5sZy1vdXRlciAubGctaW5uZXIge1xuICB3aWR0aDogMTAwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDBzO1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDBzO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDBzO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xufVxuXG4ubGctb3V0ZXIgLmxnLWl0ZW0ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbi5sZy1vdXRlciAubGctaXRlbTpub3QoLmxnLXN0YXJ0LWVuZC1wcm9ncmVzcykge1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvbG9hZGluZy5naWZcIikgbm8tcmVwZWF0IHNjcm9sbCBjZW50ZXIgY2VudGVyIHRyYW5zcGFyZW50O1xufVxuXG4ubGctb3V0ZXIubGctY3NzMyAubGctcHJldi1zbGlkZSxcbi5sZy1vdXRlci5sZy1jc3MzIC5sZy1jdXJyZW50LFxuLmxnLW91dGVyLmxnLWNzczMgLmxnLW5leHQtc2xpZGUge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDtcbn1cblxuLmxnLW91dGVyLmxnLWNzcyAubGctY3VycmVudCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xufVxuXG4ubGctb3V0ZXIgLmxnLWl0ZW0sXG4ubGctb3V0ZXIgLmxnLWltZy13cmFwIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmxnLW91dGVyIC5sZy1pdGVtOmJlZm9yZSxcbi5sZy1vdXRlciAubGctaW1nLXdyYXA6YmVmb3JlIHtcbiAgY29udGVudDogJyc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgaGVpZ2h0OiAxMDAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xufVxuXG4ubGctb3V0ZXIgLmxnLWltZy13cmFwIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGZvbnQtc2l6ZTogMDtcbn1cblxuLmxnLW91dGVyIC5sZy1pdGVtLmxnLWNvbXBsZXRlIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbn1cblxuLmxnLW91dGVyIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xuICB6LWluZGV4OiAxMDYwO1xufVxuXG4ubGctb3V0ZXIgLmxnLW9iamVjdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXgtaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5sZy1vdXRlciAubGctZW1wdHktaHRtbC5sZy1zdWItaHRtbCxcbi5sZy1vdXRlciAubGctZW1wdHktaHRtbCAubGctc3ViLWh0bWwge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ubGctb3V0ZXIubGctaGlkZS1kb3dubG9hZCAubGctZG93bmxvYWQge1xuICBvcGFjaXR5OiAwLjc1O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cblxuLmxnLW91dGVyIC5sZy1maXJzdC1zbGlkZSAubGctZHVtbXktaW1nIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogNTAlO1xufVxuXG4ubGctb3V0ZXIubGctY29tcG9uZW50cy1vcGVuOm5vdCgubGctem9vbWVkKSAubGctY29tcG9uZW50cyB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwJSwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCUsIDApO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctb3V0ZXIubGctY29tcG9uZW50cy1vcGVuOm5vdCgubGctem9vbWVkKSAubGctc3ViLWh0bWwge1xuICBvcGFjaXR5OiAxO1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMC4xNXM7XG59XG5cbi5sZy1iYWNrZHJvcCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xuICB6LWluZGV4OiAxMDQwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICBvcGFjaXR5OiAwO1xuICB3aWxsLWNoYW5nZTogYXV0bztcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDMzM21zIGVhc2UtaW4gMHM7XG4gIC1vLXRyYW5zaXRpb246IG9wYWNpdHkgMzMzbXMgZWFzZS1pbiAwcztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMzNtcyBlYXNlLWluIDBzO1xufVxuXG4ubGctYmFja2Ryb3AuaW4ge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctY3NzMy5sZy1uby10cmFucyAubGctcHJldi1zbGlkZSxcbi5sZy1jc3MzLmxnLW5vLXRyYW5zIC5sZy1uZXh0LXNsaWRlLFxuLmxnLWNzczMubGctbm8tdHJhbnMgLmxnLWN1cnJlbnQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IG5vbmUgMHMgZWFzZSAwcyAhaW1wb3J0YW50O1xuICAtbW96LXRyYW5zaXRpb246IG5vbmUgMHMgZWFzZSAwcyAhaW1wb3J0YW50O1xuICAtby10cmFuc2l0aW9uOiBub25lIDBzIGVhc2UgMHMgIWltcG9ydGFudDtcbiAgdHJhbnNpdGlvbjogbm9uZSAwcyBlYXNlIDBzICFpbXBvcnRhbnQ7XG59XG5cbi5sZy1jc3MzLmxnLXVzZS1jc3MzIC5sZy1pdGVtIHtcbiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG4gIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5sZy1jc3MzLmxnLWZhZGUgLmxnLWl0ZW0ge1xuICBvcGFjaXR5OiAwO1xufVxuXG4ubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtLmxnLXByZXYtc2xpZGUsXG4ubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtLmxnLW5leHQtc2xpZGUsXG4ubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBlYXNlIDBzO1xuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBlYXNlIDBzO1xuICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMXMgZWFzZSAwcztcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjFzIGVhc2UgMHM7XG59XG5cbi5sZy1jc3MzLmxnLXVzZS1jc3MzIC5sZy1pdGVtLmxnLXN0YXJ0LXByb2dyZXNzIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSkgMHM7XG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpIDBzO1xuICAtby10cmFuc2l0aW9uOiAtby10cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpIDBzO1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpIDBzO1xufVxuXG4ubGctY3NzMy5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1zdGFydC1lbmQtcHJvZ3Jlc3Mge1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcztcbiAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XG4gIC1vLXRyYW5zaXRpb246IC1vLXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XG59XG5cbi5sZy1jc3MzLmxnLXNsaWRlLmxnLXVzZS1jc3MzIC5sZy1pdGVtIHtcbiAgb3BhY2l0eTogMDtcbn1cblxuLmxnLWNzczMubGctc2xpZGUubGctdXNlLWNzczMgLmxnLWl0ZW0ubGctcHJldi1zbGlkZSB7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMCUsIDAsIDApO1xufVxuXG4ubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1uZXh0LXNsaWRlIHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xufVxuXG4ubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1jdXJyZW50IHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICBvcGFjaXR5OiAxO1xufVxuXG4ubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1wcmV2LXNsaWRlLFxuLmxnLWNzczMubGctc2xpZGUubGctdXNlLWNzczMgLmxnLWl0ZW0ubGctbmV4dC1zbGlkZSxcbi5sZy1jc3MzLmxnLXNsaWRlLmxnLXVzZS1jc3MzIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjFzIGVhc2UgMHM7XG4gIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMXMgZWFzZSAwcztcbiAgLW8tdHJhbnNpdGlvbjogLW8tdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjFzIGVhc2UgMHM7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4xcyBlYXNlIDBzO1xufVxuXG4ubGctY29udGFpbmVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmxnLWNvbnRhaW5lci5sZy1zaG93IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5sZy1jb250YWluZXIubGctZHJhZ2dpbmctdmVydGljYWwgLmxnLWJhY2tkcm9wIHtcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xufVxuXG4ubGctY29udGFpbmVyLmxnLWRyYWdnaW5nLXZlcnRpY2FsIC5sZy1jc3MzIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xuICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IDBzICFpbXBvcnRhbnQ7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDBzICFpbXBvcnRhbnQ7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi5sZy1pbmxpbmUgLmxnLWJhY2tkcm9wLFxuLmxnLWlubGluZSAubGctb3V0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5sZy1pbmxpbmUgLmxnLWJhY2tkcm9wIHtcbiAgei1pbmRleDogMTtcbn1cblxuLmxnLWlubGluZSAubGctb3V0ZXIge1xuICB6LWluZGV4OiAyO1xufVxuXG4ubGctaW5saW5lIC5sZy1tYXhpbWl6ZTphZnRlciB7XG4gIGNvbnRlbnQ6ICdcXGU5MDknO1xufVxuXG4ucmV2aWV3cyB7XG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNFQUYwRkYgMCUsICNGNkY5RkYgMTAwJSk7XG59XG5cbi5yZXZpZXdzX19pbm5lciB7XG4gIHBhZGRpbmc6IDEwMHB4IDBweDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLnJldmlld3NfX2luZm8ge1xuICBmbGV4OiAwIDAgMTAwJTtcbn1cblxuLnJldmlld3NfX2NvbnRlbnQge1xuICB3aWR0aDogNTAlO1xufVxuXG4ucmV2aWV3c19fc3VidGl0bGUge1xuICBjb2xvcjogIzNENEY5RjtcbiAgbWFyZ2luLXRvcDogNDFweDtcbn1cblxuLnJldmlld3NfX3RpdGxlIHtcbiAgbWFyZ2luLXRvcDogMTRweDtcbiAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBjb2xvcjogIzNENEY5Rjtcbn1cblxuLnJldmlld3NfX3RleHQge1xuICBtYXgtd2lkdGg6IDMyM3B4O1xuICBtYXJnaW4tdG9wOiAxNHB4O1xufVxuXG4ucmV2aWV3c19fc2xpZGVyIHtcbiAgZmxleDogMCAwIDUwJTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XG4gIC5hYm91dF9vciB7XG4gICAgbWFyZ2luOiAwIDMwcHg7XG4gIH1cblxuICAuYWJvdXRfb3I6YmVmb3JlLFxuICAuYWJvdXRfb3I6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAxNXB4O1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNEQUU0RkU7XG4gICAgdG9wOiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICB9XG5cbiAgLmFib3V0X29yOmJlZm9yZSB7XG4gICAgbGVmdDogMzJweDtcbiAgfVxuXG4gIC5hYm91dF9vcjphZnRlciB7XG4gICAgcmlnaHQ6IDE2cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XG4gIC5oZWFkZXJfX2J1cmdlciB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuXG4gIC5saXN0LWhlYWRlcl9fbmF2IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLnBsYW5fX2J0bnMge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cblxuICAucGxhbl9fYnRucy1ibHVlIHtcbiAgICB3aWR0aDogaW5pdGlhbDtcbiAgfVxuXG4gIC5wbGFuX19idG5zLWdyZXkge1xuICAgIHdpZHRoOiBpbml0aWFsO1xuICAgIG1hcmdpbi10b3A6IDBweDtcbiAgfVxuXG4gIC5hYm91dF9fY29sdW1uIHtcbiAgICBmbGV4OiAwIDEgNTAlO1xuICB9XG5cbiAgLmFib3V0X29yIHtcbiAgICBtYXJnaW46IDAgNDhweDtcbiAgfVxuXG4gIC5wcm9kdWN0aXZpdHlfX2NvbHVtbiB7XG4gICAgZmxleDogMCAxIDUwJTtcbiAgfVxuXG4gIC5wcm9kdWN0aXZpdHlfX2NvbHVtbi1sZWZ0IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICB9XG5cbiAgLnByb2R1Y3Rpdml0eV9fY29sdW1uLXJpZ2h0IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgfVxuXG4gIC5wcm9kdWN0aXZpdHlfX3ByaWNlIHtcbiAgICBtYXJnaW46IGluaXRpYWw7XG4gIH1cblxuICAucHJvZHVjdGl2aXR5X19wcmljZS1sZWZ0IHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgfVxuXG4gIC5zd2lwZV9fY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA2M3B4IDQxcHg7XG4gIH1cblxuICAuc3dpcGVfX2FkZCB7XG4gICAgbWFyZ2luLWxlZnQ6IDI0cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDY5MnB4KSB7XG4gIC5wbGFuX19jb250YWluZXIgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICByaWdodDogLTgyJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgbWFyZ2luLWxlZnQ6IDczcHg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB9XG5cbiAgLmxpc3QtaGVhZGVyX19zb2NpYWxzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLnN3aXBlci10ZXh0IHtcbiAgICBtYXJnaW4tdG9wOiAtOTVweDtcbiAgfVxuXG4gIC5zd2lwZXItdGV4dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNDhweDtcbiAgfVxuXG4gIC5zcG9uc29yc19faXRlbXMge1xuICAgIGZsZXgtd3JhcDogbm93cmFwO1xuICB9XG5cbiAgLnNwb25zb3JzX19pdGVtIHtcbiAgICBmbGV4OiAxIDEgMjAlO1xuICB9XG5cbiAgLmFib3V0IHtcbiAgICBwYWRkaW5nOiAxMDBweCAwcHg7XG4gIH1cblxuICAuYWJvdXRfX3JvdyB7XG4gICAgbWFyZ2luLXRvcDogNzdweDtcbiAgfVxuXG4gIC5hYm91dF9fY29sdW1uIHtcbiAgICBmbGV4OiAwIDEgMjUlO1xuICB9XG5cbiAgLmFib3V0X19jb2x1bW46bm90KDpmaXJzdC1jaGlsZCk6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogNjAlO1xuICAgIGxlZnQ6IC0xN3B4O1xuICAgIHdpZHRoOiAyOHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNEQUU0RkU7XG4gICAgaGVpZ2h0OiAxcHg7XG4gIH1cblxuICAuaXRlbS1hYm91dF9fdGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDMzcHg7XG4gIH1cblxuICAuaXRlbS1hYm91dF9fdGV4dCB7XG4gICAgbWFyZ2luLXRvcDogMjVweDtcbiAgfVxuXG4gIC5hYm91dF9idG5zIHtcbiAgICBtYXJnaW4tdG9wOiA5MnB4O1xuICB9XG5cbiAgLnByb2R1Y3Rpdml0eV9fY29sdW1uLWxlZnQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDkwcHg7XG4gIH1cblxuICAucHJvZHVjdGl2aXR5X19jb2x1bW4tcmlnaHQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDkwcHg7XG4gIH1cblxuICAucHJvZHVjdGl2aXR5X19pdGVtIHtcbiAgICBtYXJnaW46IDY3cHggMHB4O1xuICB9XG5cbiAgLmJsb2dfX2lubmVyIHtcbiAgICBtYXJnaW46IDEwNHB4IDBweDtcbiAgfVxuXG4gIC5ibG9nX19zd2lwZXIge1xuICAgIG1hcmdpbi10b3A6IDc1cHg7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDgyOHB4KSB7XG4gIC5wbGFuX19jb250YWluZXIgaW1nIHtcbiAgICByaWdodDogLTQxJTtcbiAgfVxufVxuXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmxpc3QtaGVhZGVyIGRpdiB7XG4gICAgbWFyZ2luLXRvcDogMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA0NHB4O1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLnNsaWRlLXN3aXBlciB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgfVxuXG4gIC5wbGFuX19jb250YWluZXIgaW1nIHtcbiAgICByaWdodDogLTMyJTtcbiAgfVxuXG4gIC5wcm9kdWN0aXZpdHlfX3BlcmNlbnRzIHtcbiAgICBtYXJnaW4tdG9wOiAyNHB4O1xuICB9XG5cbiAgLnByb2R1Y3Rpdml0eV9fcHJpY2Uge1xuICAgIG1hcmdpbi10b3A6IDI2cHg7XG4gIH1cblxuICAuc3dpcGVfX2NvbnRhaW5lciB7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gIH1cblxuICAuc3dpcGVfX2dhbGxlcnkge1xuICAgIGZsZXg6IDAgMSA1MCU7XG4gIH1cblxuICAuc3dpcGVfX2dhbGxlcnkge1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcbiAgfVxuXG4gIC5zd2lwZV9fZ2FsbGVyeS1iaWcge1xuICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcbiAgICBncmlkLXJvdzogMSAvIDM7XG4gIH1cblxuICAuc3dpcGVfX2dhbGxlcnktYmlnIGltZyB7XG4gICAgd2lkdGg6IGluaXRpYWw7XG4gIH1cblxuICAuc3dpcGVfX2dhbGxlcnktc21hbGwgaW1nIHtcbiAgICB3aWR0aDogaW5pdGlhbDtcbiAgfVxuXG4gIC5zd2lwZV9fZ2FsbGVyeS1zbWFsbC0yIHtcbiAgICBncmlkLWNvbHVtbjogLTM7XG4gIH1cblxuICAuc3dpcGVfX2luZm8ge1xuICAgIGZsZXg6IDAgMSA1MCU7XG4gICAgbWFyZ2luOiAwcHggMHB4IDBweCA2N3B4O1xuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcbiAgLnN3aXBlci1idXR0b24tcHJldixcbiAgLnN3aXBlci1idXR0b24tbmV4dCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG4gIC5zd2lwZV9fZXh0cmEge1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDk1MHB4KSB7XG4gIC5zd2lwZV9fZ2FsbGVyeS1iaWc6YmVmb3JlIHtcbiAgICB3aWR0aDogY2FsYygzNXB4ICsgKDY1IC0gMzUpICogKCgxMDB2dyAtIDMyMHB4KSAvICg5NTAgLSAzMjApKSk7XG4gICAgaGVpZ2h0OiBjYWxjKDM1cHggKyAoNjUgLSAzNSkgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gKDk1MCAtIDMyMCkpKTtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTc2cHgpIHtcbiAgLmhlYWRlcl9fbWVudSB7XG4gICAgcGFkZGluZy10b3A6IDQwcHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVGOEZGO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuXG4gIC5oZWFkZXJfX21lbnUgLmxpc3QtaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLXRvcDogMTNweDtcbiAgfVxuXG4gIC5oZWFkZXJfX21lbnUgLmxpc3QtaGVhZGVyIGRpdiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cblxuICAuaGVhZGVyX19tZW51IC5saXN0LWhlYWRlcl9faXRlbSB7XG4gICAgbWFyZ2luLWxlZnQ6IDBweCAhaW1wb3J0YW50O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gIH1cbn0iLCIkYmx1ZTojNUU4MUZFO1xyXG4kYmx1ZVNlY29uZDojM0Q0RjlGO1xyXG4kYmx1ZVRoaXJkIDojOEQ5NkJEO1xyXG4kYmx1ZUZvdXJ0aDojNEM4NUZGO1xyXG4keHM6IDA7XHJcbiRzbTogNTc2cHg7XHJcbiRtZDogNzY4cHg7XHJcbiRsZzogOTkycHg7XHJcbiR4bDogMTIwMHB4O1xyXG4keHhsOiAxNDAwcHg7IiwiLmhlYWRlciB7XHJcblxyXG4gICAgJl9fY29udGFpbmVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIG1heC13aWR0aDogMTA5N3B4O1xyXG4gICAgICAgIHBhZGRpbmc6IDMwcHggMTVweDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xvZ28ge1xyXG4gICAgICAgIHdpZHRoOiAyNnB4O1xyXG4gICAgICAgIGhlaWdodDogMjZweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgfVxyXG5cclxuICAgICZfX21lbnUge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleDogMSAxIGF1dG87XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAgICAgICB0cmFuc2l0aW9uOiBsZWZ0IDAuM3MgbGluZWFyO1xyXG4gICAgICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDczcHg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi0tYWN0aXZlIHtcclxuICAgICAgICAgICAgbGVmdDogNTAlICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgIG92ZXJmbG93LXk6IGF1dG87XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYShtYXgtd2lkdGg6JHNtKSB7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDEwMCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGNUY4RkY7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICYgLmxpc3QtaGVhZGVyIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTNweDtcclxuICAgICAgICAgICAgICAgICYgZGl2IHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmIC5saXN0LWhlYWRlcl9faXRlbSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4IDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnVyZ2VyIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICB6LWluZGV4OiAxMDAxO1xyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6ICRzbSkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICAgICAgd2lkdGg6IDMwcHg7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAmOmJlZm9yZSxcclxuICAgICAgICAmOmFmdGVyLFxyXG4gICAgICAgICYgc3BhbiB7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmJlZm9yZSxcclxuICAgICAgICAmOmFmdGVyIHtcclxuICAgICAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICBib3R0b206IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYgc3BhbiB7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIC01MCUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLS1hY3RpdmU6OmJlZm9yZSB7XHJcbiAgICAgICAgICAgIGJvdHRvbTogNTAlO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZykgdHJhbnNsYXRlKDBweCwgNTAlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi0tYWN0aXZlOjphZnRlciB7XHJcbiAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpIHRyYW5zbGF0ZSgwcHgsIC01MCUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLS1hY3RpdmUgc3BhbiB7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2xpc3Qge1xyXG4gICAgfVxyXG59XHJcbi5saXN0LWhlYWRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgJl9fbmF2LCAmX19zb2NpYWxzIHtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgJl9fbmF2IHtcclxuICAgICAgICBAbWVkaWEobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX3NvY2lhbHMge1xyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9faXRlbSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNDJweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICAgICAgZmlsdGVyOiBpbnZlcnQoNjIlKSBzZXBpYSg0NSUpIHNhdHVyYXRlKDcxMTUlKSBodWUtcm90YXRlKDIxMWRlZykgYnJpZ2h0bmVzcygxMDAlKSBjb250cmFzdCgxMDYlKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fbGluayB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDVlbTtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcclxuICAgICAgICBjb2xvcjogIzY5N0NBNjtcclxuICAgICAgICB0ZXh0LXNoYWRvdzogMHB4IDBweCA1cHggI0U2RTZFNjtcclxuICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzIGxpbmVhcjtcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6JGJsdWVcclxuICAgICAgICB9ICAgXHJcbiAgICB9XHJcbiAgICAmIGRpdiB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTNweDtcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6JGxnKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDQ0cHg7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4uYnRuIHtcclxufVxyXG4iLCJAZm9udC1mYWNle2ZvbnQtZmFtaWx5OnN3aXBlci1pY29ucztzcmM6dXJsKCdkYXRhOmFwcGxpY2F0aW9uL2ZvbnQtd29mZjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCwgZDA5R1JnQUJBQUFBQUFaZ0FCQUFBQUFBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJHUmxSTkFBQUdSQUFBQUJvQUFBQWNpNnFIa1VkRVJVWUFBQVdnQUFBQUl3QUFBQ1FBWUFCWFIxQlBVd0FBQmhRQUFBQXVBQUFBTnVBWTcreEhVMVZDQUFBRnhBQUFBRkFBQUFCbTJmUGN6VTlUTHpJQUFBSGNBQUFBU2dBQUFHQlA5VjVSWTIxaGNBQUFBa1FBQUFDSUFBQUJZdDZGMGNCamRuUWdBQUFDekFBQUFBUUFBQUFFQUJFQlJHZGhjM0FBQUFXWUFBQUFDQUFBQUFqLy93QURaMng1WmdBQUF5d0FBQURNQUFBRDJNSHRyeVZvWldGa0FBQUJiQUFBQURBQUFBQTJFMitlb1dob1pXRUFBQUdjQUFBQUh3QUFBQ1FDOWdEemFHMTBlQUFBQWlnQUFBQVpBQUFBcmdKa0FCRnNiMk5oQUFBQzBBQUFBRm9BQUFCYUZRQVVHRzFoZUhBQUFBRzhBQUFBSHdBQUFDQUFjQUJBYm1GdFpRQUFBL2dBQUFFNUFBQUNYdkZkQndsd2IzTjBBQUFGTkFBQUFHSUFBQUNFNXM3NGhYamFZMkJrWUdBQVlwZjVIdS9qK1cyK01uQXpNWURBemFYNlFqRDYvNC8vQnhqNUdBOEF1UndNWUdrQVB5d0wxM2phWTJCa1lHQTg4UDhBZ3g0aisvOGZRRFlmQTFBRUJXZ0RBSUIyQk9vQWVOcGpZR1JnWU5CaDRHZGdZZ0FCRU1uSUFCSnpZTkFEQ1FBQUNXZ0FzUUI0Mm1OZ1lmekNPSUdCbFlHQjBZY3hqWUdCd1IxS2YyV1FaR2hoWUdCaVlHVm1nQUZHQmlRUWtPYWF3dERBb01CUXhYamcvd0VHUGNZRERBNHdOVUEyQ0Nnd3NBQUFPNEVMNmdBQWVOcGoyTTBneUFBQ3F4Z0dOV0JrWjJENC93TUEreGtEZGdBQUFIamFZMkJnWUdhQVlCa0dSZ1lRaUFIeUdNRjhGZ1lISU0zRHdNSEFCR1FyTU9neVdETEVNMVQ5L3c4VUJmRU1nTHpFLy8vL1AvNS8vZi9WL3h2K3I0ZWFBQWVNYkF4d0lVWW1JTUhFZ0tZQVlqVWNzREF3c0xLeGMzQnljZlB3OGpFUUEvZ1pCQVNGaEVWRXhjUWxKS1drWldUbDVCVVVsWlJWVk5YVU5UUVpCZ01BQU1SK0UrZ0FFUUZFQUFBQUtnQXFBQ29BTkFBK0FFZ0FVZ0JjQUdZQWNBQjZBSVFBamdDWUFLSUFyQUMyQU1BQXlnRFVBTjRBNkFEeUFQd0JCZ0VRQVJvQkpBRXVBVGdCUWdGTUFWWUJZQUZxQVhRQmZnR0lBWklCbkFHbUFiSUJ6Z0hzQUFCNDJ1Mk5NUTZDVUF5R1c1Njh4OUFuZVlZZ200TUpiaEtGYUV4SU9BVlg4QXBld1N0NEJpYzRBZmVBaWQzVk9CaXhEeGZQWUV6YTVPK1hmaTA0WUFEZ2dpVUlVTEN1RUpLOFZoTzRiU3ZwZG5rdEhJNVFDWXRkaTJzbDhablhhSGxxVXJOS3pkS2NUOGNqbHErcndaU3ZJVmN6TmllenNmblAvdXpubWZQRkJOT0RNMks3TVRRNDVZRUFacUdQODFBbUdHY0YzaVBxT29wMHIxU1BUYVRiVmtmVWU0SFhqOTd3WUUreU53V1l4d1d1NHYxdWdXSGdvM1MxWGRaRVZxV003RVQwY2ZuTEd4V2ZrZ1I0Mm8yUHZXckRNQlNGai9JSExhRjB6S2pSZ2RpVk13U2NOUkFvV1VvSDc4WTJpY0IveUlZMDlBbjZBSDJCZHUvVUIreXhvcFlzaFFpRXZudnUwZFVSZ0R0OFFlQzhQRHc3RnBqaTNmRUE0ei9QRUo2WU9CNWhLaDRkajNFdlhoeFBxSC9TS1VZM3JKN3NyWjRGWm5oMVBNQXRQaHdQNmZsMlBNSk1QRGdlUTRyWThZVDZHemFvMGVBRUE0MDlEdWdnbVRuRm5PY1NDaUVpTE1neENpVEk2Q3E1RFpVZDNRbXAxMHZPMExhTFRkMmNqTjRmT3VtbGM3bFVZYlNRY1pGa3V0Ukc3ZzZKS1pLeTBSbWRMWTY4MENEbkVKK1VNa3BGRmUxUk43bnhkVnBYckM0YVR0bmF1ck9uWWVyY1pnMllWbUxOL2QvZ2N6ZkVpbXJFL2ZzL2JPdXEyOVptbjh0bG9PUmFYZ1pnR2E3OHlPOS9jblhtMkJwYUd2cTI1RHY5UzRFOSs1U0ljOVBxdXBKS2hZRlNTbDQ3K1FjcjFtWU5BQUFBZU5wdHcwY0t3a0FBQU1EWkpBOFE3T1VKdmtMc1BmWjZ6RlZFUlB5OHFIaDJZRVIrM2kvQlA4M3ZJQkxMeVNzb0tpbXJxS3FwYTJocDYranE2UnNZR2htYm1KcVpTeTBzcmF4dGJPM3NIUnlkbkVNVTR1UjZ5eDdKSlh2ZVA3V3JEeWNBQUFBQUFBSC8vd0FDZU5wallHUmdZT0FCWWhrZ1pnSkNaZ1pOQmtZR0xRWnRJSnNGTE1ZQUFBdzNBTGdBZU5vbGl6RUtnREFRQkNjaFJiQzJzRkVSMFlENnFWUWlCQ3YvSDllekdJNlo1WEJBdzhDQksvbTVpUVFWYXVWYlhMbk9yTVp2Mm9MZEtGYThQanVydTJoSnpHYWJtT1NMek5NenZ1dHBCM040Mm1OZ1pHQmc0R0tRWXpCaFlNeEpMTWxqNEdCZ0FZb3cvUC9QQUpKaExNNnNTb1dLZldDQUF3REFqZ2JSQUFCNDJtTmdZR0JrQUlJYkNabzVJUHJtVW4waEdBMEFPOEVGVFFBQScpO2ZvbnQtd2VpZ2h0OjQwMDtmb250LXN0eWxlOm5vcm1hbH06cm9vdHstLXN3aXBlci10aGVtZS1jb2xvcjojMDA3YWZmfS5zd2lwZXJ7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0bztwb3NpdGlvbjpyZWxhdGl2ZTtvdmVyZmxvdzpoaWRkZW47bGlzdC1zdHlsZTpub25lO3BhZGRpbmc6MDt6LWluZGV4OjF9LnN3aXBlci12ZXJ0aWNhbD4uc3dpcGVyLXdyYXBwZXJ7ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5zd2lwZXItd3JhcHBlcntwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3otaW5kZXg6MTtkaXNwbGF5OmZsZXg7dHJhbnNpdGlvbi1wcm9wZXJ0eTp0cmFuc2Zvcm07Ym94LXNpemluZzpjb250ZW50LWJveH0uc3dpcGVyLWFuZHJvaWQgLnN3aXBlci1zbGlkZSwuc3dpcGVyLXdyYXBwZXJ7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDBweCwwLDApfS5zd2lwZXItcG9pbnRlci1ldmVudHN7dG91Y2gtYWN0aW9uOnBhbi15fS5zd2lwZXItcG9pbnRlci1ldmVudHMuc3dpcGVyLXZlcnRpY2Fse3RvdWNoLWFjdGlvbjpwYW4teH0uc3dpcGVyLXNsaWRle2ZsZXgtc2hyaW5rOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTt0cmFuc2l0aW9uLXByb3BlcnR5OnRyYW5zZm9ybX0uc3dpcGVyLXNsaWRlLWludmlzaWJsZS1ibGFua3t2aXNpYmlsaXR5OmhpZGRlbn0uc3dpcGVyLWF1dG9oZWlnaHQsLnN3aXBlci1hdXRvaGVpZ2h0IC5zd2lwZXItc2xpZGV7aGVpZ2h0OmF1dG99LnN3aXBlci1hdXRvaGVpZ2h0IC5zd2lwZXItd3JhcHBlcnthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O3RyYW5zaXRpb24tcHJvcGVydHk6dHJhbnNmb3JtLGhlaWdodH0uc3dpcGVyLTNkLC5zd2lwZXItM2Quc3dpcGVyLWNzcy1tb2RlIC5zd2lwZXItd3JhcHBlcntwZXJzcGVjdGl2ZToxMjAwcHh9LnN3aXBlci0zZCAuc3dpcGVyLWN1YmUtc2hhZG93LC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZSwuc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCwuc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9wLC5zd2lwZXItM2QgLnN3aXBlci13cmFwcGVye3RyYW5zZm9ybS1zdHlsZTpwcmVzZXJ2ZS0zZH0uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9tLC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdCwuc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93LXJpZ2h0LC5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctdG9we3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3BvaW50ZXItZXZlbnRzOm5vbmU7ei1pbmRleDoxMH0uc3dpcGVyLTNkIC5zd2lwZXItc2xpZGUtc2hhZG93e2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMTUpfS5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctbGVmdHtiYWNrZ3JvdW5kLWltYWdlOmxpbmVhci1ncmFkaWVudCh0byBsZWZ0LHJnYmEoMCwwLDAsLjUpLHJnYmEoMCwwLDAsMCkpfS5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctcmlnaHR7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQscmdiYSgwLDAsMCwuNSkscmdiYSgwLDAsMCwwKSl9LnN3aXBlci0zZCAuc3dpcGVyLXNsaWRlLXNoYWRvdy10b3B7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQodG8gdG9wLHJnYmEoMCwwLDAsLjUpLHJnYmEoMCwwLDAsMCkpfS5zd2lwZXItM2QgLnN3aXBlci1zbGlkZS1zaGFkb3ctYm90dG9te2JhY2tncm91bmQtaW1hZ2U6bGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSxyZ2JhKDAsMCwwLC41KSxyZ2JhKDAsMCwwLDApKX0uc3dpcGVyLWNzcy1tb2RlPi5zd2lwZXItd3JhcHBlcntvdmVyZmxvdzphdXRvO3Njcm9sbGJhci13aWR0aDpub25lOy1tcy1vdmVyZmxvdy1zdHlsZTpub25lfS5zd2lwZXItY3NzLW1vZGU+LnN3aXBlci13cmFwcGVyOjotd2Via2l0LXNjcm9sbGJhcntkaXNwbGF5Om5vbmV9LnN3aXBlci1jc3MtbW9kZT4uc3dpcGVyLXdyYXBwZXI+LnN3aXBlci1zbGlkZXtzY3JvbGwtc25hcC1hbGlnbjpzdGFydCBzdGFydH0uc3dpcGVyLWhvcml6b250YWwuc3dpcGVyLWNzcy1tb2RlPi5zd2lwZXItd3JhcHBlcntzY3JvbGwtc25hcC10eXBlOnggbWFuZGF0b3J5fS5zd2lwZXItdmVydGljYWwuc3dpcGVyLWNzcy1tb2RlPi5zd2lwZXItd3JhcHBlcntzY3JvbGwtc25hcC10eXBlOnkgbWFuZGF0b3J5fS5zd2lwZXItY2VudGVyZWQ+LnN3aXBlci13cmFwcGVyOjpiZWZvcmV7Y29udGVudDonJztmbGV4LXNocmluazowO29yZGVyOjk5OTl9LnN3aXBlci1jZW50ZXJlZC5zd2lwZXItaG9yaXpvbnRhbD4uc3dpcGVyLXdyYXBwZXI+LnN3aXBlci1zbGlkZTpmaXJzdC1jaGlsZHttYXJnaW4taW5saW5lLXN0YXJ0OnZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYmVmb3JlKX0uc3dpcGVyLWNlbnRlcmVkLnN3aXBlci1ob3Jpem9udGFsPi5zd2lwZXItd3JhcHBlcjo6YmVmb3Jle2hlaWdodDoxMDAlO21pbi1oZWlnaHQ6MXB4O3dpZHRoOnZhcigtLXN3aXBlci1jZW50ZXJlZC1vZmZzZXQtYWZ0ZXIpfS5zd2lwZXItY2VudGVyZWQuc3dpcGVyLXZlcnRpY2FsPi5zd2lwZXItd3JhcHBlcj4uc3dpcGVyLXNsaWRlOmZpcnN0LWNoaWxke21hcmdpbi1ibG9jay1zdGFydDp2YXIoLS1zd2lwZXItY2VudGVyZWQtb2Zmc2V0LWJlZm9yZSl9LnN3aXBlci1jZW50ZXJlZC5zd2lwZXItdmVydGljYWw+LnN3aXBlci13cmFwcGVyOjpiZWZvcmV7d2lkdGg6MTAwJTttaW4td2lkdGg6MXB4O2hlaWdodDp2YXIoLS1zd2lwZXItY2VudGVyZWQtb2Zmc2V0LWFmdGVyKX0uc3dpcGVyLWNlbnRlcmVkPi5zd2lwZXItd3JhcHBlcj4uc3dpcGVyLXNsaWRle3Njcm9sbC1zbmFwLWFsaWduOmNlbnRlciBjZW50ZXJ9XG5cblxuLnN3aXBlci1wYWdpbmF0aW9ue3Bvc2l0aW9uOmFic29sdXRlO3RleHQtYWxpZ246Y2VudGVyO3RyYW5zaXRpb246LjNzIG9wYWNpdHk7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKTt6LWluZGV4OjEwfS5zd2lwZXItcGFnaW5hdGlvbi5zd2lwZXItcGFnaW5hdGlvbi1oaWRkZW57b3BhY2l0eTowfS5zd2lwZXItaG9yaXpvbnRhbD4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cywuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLC5zd2lwZXItcGFnaW5hdGlvbi1jdXN0b20sLnN3aXBlci1wYWdpbmF0aW9uLWZyYWN0aW9ue2JvdHRvbToxMHB4O2xlZnQ6MDt3aWR0aDoxMDAlfS5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWN7b3ZlcmZsb3c6aGlkZGVuO2ZvbnQtc2l6ZTowfS5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHt0cmFuc2Zvcm06c2NhbGUoLjMzKTtwb3NpdGlvbjpyZWxhdGl2ZX0uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZle3RyYW5zZm9ybTpzY2FsZSgxKX0uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLW1haW57dHJhbnNmb3JtOnNjYWxlKDEpfS5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUtcHJldnt0cmFuc2Zvcm06c2NhbGUoLjY2KX0uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLXByZXYtcHJldnt0cmFuc2Zvcm06c2NhbGUoLjMzKX0uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZlLW5leHR7dHJhbnNmb3JtOnNjYWxlKC42Nil9LnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZS1uZXh0LW5leHR7dHJhbnNmb3JtOnNjYWxlKC4zMyl9LnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHt3aWR0aDp2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtd2lkdGgsdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsOHB4KSk7aGVpZ2h0OnZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1oZWlnaHQsdmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LXNpemUsOHB4KSk7ZGlzcGxheTppbmxpbmUtYmxvY2s7Ym9yZGVyLXJhZGl1czo1MCU7YmFja2dyb3VuZDp2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtY29sb3IsIzAwMCk7b3BhY2l0eTp2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaW5hY3RpdmUtb3BhY2l0eSwgLjIpfWJ1dHRvbi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXR7Ym9yZGVyOm5vbmU7bWFyZ2luOjA7cGFkZGluZzowO2JveC1zaGFkb3c6bm9uZTstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9LnN3aXBlci1wYWdpbmF0aW9uLWNsaWNrYWJsZSAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0e2N1cnNvcjpwb2ludGVyfS5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQ6b25seS1jaGlsZHtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtYWN0aXZle29wYWNpdHk6dmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LW9wYWNpdHksIDEpO2JhY2tncm91bmQ6dmFyKC0tc3dpcGVyLXBhZ2luYXRpb24tY29sb3IsdmFyKC0tc3dpcGVyLXRoZW1lLWNvbG9yKSl9LnN3aXBlci1wYWdpbmF0aW9uLXZlcnRpY2FsLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMsLnN3aXBlci12ZXJ0aWNhbD4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0c3tyaWdodDoxMHB4O3RvcDo1MCU7dHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDBweCwtNTAlLDApfS5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQsLnN3aXBlci12ZXJ0aWNhbD4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0e21hcmdpbjp2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtdmVydGljYWwtZ2FwLDZweCkgMDtkaXNwbGF5OmJsb2NrfS5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYywuc3dpcGVyLXZlcnRpY2FsPi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pY3t0b3A6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO3dpZHRoOjhweH0uc3dpcGVyLXBhZ2luYXRpb24tdmVydGljYWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCwuc3dpcGVyLXZlcnRpY2FsPi5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3RyYW5zaXRpb246LjJzIHRyYW5zZm9ybSwuMnMgdG9wfS5zd2lwZXItaG9yaXpvbnRhbD4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LC5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHttYXJnaW46MCB2YXIoLS1zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQtaG9yaXpvbnRhbC1nYXAsNHB4KX0uc3dpcGVyLWhvcml6b250YWw+LnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljLC5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWlje2xlZnQ6NTAlO3RyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO3doaXRlLXNwYWNlOm5vd3JhcH0uc3dpcGVyLWhvcml6b250YWw+LnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy1keW5hbWljIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQsLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0cy5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXRzLWR5bmFtaWMgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHt0cmFuc2l0aW9uOi4ycyB0cmFuc2Zvcm0sLjJzIGxlZnR9LnN3aXBlci1ob3Jpem9udGFsLnN3aXBlci1ydGw+LnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldHMtZHluYW1pYyAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0e3RyYW5zaXRpb246LjJzIHRyYW5zZm9ybSwuMnMgcmlnaHR9LnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFye2JhY2tncm91bmQ6cmdiYSgwLDAsMCwuMjUpO3Bvc2l0aW9uOmFic29sdXRlfS5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2JhciAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItZmlsbHtiYWNrZ3JvdW5kOnZhcigtLXN3aXBlci1wYWdpbmF0aW9uLWNvbG9yLHZhcigtLXN3aXBlci10aGVtZS1jb2xvcikpO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3RyYW5zZm9ybTpzY2FsZSgwKTt0cmFuc2Zvcm0tb3JpZ2luOmxlZnQgdG9wfS5zd2lwZXItcnRsIC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2JhciAuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItZmlsbHt0cmFuc2Zvcm0tb3JpZ2luOnJpZ2h0IHRvcH0uc3dpcGVyLWhvcml6b250YWw+LnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi1ob3Jpem9udGFsLC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi12ZXJ0aWNhbC5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZSwuc3dpcGVyLXZlcnRpY2FsPi5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci5zd2lwZXItcGFnaW5hdGlvbi1wcm9ncmVzc2Jhci1vcHBvc2l0ZXt3aWR0aDoxMDAlO2hlaWdodDo0cHg7bGVmdDowO3RvcDowfS5zd2lwZXItaG9yaXpvbnRhbD4uc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXIuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUsLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLnN3aXBlci1wYWdpbmF0aW9uLWhvcml6b250YWwuc3dpcGVyLXBhZ2luYXRpb24tcHJvZ3Jlc3NiYXItb3Bwb3NpdGUsLnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFyLnN3aXBlci1wYWdpbmF0aW9uLXZlcnRpY2FsLC5zd2lwZXItdmVydGljYWw+LnN3aXBlci1wYWdpbmF0aW9uLXByb2dyZXNzYmFye3dpZHRoOjRweDtoZWlnaHQ6MTAwJTtsZWZ0OjA7dG9wOjB9LnN3aXBlci1wYWdpbmF0aW9uLWxvY2t7ZGlzcGxheTpub25lfVxuXG46cm9vdHstLXN3aXBlci1uYXZpZ2F0aW9uLXNpemU6NDRweH0uc3dpcGVyLWJ1dHRvbi1uZXh0LC5zd2lwZXItYnV0dG9uLXByZXZ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjUwJTt3aWR0aDpjYWxjKHZhcigtLXN3aXBlci1uYXZpZ2F0aW9uLXNpemUpLyA0NCAqIDI3KTtoZWlnaHQ6dmFyKC0tc3dpcGVyLW5hdmlnYXRpb24tc2l6ZSk7bWFyZ2luLXRvcDpjYWxjKDBweCAtICh2YXIoLS1zd2lwZXItbmF2aWdhdGlvbi1zaXplKS8gMikpO3otaW5kZXg6MTA7Y3Vyc29yOnBvaW50ZXI7ZGlzcGxheTpmbGV4O2FsaWduLWl0ZW1zOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2NvbG9yOnZhcigtLXN3aXBlci1uYXZpZ2F0aW9uLWNvbG9yLHZhcigtLXN3aXBlci10aGVtZS1jb2xvcikpfS5zd2lwZXItYnV0dG9uLW5leHQuc3dpcGVyLWJ1dHRvbi1kaXNhYmxlZCwuc3dpcGVyLWJ1dHRvbi1wcmV2LnN3aXBlci1idXR0b24tZGlzYWJsZWR7b3BhY2l0eTouMzU7Y3Vyc29yOmF1dG87cG9pbnRlci1ldmVudHM6bm9uZX0uc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyLC5zd2lwZXItYnV0dG9uLXByZXY6YWZ0ZXJ7Zm9udC1mYW1pbHk6c3dpcGVyLWljb25zO2ZvbnQtc2l6ZTp2YXIoLS1zd2lwZXItbmF2aWdhdGlvbi1zaXplKTt0ZXh0LXRyYW5zZm9ybTpub25lIWltcG9ydGFudDtsZXR0ZXItc3BhY2luZzowO3RleHQtdHJhbnNmb3JtOm5vbmU7Zm9udC12YXJpYW50OmluaXRpYWw7bGluZS1oZWlnaHQ6MX0uc3dpcGVyLWJ1dHRvbi1wcmV2LC5zd2lwZXItcnRsIC5zd2lwZXItYnV0dG9uLW5leHR7bGVmdDoxMHB4O3JpZ2h0OmF1dG99LnN3aXBlci1idXR0b24tcHJldjphZnRlciwuc3dpcGVyLXJ0bCAuc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVye2NvbnRlbnQ6J3ByZXYnfS5zd2lwZXItYnV0dG9uLW5leHQsLnN3aXBlci1ydGwgLnN3aXBlci1idXR0b24tcHJldntyaWdodDoxMHB4O2xlZnQ6YXV0b30uc3dpcGVyLWJ1dHRvbi1uZXh0OmFmdGVyLC5zd2lwZXItcnRsIC5zd2lwZXItYnV0dG9uLXByZXY6YWZ0ZXJ7Y29udGVudDonbmV4dCd9LnN3aXBlci1idXR0b24tbG9ja3tkaXNwbGF5Om5vbmV9IiwiLnByb2R1Y3Rpdml0eSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLnNsaWRlLXN3aXBlciB7XHJcbiAgICBoZWlnaHQ6IDU0OHB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG4uc2xpZGUtc3dpcGVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6dXJsKFwiLi4vaW1nL3NsaWRlci5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRsZykge1xyXG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICB9XHJcbn1cclxuLnN3aXBlciB7XHJcbiAgICBcclxuICAgICYtdGV4dCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogLTEzM3B4O1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCAxNXB4IDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC05NXB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmX19zdWJ0aXRsZSB7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDE2cHg7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiRibHVlU2Vjb25kO1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNDhweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDI4cHg7XHJcbiAgICAgICAgICAgIG1heC13aWR0aDogNTAycHg7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgJl9faWNvbiB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgbGluZWFyO1xyXG4gICAgICAgICAgICB3aWR0aDogNTJweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MnB4O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTAsIDI0OSwgMjQ5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmOmhvdmVyIGRpdiB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRibHVlU2Vjb25kO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYgZGl2IHtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGxpbmVhcjtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNS41cHggMCA1LjVweCAxMHB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkYmx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMDtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIHJpZ2h0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiLnNwb25zb3JzIHtcclxuICAgIG1hcmdpbjogMzVweCAwcHg7XHJcbiAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIG1heC13aWR0aDogOTE4cHg7XHJcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDE1cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faXRlbXMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgQG1lZGlhKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgZmxleC13cmFwOiBub3dyYXA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAgICAgZmxleDogMSAxIDUwJTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLXNlbGY6IGJhc2VsaW5lO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIEBtZWRpYShtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgIGZsZXg6IDEgMSAyMCU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2ltZyB7XHJcbiAgICB9XHJcbn1cclxuIiwiLnBsYW4ge1xyXG4gICAgcGFkZGluZzoxNzBweCAwcHggMjE2cHggMHB4O1xyXG4gICAgYmFja2dyb3VuZDogI0Y1RjhGRjtcclxuICAgICZfX2NvbnRhaW5lciB7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA5MjVweDtcclxuICAgICAgICBwYWRkaW5nOiAwIDE1cHg7XHJcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6NjkycHgpIHtcclxuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IC04MiU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6ODI4cHgpIHtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAtNDElO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IC0zMiU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDM2cHg7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA0MTNweDtcclxuICAgIH1cclxuICAgICZfX3N1YnRpdGxlIHtcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjdweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDtcclxuICAgICAgICBjb2xvcjogJGJsdWVTZWNvbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjdweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19idG5zIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA0N3B4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokc20pIHtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1ibHVlIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEzMHB4O1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokc20pIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRibHVlRm91cnRoO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiAwcHggNXB4IDE1cHggcmdiYSgxODgsIDE5OSwgMjU1LCAwLjc1KTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxM3B4IDI1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDMxcHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogM3B4O1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAjZjBlYmViO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDojM2Y2ZmQ4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6aG92ZXI6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2YwZWJlYjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmIHNwYW4ge1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OiAtMTJweDtcclxuICAgICAgICAgICAgICAgICAgICBib3R0b206IDNweDtcclxuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBsaW5lYXI7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDZweDtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMDtcclxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDMuNnB4IDAgMy42cHggNi41cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtZ3JleSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JHNtKSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogaW5pdGlhbDtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB3aWR0aDogMTMwcHg7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmx1ZVRoaXJkO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjRDFEMUU0O1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAycHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEzcHggMjFweDtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYm9yZGVyIDAuM3MgbGluZWFyO1xyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNiNWI1Yzc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiLmFib3V0IHtcclxuICAgIHBhZGRpbmc6IDUwcHggMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi9pbWcvY2xvdWRzLnBuZycpO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICBwYWRkaW5nOiAxMDBweCAwcHg7XHJcbiAgICB9XHJcbiAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICZfX3RpdGxlIHtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gICAgICAgIGNvbG9yOiRibHVlU2Vjb25kO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3JvdyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogNzdweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29sdW1uIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgICAgIGZsZXg6IDAgMSAxMDAlO1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgNTAlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgZmxleDogMCAxIDI1JTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCk6YWZ0ZXIge1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6NjAlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogLTE3cHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjhweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I0RBRTRGRSA7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19pdGVtIHtcclxuICAgIH1cclxufVxyXG4uaXRlbS1hYm91dCB7XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGNvbG9yOiAjNDA3NEY4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDMzcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDEwMDtcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE5cHg7XHJcbiAgICAgICAgY29sb3I6ICNBREIzQ0I7XHJcbiAgICAgICAgbWF4LXdpZHRoOiAxNDBweDtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjVweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi5hYm91dCB7XHJcbiAgICAmX2J0bnMge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDI4cHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRtZCkge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiA5MnB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX29yIHtcclxuICAgICAgICBmb250LWZhbWlseTogXCJSb2JvdG9cIjtcclxuICAgICAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgICAgICBjb2xvcjogI0FEQjNDQjtcclxuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBtYXJnaW46IDAgMTJweDtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDo0MDBweCkge1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgMzBweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JHNtKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjowIDQ4cHg7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDo0MDBweCkge1xyXG4gICAgICAgICAgICAmOmJlZm9yZSwgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDFweDtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNEQUU0RkU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAzMnB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDE2cHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnRucy1yZWQge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNGRkQ3RDc7XHJcbiAgICAgICAgY29sb3I6ICNENDNGM0Y7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyO1xyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZWNiNWI1O1xyXG4gICAgICAgICAgICBjb2xvcjogI2FmMzEzMTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fYnRucy1ibHVlIHtcclxuICAgIH1cclxufVxyXG4iLCIucHJvZHVjdGl2aXR5IHtcclxuXHJcbiAgICAmX19yb3cge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbHVtbiB7XHJcbiAgICAgICAgZmxleDogMCAxIDEwMCU7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgIGZsZXg6IDAgMSA1MCU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtbGVmdCB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgyMjkuMzJkZWcsICM2ODg4RkYgMTIuNzclLCAjNUU4MEZGIDczLjExJSk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokc20pIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiByaWdodDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDkwcHg7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtcmlnaHQge1xyXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokc20pIHtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogNDBweDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiA5MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMDEuNDhkZWcsICNFOUVGRkYgNDEuNTYlLCAjRTBFOUZGIDgxLjUzJSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2l0ZW0ge1xyXG4gICAgICAgIG1hcmdpbjogMzJweCAwcHg7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgbWFyZ2luOiA2N3B4IDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fcGVyY2VudHMge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbiAgICAgICAgZm9udC1zaXplOiA0OHB4O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAwLjAzZW07XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JGxnKSB7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjRweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJi1sZWZ0IHtcclxuICAgICAgICAgICAgY29sb3I6ICNGRkZGRkY7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtcmlnaHQge1xyXG4gICAgICAgICAgICBjb2xvcjogIzVFODBGRjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcHJpY2Uge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEycHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcclxuICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMDNlbTtcclxuICAgICAgICBjb2xvcjogI0ZGRkZGRjtcclxuICAgICAgICBtYXJnaW46IDAgYXV0bztcclxuICAgICAgICBtYXgtd2lkdGg6IDI2MHB4O1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgICAgICBtYXJnaW46IGluaXRpYWw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgICAmLWxlZnQge1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JHNtKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLXJpZ2h0IHtcclxuICAgICAgICAgICAgY29sb3I6ICM1RTgwRkY7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIi5ibG9nIHtcclxuICAgIGJhY2tncm91bmQ6ICNGNUY4RkY7XHJcbiAgICAmX19pbm5lciB7XHJcbiAgICAgICAgbWFyZ2luOjI1cHggMDtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbWQpIHtcclxuICAgICAgICAgICAgbWFyZ2luOiAxMDRweCAwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fY29udGFpbmVyIHtcclxuICAgICAgICBtYXgtd2lkdGg6IDk1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3N1YnRpdGxlIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgICAgICBmb250LWZhbWlseTogXCJRdWlja3NhbmRcIjtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgICAgICBjb2xvcjogIzNENEY5RjtcclxuICAgIH1cclxuXHJcbiAgICAmX19zd2lwZXIge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDM1cHg7XHJcbiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JG1kKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDc1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3N3aXBlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG4gICAgJl9fbmF2aWdhdGlvbiB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgfVxyXG59XHJcbi50aXRsZSB7XHJcbn1cclxuLnN3aXBlciB7XHJcbn1cclxuLnN3aXBlci13cmFwcGVyIHtcclxufVxyXG4uc3dpcGVyLXNsaWRlIHtcclxufVxyXG4uYm9keV9fbW9iaWxlIC5zd2lwZV9fZ2FsbGVyeS1iaWc6YmVmb3JlIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbn1cclxuaW1nW3NyYz1cIi4uL2ltZy9nYWxsZXJ5My5qcGdcIl0ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xyXG59XHJcbi5zd2lwZSB7XHJcbiAgICAmX19jb250YWluZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNGRkZGRkY7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgcGFkZGluZzogNDBweCAxMHB4O1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA2M3B4IDQxcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmX19nYWxsZXJ5IHtcclxuICAgICAgICBmbGV4OiAwIDEgMTAwJTtcclxuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbGcpIHtcclxuICAgICAgICAgICAgZmxleDogMCAxIDUwJTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnIgMWZyO1xyXG4gICAgICAgIGdyaWQtZ2FwOiAxMnB4O1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XHJcbiAgICAgICAgfSBcclxuICAgICAgICAmLWJpZ3tcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAmIGltZyB7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6JGxnKSB7ICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xyXG4gICAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEgLyAzO1xyXG4gICAgICAgICAgICAgICAgJiBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgICY6aG92ZXI6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICAgICAgICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IGFsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAmOmJlZm9yZSB7XHJcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjFzIGxpbmVhcjtcclxuICAgICAgICAgICAgICAgIHZpc2liaWxpdHk6IHZpc2libGU7XHJcbiAgICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcclxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsLTUwJSk7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc3ZnL2xvb2suc3ZnXCIpO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICBAbWVkaWEobWF4LXdpZHRoOiA5NTBweCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoMzVweCArICg2NSAtIDM1KSAqICgoMTAwdncgLSAzMjBweCkgLyAoOTUwIC0gMzIwKSkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDpjYWxjKDM1cHggKyAoNjUgLSAzNSkgKiAoKDEwMHZ3IC0gMzIwcHgpIC8gKDk1MCAtIDMyMCkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYtc21hbGwge1xyXG4gICAgICAgICAgICAmIGltZyB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBpbml0aWFsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtMiB7XHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDokbGcpIHtcclxuICAgICAgICAgICAgICAgICAgICBncmlkLWNvbHVtbjogLTM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgZmxleDogMCAxIDEwMCU7XHJcbiAgICAgICAgbWFyZ2luOiAyMHB4IDBweCAwcHggMHB4O1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRsZykge1xyXG4gICAgICAgICAgICBmbGV4OiAwIDEgNTAlO1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweCAwcHggMHB4IDY3cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgICAgICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgICAgIGNvbG9yOiAjM0Q0RjlGO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbiAgICAgICAgZmxleDogIDEgMSBhdXRvO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2V4dHJhIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgQG1lZGlhIChtYXgtd2lkdGg6JGxnKSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3JlYWQge1xyXG4gICAgfVxyXG5cclxuICAgICZfX2FkZCB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiUXVpY2tzYW5kXCI7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgICAgIGNvbG9yOiAjQTZCNkRBO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xyXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiRzbSkge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMjRweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC4zcyBsaW5lYXI7XHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiM3NDg2YjEgO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbn1cclxuLnN3aXBlci1idXR0b24tcHJldiwgLnN3aXBlci1idXR0b24tbmV4dCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgQG1lZGlhIChtaW4td2lkdGg6JHhsKSB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB9XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHg7XHJcbiAgICB3aWR0aDogMjRweDtcclxuICAgIGhlaWdodDogNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xyXG4gICAgdG9wOiA1MCU7XHJcbiAgICAmOmFmdGVyIHtcclxuICAgICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiA2cHg7XHJcbiAgICAgICAgaGVpZ2h0OiA2cHg7XHJcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xyXG4gICAgfVxyXG59XHJcbi5zd2lwZXItYnV0dG9uLXByZXYge1xyXG4gICAgICAgIGxlZnQ6IC03NXB4O1xyXG4gICAgICAgICY6YWZ0ZXIge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQ7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIGJvdHRvbTogLTJweFxyXG4gICAgICAgIH1cclxufVxyXG4uc3dpcGVyLWJ1dHRvbi1uZXh0IHtcclxuICAgIHJpZ2h0OiAtNzVweDtcclxuICAgICY6OmFmdGVyIHtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQ7XHJcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQ7XHJcbiAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgYm90dG9tOiAtMnB4XHJcbiAgICB9XHJcbn0iLCJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiAnbGcnO1xyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9sZy53b2ZmMj9pbzlhNmtcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi4uL2ZvbnRzL2xnLnR0Zj9pbzlhNmtcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL2xnLndvZmY/aW85YTZrXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi4uL2ZvbnRzL2xnLnN2Zz9pbzlhNmsjbGdcIikgZm9ybWF0KFwic3ZnXCIpO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgIGZvbnQtZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1pY29uIHtcclxuICAgIC8qIHVzZSAhaW1wb3J0YW50IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggYnJvd3NlciBleHRlbnNpb25zIHRoYXQgY2hhbmdlIGZvbnRzICovXHJcbiAgICBmb250LWZhbWlseTogJ2xnJyAhaW1wb3J0YW50O1xyXG4gICAgc3BlYWs6IG5ldmVyO1xyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcclxuICAgIGZvbnQtdmFyaWFudDogbm9ybWFsO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICBsaW5lLWhlaWdodDogMTtcclxuICAgIC8qIEJldHRlciBGb250IFJlbmRlcmluZyA9PT09PT09PT09PSAqL1xyXG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbiAgICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xyXG4gIH1cclxuICBcclxuICAubGctY29udGFpbmVyIHtcclxuICAgIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWksIC1hcHBsZS1zeXN0ZW0sICdTZWdvZSBVSScsIFJvYm90bywgJ0hlbHZldGljYSBOZXVlJywgQXJpYWwsICdOb3RvIFNhbnMnLCAnTGliZXJhdGlvbiBTYW5zJywgc2Fucy1zZXJpZiwgJ0FwcGxlIENvbG9yIEVtb2ppJywgJ1NlZ29lIFVJIEVtb2ppJywgJ1NlZ29lIFVJIFN5bWJvbCcsICdOb3RvIENvbG9yIEVtb2ppJztcclxuICB9XHJcbiAgXHJcbiAgLmxnLW5leHQsXHJcbiAgLmxnLXByZXYge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQ1KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgIGNvbG9yOiAjOTk5O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTBweDtcclxuICAgIHBhZGRpbmc6IDhweCAxMHB4IDlweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNTAlO1xyXG4gICAgei1pbmRleDogMTA4MDtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1uZXh0LmRpc2FibGVkLFxyXG4gIC5sZy1wcmV2LmRpc2FibGVkIHtcclxuICAgIG9wYWNpdHk6IDAgIWltcG9ydGFudDtcclxuICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW5leHQ6aG92ZXI6bm90KC5kaXNhYmxlZCksXHJcbiAgLmxnLXByZXY6aG92ZXI6bm90KC5kaXNhYmxlZCkge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zaW5nbGUtaXRlbSAubGctbmV4dCwgLmxnLXNpbmdsZS1pdGVtXHJcbiAgLmxnLXByZXYge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW5leHQge1xyXG4gICAgcmlnaHQ6IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1uZXh0OmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnXFxlMDk1JztcclxuICB9XHJcbiAgXHJcbiAgLmxnLXByZXYge1xyXG4gICAgbGVmdDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXByZXY6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJ1xcZTA5NCc7XHJcbiAgfVxyXG4gIFxyXG4gIEAtd2Via2l0LWtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xyXG4gICAgMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQC1tb3ota2V5ZnJhbWVzIGxnLXJpZ2h0LWVuZCB7XHJcbiAgICAwJSB7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICB9XHJcbiAgICA1MCUge1xyXG4gICAgICBsZWZ0OiAtMzBweDtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBALW1zLWtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xyXG4gICAgMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQGtleWZyYW1lcyBsZy1yaWdodC1lbmQge1xyXG4gICAgMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgbGVmdDogLTMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQC13ZWJraXQta2V5ZnJhbWVzIGxnLWxlZnQtZW5kIHtcclxuICAgIDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICAgIDUwJSB7XHJcbiAgICAgIGxlZnQ6IDMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQC1tb3ota2V5ZnJhbWVzIGxnLWxlZnQtZW5kIHtcclxuICAgIDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICAgIDUwJSB7XHJcbiAgICAgIGxlZnQ6IDMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgQC1tcy1rZXlmcmFtZXMgbGctbGVmdC1lbmQge1xyXG4gICAgMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgbGVmdDogMzBweDtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICBAa2V5ZnJhbWVzIGxnLWxlZnQtZW5kIHtcclxuICAgIDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICAgIDUwJSB7XHJcbiAgICAgIGxlZnQ6IDMwcHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgbGVmdDogMDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyLmxnLXJpZ2h0LWVuZCAubGctb2JqZWN0IHtcclxuICAgIC13ZWJraXQtYW5pbWF0aW9uOiBsZy1yaWdodC1lbmQgMC4zcztcclxuICAgIC1vLWFuaW1hdGlvbjogbGctcmlnaHQtZW5kIDAuM3M7XHJcbiAgICBhbmltYXRpb246IGxnLXJpZ2h0LWVuZCAwLjNzO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIH1cclxuICBcclxuICAubGctb3V0ZXIubGctbGVmdC1lbmQgLmxnLW9iamVjdCB7XHJcbiAgICAtd2Via2l0LWFuaW1hdGlvbjogbGctbGVmdC1lbmQgMC4zcztcclxuICAgIC1vLWFuaW1hdGlvbjogbGctbGVmdC1lbmQgMC4zcztcclxuICAgIGFuaW1hdGlvbjogbGctbGVmdC1lbmQgMC4zcztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXRvb2xiYXIge1xyXG4gICAgei1pbmRleDogMTA4MjtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW1lZGlhLW92ZXJsYXAgLmxnLXRvb2xiYXIge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDBkZWcsIHJnYmEoMCwgMCwgMCwgMCksIHJnYmEoMCwgMCwgMCwgMC40KSk7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy10b29sYmFyIC5sZy1pY29uIHtcclxuICAgIGNvbG9yOiAjOTk5O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgaGVpZ2h0OiA0N3B4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDI3cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xyXG4gICAgb3V0bGluZTogbWVkaXVtIG5vbmU7XHJcbiAgICB3aWxsLWNoYW5nZTogY29sb3I7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGNvbG9yIDAuMnMgbGluZWFyO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogY29sb3IgMC4ycyBsaW5lYXI7XHJcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjJzIGxpbmVhcjtcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG4gIH1cclxuICBcclxuICAubGctdG9vbGJhciAubGctaWNvbi5sZy1pY29uLTE4IHtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXRvb2xiYXIgLmxnLWljb246aG92ZXIge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy10b29sYmFyIC5sZy1jbG9zZTphZnRlciB7XHJcbiAgICBjb250ZW50OiAnXFxlMDcwJztcclxuICB9XHJcbiAgXHJcbiAgLmxnLXRvb2xiYXIgLmxnLW1heGltaXplIHtcclxuICAgIGZvbnQtc2l6ZTogMjJweDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXRvb2xiYXIgLmxnLW1heGltaXplOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICdcXGU5MGEnO1xyXG4gIH1cclxuICBcclxuICAubGctdG9vbGJhciAubGctZG93bmxvYWQ6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJ1xcZTBmMic7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zdWItaHRtbCB7XHJcbiAgICBjb2xvcjogI2VlZTtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHBhZGRpbmc6IDEwcHggNDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHotaW5kZXg6IDEwODA7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMHM7XHJcbiAgICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMHM7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zdWItaHRtbCBoNCB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXN1Yi1odG1sIHAge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgbWFyZ2luOiA1cHggMCAwO1xyXG4gIH1cclxuICBcclxuICAubGctc3ViLWh0bWwgYSB7XHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLXN1Yi1odG1sIGE6aG92ZXIge1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1tZWRpYS1vdmVybGFwIC5sZy1zdWItaHRtbCB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCByZ2JhKDAsIDAsIDAsIDApLCByZ2JhKDAsIDAsIDAsIDAuNikpO1xyXG4gIH1cclxuICBcclxuICAubGctaXRlbSAubGctc3ViLWh0bWwge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gIH1cclxuICBcclxuICAubGctZXJyb3ItbXNnIHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjOTk5O1xyXG4gIH1cclxuICBcclxuICAubGctY291bnRlciB7XHJcbiAgICBjb2xvcjogIzk5OTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIHBhZGRpbmctbGVmdDogMjBweDtcclxuICAgIHBhZGRpbmctdG9wOiAxMnB4O1xyXG4gICAgaGVpZ2h0OiA0N3B4O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWNsb3NpbmcgLmxnLXRvb2xiYXIsXHJcbiAgLmxnLWNsb3NpbmcgLmxnLXByZXYsXHJcbiAgLmxnLWNsb3NpbmcgLmxnLW5leHQsXHJcbiAgLmxnLWNsb3NpbmcgLmxnLXN1Yi1odG1sIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDAuMDggY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMDggY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBjb2xvciAwLjA4IGxpbmVhcjtcclxuICAgIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4wOCBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIGNvbG9yIDAuMDggbGluZWFyO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogLW8tdHJhbnNmb3JtIDAuMDggY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMDggY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBjb2xvciAwLjA4IGxpbmVhcjtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjA4IGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjA4IGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgY29sb3IgMC4wOCBsaW5lYXI7XHJcbiAgfVxyXG4gIFxyXG4gIGJvZHk6bm90KC5sZy1mcm9tLWhhc2gpIC5sZy1vdXRlci5sZy1zdGFydC16b29tIC5sZy1pdGVtOm5vdCgubGctem9vbWFibGUpIC5sZy1pbWctd3JhcCxcclxuICBib2R5Om5vdCgubGctZnJvbS1oYXNoKSAubGctb3V0ZXIubGctc3RhcnQtem9vbSAubGctaXRlbTpub3QoLmxnLXpvb21hYmxlKSAubGctdmlkZW8tY29udCB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XHJcbiAgICAtby10cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiBzY2FsZTNkKDAuNSwgMC41LCAwLjUpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlM2QoMC41LCAwLjUsIDAuNSk7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtLCBvcGFjaXR5O1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpICFpbXBvcnRhbnQ7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgIWltcG9ydGFudDtcclxuICAgIC1vLXRyYW5zaXRpb246IC1vLXRyYW5zZm9ybSAyNTBtcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpICFpbXBvcnRhbnQ7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMjUwbXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICBib2R5Om5vdCgubGctZnJvbS1oYXNoKSAubGctb3V0ZXIubGctc3RhcnQtem9vbSAubGctaXRlbTpub3QoLmxnLXpvb21hYmxlKS5sZy1jb21wbGV0ZSAubGctaW1nLXdyYXAsXHJcbiAgYm9keTpub3QoLmxnLWZyb20taGFzaCkgLmxnLW91dGVyLmxnLXN0YXJ0LXpvb20gLmxnLWl0ZW06bm90KC5sZy16b29tYWJsZSkubGctY29tcGxldGUgLmxnLXZpZGVvLWNvbnQge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgLW8tdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUzZCgxLCAxLCAxKTtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZTNkKDEsIDEsIDEpO1xyXG4gIH1cclxuICBcclxuICAubGctZ3JvdXA6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiB0YWJsZTtcclxuICAgIGNsZWFyOiBib3RoO1xyXG4gIH1cclxuICBcclxuICAubGctY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gIH1cclxuICBcclxuICAubGctY29udGFpbmVyLmxnLXNob3cge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vbiB7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHVuc2V0O1xyXG4gIH1cclxuICBcclxuICAubGctdG9vbGJhcixcclxuICAubGctcHJldixcclxuICAubGctbmV4dCxcclxuICAubGctcGFnZXItb3V0ZXIsXHJcbiAgLmxnLWhpZGUtc3ViLWh0bWwgLmxnLXN1Yi1odG1sIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB3aWxsLWNoYW5nZTogdHJhbnNmb3JtLCBvcGFjaXR5O1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzO1xyXG4gICAgLW1vei10cmFuc2l0aW9uOiAtbW96LXRyYW5zZm9ybSAwLjI1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogLW8tdHJhbnNmb3JtIDAuMjVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjI1cyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yNXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMjVzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcztcclxuICB9XHJcbiAgXHJcbiAgLmxnLXNob3ctaW4gLmxnLXRvb2xiYXIsXHJcbiAgLmxnLXNob3ctaW4gLmxnLXByZXYsXHJcbiAgLmxnLXNob3ctaW4gLmxnLW5leHQsXHJcbiAgLmxnLXNob3ctaW4gLmxnLXBhZ2VyLW91dGVyIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zaG93LWluLmxnLWhpZGUtc3ViLWh0bWwgLmxnLXN1Yi1odG1sIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zaG93LWluIC5sZy1oaWRlLWl0ZW1zIC5sZy1wcmV2IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwcHgsIDAsIDApO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTBweCwgMCwgMCk7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1zaG93LWluIC5sZy1oaWRlLWl0ZW1zIC5sZy1uZXh0IHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTBweCwgMCwgMCk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwcHgsIDAsIDApO1xyXG4gIH1cclxuICBcclxuICAubGctc2hvdy1pbiAubGctaGlkZS1pdGVtcyAubGctdG9vbGJhciB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xMHB4LCAwKTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTEwcHgsIDApO1xyXG4gIH1cclxuICBcclxuICAubGctc2hvdy1pbiAubGctaGlkZS1pdGVtcy5sZy1oaWRlLXN1Yi1odG1sIC5sZy1zdWItaHRtbCB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDIwcHgsIDApO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAyMHB4LCAwKTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHotaW5kZXg6IDEwNTA7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgb3BhY2l0eTogMC4wMDE7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgd2lsbC1jaGFuZ2U6IGF1dG87XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTVzIGVhc2UgMHM7XHJcbiAgICAtby10cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTVzIGVhc2UgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMTVzIGVhc2UgMHM7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAqIHtcclxuICAgIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy16b29tLWZyb20taW1hZ2Uge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyLmxnLXZpc2libGUge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyLmxnLWNzczMgLmxnLWl0ZW06bm90KC5sZy1zdGFydC1lbmQtcHJvZ3Jlc3MpLmxnLXByZXYtc2xpZGUsIC5sZy1vdXRlci5sZy1jc3MzIC5sZy1pdGVtOm5vdCgubGctc3RhcnQtZW5kLXByb2dyZXNzKS5sZy1uZXh0LXNsaWRlLCAubGctb3V0ZXIubGctY3NzMyAubGctaXRlbTpub3QoLmxnLXN0YXJ0LWVuZC1wcm9ncmVzcykubGctY3VycmVudCB7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IGluaGVyaXQgIWltcG9ydGFudDtcclxuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IGluaGVyaXQgIWltcG9ydGFudDtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGluaGVyaXQgIWltcG9ydGFudDtcclxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBpbmhlcml0ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy1jc3MzLmxnLWRyYWdnaW5nIC5sZy1pdGVtLmxnLXByZXYtc2xpZGUsIC5sZy1vdXRlci5sZy1jc3MzLmxnLWRyYWdnaW5nIC5sZy1pdGVtLmxnLW5leHQtc2xpZGUsIC5sZy1vdXRlci5sZy1jc3MzLmxnLWRyYWdnaW5nIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHMgIWltcG9ydGFudDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy1ncmFiIGltZy5sZy1vYmplY3Qge1xyXG4gICAgY3Vyc29yOiAtd2Via2l0LWdyYWI7XHJcbiAgICBjdXJzb3I6IC1tb3otZ3JhYjtcclxuICAgIGN1cnNvcjogLW8tZ3JhYjtcclxuICAgIGN1cnNvcjogLW1zLWdyYWI7XHJcbiAgICBjdXJzb3I6IGdyYWI7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy1ncmFiYmluZyBpbWcubGctb2JqZWN0IHtcclxuICAgIGN1cnNvcjogbW92ZTtcclxuICAgIGN1cnNvcjogLXdlYmtpdC1ncmFiYmluZztcclxuICAgIGN1cnNvcjogLW1vei1ncmFiYmluZztcclxuICAgIGN1cnNvcjogLW8tZ3JhYmJpbmc7XHJcbiAgICBjdXJzb3I6IC1tcy1ncmFiYmluZztcclxuICAgIGN1cnNvcjogZ3JhYmJpbmc7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctY29udGVudCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctaW5uZXIge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBvcGFjaXR5IDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwcztcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMHM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIH1cclxuICBcclxuICAubGctb3V0ZXIgLmxnLWl0ZW0ge1xyXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAubGctb3V0ZXIgLmxnLWl0ZW06bm90KC5sZy1zdGFydC1lbmQtcHJvZ3Jlc3MpIHtcclxuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltYWdlcy9sb2FkaW5nLmdpZlwiKSBuby1yZXBlYXQgc2Nyb2xsIGNlbnRlciBjZW50ZXIgdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy1jc3MzIC5sZy1wcmV2LXNsaWRlLFxyXG4gIC5sZy1vdXRlci5sZy1jc3MzIC5sZy1jdXJyZW50LFxyXG4gIC5sZy1vdXRlci5sZy1jc3MzIC5sZy1uZXh0LXNsaWRlIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAubGctb3V0ZXIubGctY3NzIC5sZy1jdXJyZW50IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAubGctb3V0ZXIgLmxnLWl0ZW0sXHJcbiAgLmxnLW91dGVyIC5sZy1pbWctd3JhcCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyIC5sZy1pdGVtOmJlZm9yZSxcclxuICAubGctb3V0ZXIgLmxnLWltZy13cmFwOmJlZm9yZSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctaW1nLXdyYXAge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIGZvbnQtc2l6ZTogMDtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyIC5sZy1pdGVtLmxnLWNvbXBsZXRlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctaXRlbS5sZy1jdXJyZW50IHtcclxuICAgIHotaW5kZXg6IDEwNjA7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctb2JqZWN0IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctZW1wdHktaHRtbC5sZy1zdWItaHRtbCxcclxuICAubGctb3V0ZXIgLmxnLWVtcHR5LWh0bWwgLmxnLXN1Yi1odG1sIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlci5sZy1oaWRlLWRvd25sb2FkIC5sZy1kb3dubG9hZCB7XHJcbiAgICBvcGFjaXR5OiAwLjc1O1xyXG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1vdXRlciAubGctZmlyc3Qtc2xpZGUgLmxnLWR1bW15LWltZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDUwJTtcclxuICAgIGxlZnQ6IDUwJTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyLmxnLWNvbXBvbmVudHMtb3Blbjpub3QoLmxnLXpvb21lZCkgLmxnLWNvbXBvbmVudHMge1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAlLCAwKTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCUsIDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLW91dGVyLmxnLWNvbXBvbmVudHMtb3Blbjpub3QoLmxnLXpvb21lZCkgLmxnLXN1Yi1odG1sIHtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMnMgZWFzZS1vdXQgMC4xNXM7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1iYWNrZHJvcCB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICB6LWluZGV4OiAxMDQwO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICB3aWxsLWNoYW5nZTogYXV0bztcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAzMzNtcyBlYXNlLWluIDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAzMzNtcyBlYXNlLWluIDBzO1xyXG4gICAgdHJhbnNpdGlvbjogb3BhY2l0eSAzMzNtcyBlYXNlLWluIDBzO1xyXG4gIH1cclxuICBcclxuICAubGctYmFja2Ryb3AuaW4ge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWNzczMubGctbm8tdHJhbnMgLmxnLXByZXYtc2xpZGUsXHJcbiAgLmxnLWNzczMubGctbm8tdHJhbnMgLmxnLW5leHQtc2xpZGUsXHJcbiAgLmxnLWNzczMubGctbm8tdHJhbnMgLmxnLWN1cnJlbnQge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBub25lIDBzIGVhc2UgMHMgIWltcG9ydGFudDtcclxuICAgIC1tb3otdHJhbnNpdGlvbjogbm9uZSAwcyBlYXNlIDBzICFpbXBvcnRhbnQ7XHJcbiAgICAtby10cmFuc2l0aW9uOiBub25lIDBzIGVhc2UgMHMgIWltcG9ydGFudDtcclxuICAgIHRyYW5zaXRpb246IG5vbmUgMHMgZWFzZSAwcyAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy11c2UtY3NzMyAubGctaXRlbSB7XHJcbiAgICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIC1tb3otYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1jc3MzLmxnLWZhZGUgLmxnLWl0ZW0ubGctY3VycmVudCB7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1mYWRlIC5sZy1pdGVtLmxnLXByZXYtc2xpZGUsIC5sZy1jc3MzLmxnLWZhZGUgLmxnLWl0ZW0ubGctbmV4dC1zbGlkZSwgLmxnLWNzczMubGctZmFkZSAubGctaXRlbS5sZy1jdXJyZW50IHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAwLjFzIGVhc2UgMHM7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBlYXNlIDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjFzIGVhc2UgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IDAuMXMgZWFzZSAwcztcclxuICB9XHJcbiAgXHJcbiAgLmxnLWNzczMubGctdXNlLWNzczMgLmxnLWl0ZW0ubGctc3RhcnQtcHJvZ3Jlc3Mge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSkgMHM7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLjE3NSwgMC44ODUsIDAuMzIsIDEuMjc1KSAwcztcclxuICAgIC1vLXRyYW5zaXRpb246IC1vLXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMC4xNzUsIDAuODg1LCAwLjMyLCAxLjI3NSkgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAuMTc1LCAwLjg4NSwgMC4zMiwgMS4yNzUpIDBzO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1zdGFydC1lbmQtcHJvZ3Jlc3Mge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAtd2Via2l0LXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XHJcbiAgICAtbW96LXRyYW5zaXRpb246IC1tb3otdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcztcclxuICAgIC1vLXRyYW5zaXRpb246IC1vLXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHM7XHJcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbSB7XHJcbiAgICBvcGFjaXR5OiAwO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1wcmV2LXNsaWRlIHtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWNzczMubGctc2xpZGUubGctdXNlLWNzczMgLmxnLWl0ZW0ubGctbmV4dC1zbGlkZSB7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTAwJSwgMCwgMCk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsIDAsIDApO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1jdXJyZW50IHtcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG4gIH1cclxuICBcclxuICAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1wcmV2LXNsaWRlLCAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1uZXh0LXNsaWRlLCAubGctY3NzMy5sZy1zbGlkZS5sZy11c2UtY3NzMyAubGctaXRlbS5sZy1jdXJyZW50IHtcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMXMgZWFzZSAwcztcclxuICAgIC1tb3otdHJhbnNpdGlvbjogLW1vei10cmFuc2Zvcm0gMXMgY3ViaWMtYmV6aWVyKDAsIDAsIDAuMjUsIDEpIDBzLCBvcGFjaXR5IDAuMXMgZWFzZSAwcztcclxuICAgIC1vLXRyYW5zaXRpb246IC1vLXRyYW5zZm9ybSAxcyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yNSwgMSkgMHMsIG9wYWNpdHkgMC4xcyBlYXNlIDBzO1xyXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGN1YmljLWJlemllcigwLCAwLCAwLjI1LCAxKSAwcywgb3BhY2l0eSAwLjFzIGVhc2UgMHM7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWNvbnRhaW5lci5sZy1zaG93IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gIH1cclxuICBcclxuICAubGctY29udGFpbmVyLmxnLWRyYWdnaW5nLXZlcnRpY2FsIC5sZy1iYWNrZHJvcCB7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IDBzICFpbXBvcnRhbnQ7XHJcbiAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAubGctY29udGFpbmVyLmxnLWRyYWdnaW5nLXZlcnRpY2FsIC5sZy1jc3MzIC5sZy1pdGVtLmxnLWN1cnJlbnQge1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwcyAhaW1wb3J0YW50O1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMHMgIWltcG9ydGFudDtcclxuICAgIG9wYWNpdHk6IDE7XHJcbiAgfVxyXG4gIFxyXG4gIC5sZy1pbmxpbmUgLmxnLWJhY2tkcm9wLFxyXG4gIC5sZy1pbmxpbmUgLmxnLW91dGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWlubGluZSAubGctYmFja2Ryb3Age1xyXG4gICAgei1pbmRleDogMTtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWlubGluZSAubGctb3V0ZXIge1xyXG4gICAgei1pbmRleDogMjtcclxuICB9XHJcbiAgXHJcbiAgLmxnLWlubGluZSAubGctbWF4aW1pemU6YWZ0ZXIge1xyXG4gICAgY29udGVudDogJ1xcZTkwOSc7XHJcbiAgfVxyXG4gICIsIi5yZXZpZXdzIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxODBkZWcsICNFQUYwRkYgMCUsICNGNkY5RkYgMTAwJSk7XHJcbiAgICAmX19pbm5lciB7XHJcbiAgICAgICAgcGFkZGluZzogMTAwcHggMHB4O1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgZmxleDogMCAwIDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY29udGVudCB7XHJcbiAgICAgICAgd2lkdGg6IDUwJTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJl9fc3VidGl0bGUge1xyXG4gICAgICAgIGNvbG9yOiAjM0Q0RjlGO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDQxcHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxNHB4O1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIlF1aWNrc2FuZFwiO1xyXG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzZweDtcclxuICAgICAgICBjb2xvcjogIzNENEY5RjtcclxuICAgIH1cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIG1heC13aWR0aDogMzIzcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTRweDtcclxuICAgIH1cclxuICAgICZfX3NsaWRlciB7XHJcbiAgICAgICAgZmxleDogMCAwIDUwJTtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ== */
